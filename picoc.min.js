var Module;Module||(Module=eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));var moduleOverrides={},key;for(key in Module)Module.hasOwnProperty(key)&&(moduleOverrides[key]=Module[key]);var ENVIRONMENT_IS_NODE="object"===typeof process&&"function"===typeof require,ENVIRONMENT_IS_WEB="object"===typeof window,ENVIRONMENT_IS_WORKER="function"===typeof importScripts,ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;
if(ENVIRONMENT_IS_NODE){Module.print=function(b){process.stdout.write(b+"\n")};Module.printErr=function(b){process.stderr.write(b+"\n")};var nodeFS=require("fs"),nodePath=require("path");Module.read=function(b,c){b=nodePath.normalize(b);var a=nodeFS.readFileSync(b);a||b==nodePath.resolve(b)||(b=path.join(__dirname,"..","src",b),a=nodeFS.readFileSync(b));a&&!c&&(a=a.toString());return a};Module.readBinary=function(b){return Module.read(b,!0)};Module.load=function(b){globalEval(read(b))};Module.arguments=
process.argv.slice(2);module.exports=Module}else if(ENVIRONMENT_IS_SHELL)Module.print=print,"undefined"!=typeof printErr&&(Module.printErr=printErr),Module.read="undefined"!=typeof read?read:function(){throw"no read() available (jsc?)";},Module.readBinary=function(b){return read(b,"binary")},"undefined"!=typeof scriptArgs?Module.arguments=scriptArgs:"undefined"!=typeof arguments&&(Module.arguments=arguments),this.Module=Module;else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module.read=function(b){var c=
new XMLHttpRequest;c.open("GET",b,!1);c.send(null);return c.responseText};"undefined"!=typeof arguments&&(Module.arguments=arguments);if("undefined"!==typeof console)Module.print=function(b){console.log(b)},Module.printErr=function(b){console.log(b)};else{var TRY_USE_DUMP=!1;Module.print=TRY_USE_DUMP&&"undefined"!==typeof dump?function(b){dump(b)}:function(b){}}ENVIRONMENT_IS_WEB?this.Module=Module:Module.load=importScripts}else throw"Unknown runtime environment. Where are we?";
function globalEval(b){eval.call(null,b)}"undefined"==!Module.load&&Module.read&&(Module.load=function(b){globalEval(Module.read(b))});Module.print||(Module.print=function(){});Module.printErr||(Module.printErr=Module.print);Module.arguments||(Module.arguments=[]);Module.print=Module.print;Module.printErr=Module.printErr;Module.preRun=[];Module.postRun=[];for(key in moduleOverrides)moduleOverrides.hasOwnProperty(key)&&(Module[key]=moduleOverrides[key]);
var Runtime={stackSave:function(){return STACKTOP},stackRestore:function(b){STACKTOP=b},forceAlign:function(b,c){c=c||4;return 1==c?b:isNumber(b)&&isNumber(c)?Math.ceil(b/c)*c:isNumber(c)&&isPowerOfTwo(c)?"((("+b+")+"+(c-1)+")&"+-c+")":"Math.ceil(("+b+")/"+c+")*"+c},isNumberType:function(b){return b in Runtime.INT_TYPES||b in Runtime.FLOAT_TYPES},isPointerType:function(b){return"*"==b[b.length-1]},isStructType:function(b){return isPointerType(b)?!1:isArrayType(b)||/<?{ ?[^}]* ?}>?/.test(b)?!0:"%"==
b[0]},INT_TYPES:{i1:0,i8:0,i16:0,i32:0,i64:0},FLOAT_TYPES:{"float":0,"double":0},or64:function(b,c){var a=b|0|c|0,d=4294967296*(Math.round(b/4294967296)|Math.round(c/4294967296));return a+d},and64:function(b,c){var a=(b|0)&(c|0),d=4294967296*(Math.round(b/4294967296)&Math.round(c/4294967296));return a+d},xor64:function(b,c){var a=(b|0)^(c|0),d=4294967296*(Math.round(b/4294967296)^Math.round(c/4294967296));return a+d},getNativeTypeSize:function(b){switch(b){case "i1":case "i8":return 1;case "i16":return 2;
case "i32":return 4;case "i64":return 8;case "float":return 4;case "double":return 8;default:if("*"===b[b.length-1])return Runtime.QUANTUM_SIZE;if("i"===b[0])return b=parseInt(b.substr(1)),assert(0===b%8),b/8}},getNativeFieldSize:function(b){return Math.max(Runtime.getNativeTypeSize(b),Runtime.QUANTUM_SIZE)},dedup:function(b,c){var a={};return c?b.filter(function(b){return a[b[c]]?!1:a[b[c]]=!0}):b.filter(function(b){return a[b]?!1:a[b]=!0})},set:function(){for(var b="object"===typeof arguments[0]?
arguments[0]:arguments,c={},a=0;a<b.length;a++)c[b[a]]=0;return c},STACK_ALIGN:8,getAlignSize:function(b,c,a){return"i64"==b||"double"==b||a?8:b?Math.min(c||(b?Runtime.getNativeFieldSize(b):0),Runtime.QUANTUM_SIZE):Math.min(c,8)},calculateStructAlignment:function(b){b.flatSize=0;b.alignSize=0;var c=[],a=-1,d=0;b.flatIndexes=b.fields.map(function(e){d++;var f;if(Runtime.isNumberType(e)||Runtime.isPointerType(e))f=Runtime.getNativeTypeSize(e),e=Runtime.getAlignSize(e,f);else if(Runtime.isStructType(e))"0"===
e[1]?(f=0,e=Types.types[e]?Runtime.getAlignSize(null,Types.types[e].alignSize):b.alignSize||QUANTUM_SIZE):(f=Types.types[e].flatSize,e=Runtime.getAlignSize(null,Types.types[e].alignSize));else if("b"==e[0])f=e.substr(1)|0,e=1;else throw"Unclear type in struct: "+e+", in "+b.name_+" :: "+dump(Types.types[b.name_]);b.packed&&(e=1);b.alignSize=Math.max(b.alignSize,e);e=Runtime.alignMemory(b.flatSize,e);b.flatSize=e+f;0<=a&&c.push(e-a);return a=e});b.flatSize=Runtime.alignMemory(b.flatSize,b.alignSize);
0==c.length?b.flatFactor=b.flatSize:1==Runtime.dedup(c).length&&(b.flatFactor=c[0]);b.needsFlattening=1!=b.flatFactor;return b.flatIndexes},generateStructInfo:function(b,c,a){var d,e;if(c){a=a||0;d=("undefined"===typeof Types?Runtime.typeInfo:Types.types)[c];if(!d)return null;if(d.fields.length!=b.length)return printErr("Number of named fields must match the type for "+c+": possibly duplicate struct names. Cannot return structInfo"),null;e=d.flatIndexes}else d={fields:b.map(function(a){return a[0]})},
e=Runtime.calculateStructAlignment(d);var f={__size__:d.flatSize};c?b.forEach(function(b,c){if("string"===typeof b)f[b]=e[c]+a;else{var l,k;for(k in b)l=k;f[l]=Runtime.generateStructInfo(b[l],d.fields[c],e[c])}}):b.forEach(function(a,b){f[a[1]]=e[b]});return f},dynCall:function(b,c,a){if(a&&a.length)return assert(a.length==b.length-1),FUNCTION_TABLE[c].apply(null,a);assert(1==b.length);return FUNCTION_TABLE[c]()},addFunction:function(b){var c=FUNCTION_TABLE,a=c.length;assert(0===a%2);c.push(b);for(b=
0;1>b;b++)c.push(0);return a},removeFunction:function(b){FUNCTION_TABLE[b]=null},warnOnce:function(b){Runtime.warnOnce.shown||(Runtime.warnOnce.shown={});Runtime.warnOnce.shown[b]||(Runtime.warnOnce.shown[b]=1,Module.printErr(b))},funcWrappers:{},getFuncWrapper:function(b,c){assert(c);Runtime.funcWrappers[b]||(Runtime.funcWrappers[b]=function(){return Runtime.dynCall(c,b,arguments)});return Runtime.funcWrappers[b]},UTF8Processor:function(){var b=[],c=0;this.processCChar=function(a){a&=255;if(0==b.length){if(0==
(a&128))return String.fromCharCode(a);b.push(a);c=192==(a&224)?1:224==(a&240)?2:3;return""}if(c&&(b.push(a),c--,0<c))return"";a=b[0];var d=b[1],e=b[2],f=b[3];2==b.length?a=String.fromCharCode((a&31)<<6|d&63):3==b.length?a=String.fromCharCode((a&15)<<12|(d&63)<<6|e&63):(a=(a&7)<<18|(d&63)<<12|(e&63)<<6|f&63,a=String.fromCharCode(Math.floor((a-65536)/1024)+55296,(a-65536)%1024+56320));b.length=0;return a};this.processJSString=function(a){a=unescape(encodeURIComponent(a));for(var b=[],c=0;c<a.length;c++)b.push(a.charCodeAt(c));
return b}},stackAlloc:function(b){var c=STACKTOP;STACKTOP=STACKTOP+b|0;STACKTOP=STACKTOP+7&-8;assert((STACKTOP|0)<(STACK_MAX|0))|0;return c},staticAlloc:function(b){var c=STATICTOP;STATICTOP=STATICTOP+(assert(!staticSealed),b)|0;STATICTOP=STATICTOP+7&-8;return c},dynamicAlloc:function(b){var c=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+(assert(0<DYNAMICTOP),b)|0;DYNAMICTOP=DYNAMICTOP+7&-8;DYNAMICTOP>=TOTAL_MEMORY&&enlargeMemory();return c},alignMemory:function(b,c){return Math.ceil(b/(c?c:8))*(c?c:8)},makeBigInt:function(b,
c,a){return a?(b>>>0)+4294967296*(c>>>0):(b>>>0)+4294967296*(c|0)},GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0},__THREW__=0,setjmpId=1,setjmpLabels={},ABORT=!1,EXITSTATUS=0,undef=0,tempValue,tempInt,tempBigInt,tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD,tempI64,tempI64b,tempRet0,tempRet1,tempRet2,tempRet3,tempRet4,tempRet5,tempRet6,tempRet7,tempRet8,tempRet9;function assert(b,c){b||abort("Assertion failed: "+c)}var globalScope=this;
function ccall(b,c,a,d){return ccallFunc(getCFunc(b),c,a,d)}Module.ccall=ccall;function getCFunc(b){try{var c=Module["_"+b];c||(c=eval("_"+b))}catch(a){}assert(c,"Cannot call unknown function "+b+" (perhaps LLVM optimizations or closure removed it?)");return c}
function ccallFunc(b,c,a,d){function e(a,b){if("string"==b){if(null===a||void 0===a||0===a)return 0;a=intArrayFromString(a);b="array"}if("array"==b){f||(f=Runtime.stackSave());var c=Runtime.stackAlloc(a.length);writeArrayToMemory(a,c);return c}return a}var f=0,g=0;d=d?d.map(function(b){return e(b,a[g++])}):[];b=function(a,b){if("string"==b)return Pointer_stringify(a);assert("array"!=b);return a}(b.apply(null,d),c);f&&Runtime.stackRestore(f);return b}
function cwrap(b,c,a){var d=getCFunc(b);return function(){return ccallFunc(d,c,a,Array.prototype.slice.call(arguments))}}Module.cwrap=cwrap;
function setValue(b,c,a,d){a=a||"i8";"*"===a.charAt(a.length-1)&&(a="i32");switch(a){case "i1":HEAP8[b]=c;break;case "i8":HEAP8[b]=c;break;case "i16":HEAP16[b>>1]=c;break;case "i32":HEAP32[b>>2]=c;break;case "i64":tempI64=[c>>>0,(tempDouble=c,1<=Math_abs(tempDouble)?0<tempDouble?Math_min(Math_floor(tempDouble/4294967296),4294967295)>>>0:~~Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)];HEAP32[b>>2]=tempI64[0];HEAP32[b+4>>2]=tempI64[1];break;case "float":HEAPF32[b>>2]=c;break;case "double":HEAPF64[b>>
3]=c;break;default:abort("invalid type for setValue: "+a)}}Module.setValue=setValue;function getValue(b,c,a){c=c||"i8";"*"===c.charAt(c.length-1)&&(c="i32");switch(c){case "i1":return HEAP8[b];case "i8":return HEAP8[b];case "i16":return HEAP16[b>>1];case "i32":return HEAP32[b>>2];case "i64":return HEAP32[b>>2];case "float":return HEAPF32[b>>2];case "double":return HEAPF64[b>>3];default:abort("invalid type for setValue: "+c)}return null}Module.getValue=getValue;
var ALLOC_NORMAL=0,ALLOC_STACK=1,ALLOC_STATIC=2,ALLOC_DYNAMIC=3,ALLOC_NONE=4;Module.ALLOC_NORMAL=ALLOC_NORMAL;Module.ALLOC_STACK=ALLOC_STACK;Module.ALLOC_STATIC=ALLOC_STATIC;Module.ALLOC_DYNAMIC=ALLOC_DYNAMIC;Module.ALLOC_NONE=ALLOC_NONE;
function allocate(b,c,a,d){var e,f;"number"===typeof b?(e=!0,f=b):(e=!1,f=b.length);var g="string"===typeof c?c:null;a=a==ALLOC_NONE?d:[_malloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][void 0===a?ALLOC_STATIC:a](Math.max(f,g?1:c.length));if(e){d=a;assert(0==(a&3));for(b=a+(f&-4);d<b;d+=4)HEAP32[d>>2]=0;for(b=a+f;d<b;)HEAP8[d++|0]=0;return a}if("i8"===g)return b.subarray||b.slice?HEAPU8.set(b,a):HEAPU8.set(new Uint8Array(b),a),a;d=0;for(var h,l;d<f;){var k=b[d];"function"===typeof k&&
(k=Runtime.getFunctionIndex(k));e=g||c[d];0===e?d++:(assert(e,"Must know what type to store in allocate!"),"i64"==e&&(e="i32"),setValue(a+d,k,e),l!==e&&(h=Runtime.getNativeTypeSize(e),l=e),d+=h)}return a}Module.allocate=allocate;
function Pointer_stringify(b,c){for(var a=!1,d,e=0;;){assert(b+e<TOTAL_MEMORY);d=HEAPU8[b+e|0];if(128<=d)a=!0;else if(0==d&&!c)break;e++;if(c&&e==c)break}c||(c=e);var f="";if(!a){for(;0<c;)d=String.fromCharCode.apply(String,HEAPU8.subarray(b,b+Math.min(c,1024))),f=f?f+d:d,b+=1024,c-=1024;return f}a=new Runtime.UTF8Processor;for(e=0;e<c;e++)assert(b+e<TOTAL_MEMORY),d=HEAPU8[b+e|0],f+=a.processCChar(d);return f}Module.Pointer_stringify=Pointer_stringify;
function UTF16ToString(b){for(var c=0,a="";;){var d=HEAP16[b+2*c>>1];if(0==d)return a;++c;a+=String.fromCharCode(d)}}Module.UTF16ToString=UTF16ToString;function stringToUTF16(b,c){for(var a=0;a<b.length;++a){var d=b.charCodeAt(a);HEAP16[c+2*a>>1]=d}HEAP16[c+2*b.length>>1]=0}Module.stringToUTF16=stringToUTF16;function UTF32ToString(b){for(var c=0,a="";;){var d=HEAP32[b+4*c>>2];if(0==d)return a;++c;65536<=d?(d-=65536,a+=String.fromCharCode(55296|d>>10,56320|d&1023)):a+=String.fromCharCode(d)}}
Module.UTF32ToString=UTF32ToString;function stringToUTF32(b,c){for(var a=0,d=0;d<b.length;++d){var e=b.charCodeAt(d);if(55296<=e&&57343>=e)var f=b.charCodeAt(++d),e=65536+((e&1023)<<10)|f&1023;HEAP32[c+4*a>>2]=e;++a}HEAP32[c+4*a>>2]=0}Module.stringToUTF32=stringToUTF32;var PAGE_SIZE=4096;function alignMemoryPage(b){return b+4095&-4096}
var HEAP,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64,STATIC_BASE=0,STATICTOP=0,staticSealed=!1,STACK_BASE=0,STACKTOP=0,STACK_MAX=0,DYNAMIC_BASE=0,DYNAMICTOP=0;function enlargeMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value "+TOTAL_MEMORY+", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.")}
var TOTAL_STACK=Module.TOTAL_STACK||5242880,TOTAL_MEMORY=Module.TOTAL_MEMORY||16777216,FAST_MEMORY=Module.FAST_MEMORY||2097152;assert("undefined"!==typeof Int32Array&&"undefined"!==typeof Float64Array&&!!(new Int32Array(1)).subarray&&!!(new Int32Array(1)).set,"Cannot fallback to non-typed array case: Code is too specialized");var buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);
HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAPF64=new Float64Array(buffer);HEAP32[0]=255;assert(255===HEAPU8[0]&&0===HEAPU8[3],"Typed arrays 2 must be run on a little-endian system");Module.HEAP=HEAP;Module.HEAP8=HEAP8;Module.HEAP16=HEAP16;Module.HEAP32=HEAP32;Module.HEAPU8=HEAPU8;Module.HEAPU16=HEAPU16;Module.HEAPU32=HEAPU32;Module.HEAPF32=HEAPF32;Module.HEAPF64=HEAPF64;
function callRuntimeCallbacks(b){for(;0<b.length;){var c=b.shift();if("function"==typeof c)c();else{var a=c.func;"number"===typeof a?void 0===c.arg?Runtime.dynCall("v",a):Runtime.dynCall("vi",a,[c.arg]):a(void 0===c.arg?null:c.arg)}}}var __ATPRERUN__=[],__ATINIT__=[],__ATMAIN__=[],__ATEXIT__=[],__ATPOSTRUN__=[],runtimeInitialized=!1;
function preRun(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)addOnPreRun(Module.preRun.shift());callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){runtimeInitialized||(runtimeInitialized=!0,callRuntimeCallbacks(__ATINIT__))}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__)}
function postRun(){if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)addOnPostRun(Module.postRun.shift());callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(b){__ATPRERUN__.unshift(b)}Module.addOnPreRun=Module.addOnPreRun=addOnPreRun;function addOnInit(b){__ATINIT__.unshift(b)}Module.addOnInit=Module.addOnInit=addOnInit;function addOnPreMain(b){__ATMAIN__.unshift(b)}Module.addOnPreMain=Module.addOnPreMain=addOnPreMain;
function addOnExit(b){__ATEXIT__.unshift(b)}Module.addOnExit=Module.addOnExit=addOnExit;function addOnPostRun(b){__ATPOSTRUN__.unshift(b)}Module.addOnPostRun=Module.addOnPostRun=addOnPostRun;function intArrayFromString(b,c,a){b=(new Runtime.UTF8Processor).processJSString(b);a&&(b.length=a);c||b.push(0);return b}Module.intArrayFromString=intArrayFromString;
function intArrayToString(b){for(var c=[],a=0;a<b.length;a++){var d=b[a];255<d&&(assert(!1,"Character code "+d+" ("+String.fromCharCode(d)+")  at offset "+a+" not in 0x00-0xFF."),d&=255);c.push(String.fromCharCode(d))}return c.join("")}Module.intArrayToString=intArrayToString;function writeStringToMemory(b,c,a){b=intArrayFromString(b,a);for(a=0;a<b.length;)HEAP8[c+a|0]=b[a],a+=1}Module.writeStringToMemory=writeStringToMemory;
function writeArrayToMemory(b,c){for(var a=0;a<b.length;a++)HEAP8[c+a|0]=b[a]}Module.writeArrayToMemory=writeArrayToMemory;function writeAsciiToMemory(b,c,a){for(var d=0;d<b.length;d++)assert(b.charCodeAt(d)===b.charCodeAt(d)&255),HEAP8[c+d|0]=b.charCodeAt(d);a||(HEAP8[c+b.length|0]=0)}Module.writeAsciiToMemory=writeAsciiToMemory;function unSign(b,c,a,d){return 0<=b?b:32>=c?2*Math.abs(1<<c-1)+b:Math.pow(2,c)+b}
function reSign(b,c,a,d){if(0>=b)return b;a=32>=c?Math.abs(1<<c-1):Math.pow(2,c-1);b>=a&&(32>=c||b>a)&&(b=-2*a+b);return b}Math.imul||(Math.imul=function(b,c){var a=b&65535,d=c&65535;return a*d+((b>>>16)*d+a*(c>>>16)<<16)|0});Math.imul=Math.imul;
var Math_abs=Math.abs,Math_cos=Math.cos,Math_sin=Math.sin,Math_tan=Math.tan,Math_acos=Math.acos,Math_asin=Math.asin,Math_atan=Math.atan,Math_atan2=Math.atan2,Math_exp=Math.exp,Math_log=Math.log,Math_sqrt=Math.sqrt,Math_ceil=Math.ceil,Math_floor=Math.floor,Math_pow=Math.pow,Math_imul=Math.imul,Math_toFloat32=Math.toFloat32,Math_min=Math.min,runDependencies=0,runDependencyTracking={},runDependencyWatcher=null,dependenciesFulfilled=null;
function addRunDependency(b){runDependencies++;Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies);b?(assert(!runDependencyTracking[b]),runDependencyTracking[b]=1,null===runDependencyWatcher&&"undefined"!==typeof setInterval&&(runDependencyWatcher=setInterval(function(){var b=!1,a;for(a in runDependencyTracking)b||(b=!0,Module.printErr("still waiting on run dependencies:")),Module.printErr("dependency: "+a);b&&Module.printErr("(end of list)")},1E4))):Module.printErr("warning: run dependency added without ID")}
Module.addRunDependency=addRunDependency;function removeRunDependency(b){runDependencies--;Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies);b?(assert(runDependencyTracking[b]),delete runDependencyTracking[b]):Module.printErr("warning: run dependency removed without ID");0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled&&(b=dependenciesFulfilled,dependenciesFulfilled=null,b()))}
Module.removeRunDependency=removeRunDependency;Module.preloadedImages={};Module.preloadedAudios={};var memoryInitializer=null,STATIC_BASE=8,STATICTOP=STATIC_BASE+19168;__ATINIT__.push({func:function(){runPostSets()}});var _stdout;_stdout=_stdout=allocate([0,0,0,0,0,0,0,0],"i8",ALLOC_STATIC);var _stdin;_stdin=_stdin=allocate([0,0,0,0,0,0,0,0],"i8",ALLOC_STATIC);var _stderr;_stderr=_stderr=allocate([0,0,0,0,0,0,0,0],"i8",ALLOC_STATIC);
allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,136,195,64,0,0,0,0,132,215,151,65,0,128,224,55,121,195,65,67,23,110,5,181,181,184,147,70,245,249,63,233,3,79,56,77,50,29,48,249,72,119,130,90,60,191,115,127,221,79,21,117,63,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,111,112,101,114,97,116,105,111,110,0,0,0,0,0,0,0,105,110,116,32,100,117,112,50,40,105,110,116,44,32,105,110,116,41,59,0,0,0,0,0,105,110,116,32,105,115,115,112,97,99,
101,40,105,110,116,41,59,0,0,0,0,0,0,0,39,37,115,39,32,105,115,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,0,69,67,65,78,67,69,76,69,68,0,0,0,0,0,0,0,105,110,116,32,115,116,114,102,116,105,109,101,40,99,104,97,114,32,42,44,32,105,110,116,44,32,99,104,97,114,32,42,44,32,115,116,114,117,99,116,32,116,109,32,42,41,59,0,118,111,105,100,32,42,114,101,97,108,108,111,99,40,118,111,105,100,32,42,44,105,110,116,41,59,0,0,0,0,0,0,99,104,97,114,32,42,115,116,114,99,104,114,40,99,104,97,114,32,
42,44,105,110,116,41,59,0,0,0,0,0,0,0,102,108,111,97,116,32,102,108,111,111,114,40,102,108,111,97,116,41,59,0,0,0,0,0,41,0,0,0,0,0,0,0,105,110,116,32,103,101,116,99,40,70,73,76,69,32,42,41,59,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,108,111,110,103,0,0,0,0,93,0,0,0,0,0,0,0,99,111,109,109,97,32,101,120,112,101,99,116,101,100,0,0,91,0,0,0,0,0,0,0,99,97,115,116,0,0,0,0,84,111,107,101,110,32,62,61,32,84,111,107,101,110,78,111,110,101,32,38,38,32,84,111,107,101,110,32,60,61,32,84,111,107,101,110,69,110,100,79,102,
70,117,110,99,116,105,111,110,0,0,0,0,0,0,0,99,97,110,39,116,32,103,101,116,32,116,104,101,32,97,100,100,114,101,115,115,32,111,102,32,116,104,105,115,0,0,0,115,105,122,101,111,102,0,0,99,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,116,104,105,115,0,0,0,0,126,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,105,110,116,32,100,117,112,40,105,110,116,41,59,0,0,0,105,110,116,32,105,115,112,117,110,99,116,40,105,110,116,41,59,0,0,0,0,0,0,0,102,117,110,99,116,105,111,110,32,100,101,102,105,110,105,116,105,111,
110,32,101,120,112,101,99,116,101,100,0,0,0,0,45,45,0,0,0,0,0,0,69,66,85,83,89,0,0,0,105,110,116,32,116,105,109,101,40,105,110,116,32,42,41,59,0,0,0,0,0,0,0,0,118,111,105,100,32,42,99,97,108,108,111,99,40,105,110,116,44,105,110,116,41,59,0,0,43,43,0,0,0,0,0,0,99,104,97,114,32,42,115,116,114,110,99,97,116,40,99,104,97,114,32,42,44,99,104,97,114,32,42,44,105,110,116,41,59,0,0,0,0,0,0,0,102,108,111,97,116,32,102,97,98,115,40,102,108,111,97,116,41,59,0,0,0,0,0,0,37,0,0,0,0,0,0,0,105,110,116,32,102,103,
101,116,99,40,70,73,76,69,32,42,41,59,0,0,0,0,0,0,117,110,105,115,116,100,46,104,0,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,99,104,97,114,0,0,0,0,42,0,0,0,0,0,0,0,105,100,101,110,116,105,102,105,101,114,32,101,120,112,101,99,116,101,100,0,0,0,0,0,45,0,0,0,0,0,0,0,101,114,114,110,111,0,0,0,43,0,0,0,0,0,0,0,73,110,116,101,114,97,99,116,105,118,101,67,117,114,114,101,110,116,76,105,110,101,32,33,61,32,78,85,76,76,0,0,69,88,68,69,86,0,0,0,69,120,112,114,101,115,115,105,111,110,80,114,101,102,105,120,79,112,101,
114,97,116,111,114,40,41,10,0,0,0,0,0,62,62,0,0,0,0,0,0,69,87,79,85,76,68,66,76,79,67,75,0,0,0,0,0,60,60,0,0,0,0,0,0,69,84,88,84,66,83,89,0,62,61,0,0,0,0,0,0,99,104,97,114,32,42,99,116,101,114,109,105,100,40,99,104,97,114,32,42,41,59,0,0,69,84,73,77,69,68,79,85,84,0,0,0,0,0,0,0,105,110,116,32,105,115,112,114,105,110,116,40,105,110,116,41,59,0,0,0,0,0,0,0,98,97,100,32,102,117,110,99,116,105,111,110,32,100,101,102,105,110,105,116,105,111,110,0,60,61,0,0,0,0,0,0,69,84,73,77,69,0,0,0,69,66,65,68,77,83,
71,0,105,110,116,32,109,107,116,105,109,101,40,115,116,114,117,99,116,32,116,109,32,42,112,116,109,41,59,0,0,0,0,0,118,111,105,100,32,42,109,97,108,108,111,99,40,105,110,116,41,59,0,0,0,0,0,0,62,0,0,0,0,0,0,0,99,104,97,114,32,42,115,116,114,99,97,116,40,99,104,97,114,32,42,44,99,104,97,114,32,42,41,59,0,0,0,0,69,83,84,65,76,69,0,0,102,108,111,97,116,32,101,120,112,40,102,108,111,97,116,41,59,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,69,83,82,67,72,0,0,0,105,110,116,32,102,119,114,105,116,101,40,118,111,105,
100,32,42,44,32,105,110,116,44,32,105,110,116,44,32,70,73,76,69,32,42,41,59,0,0,0,116,105,109,101,46,104,0,0,33,61,0,0,0,0,0,0,115,104,111,114,116,0,0,0,69,83,80,73,80,69,0,0,115,116,97,99,107,32,105,115,32,101,109,112,116,121,32,45,32,99,97,110,39,116,32,103,111,32,98,97,99,107,0,0,61,61,0,0,0,0,0,0,101,110,117,109,32,100,101,102,105,110,105,116,105,111,110,115,32,99,97,110,32,111,110,108,121,32,98,101,32,103,108,111,98,97,108,115,0,0,0,0,69,82,79,70,83,0,0,0,38,0,0,0,0,0,0,0,111,112,116,111,112,
116,0,0,69,82,65,78,71,69,0,0,94,0,0,0,0,0,0,0,73,110,116,101,114,97,99,116,105,118,101,67,117,114,114,101,110,116,76,105,110,101,45,62,78,101,120,116,32,33,61,32,78,85,76,76,0,0,0,0,111,112,116,101,114,114,0,0,69,80,82,79,84,79,84,89,80,69,0,0,0,0,0,0,102,105,114,115,116,32,97,114,103,117,109,101,110,116,32,116,111,32,39,63,39,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,98,101,114,0,0,0,0,0,0,0,0,124,0,0,0,0,0,0,0,111,112,116,105,110,100,0,0,69,80,82,79,84,79,78,79,83,85,80,80,79,82,
84,0,37,102,0,0,0,0,0,0,38,38,0,0,0,0,0,0,111,112,116,97,114,103,0,0,69,80,82,79,84,79,0,0,37,108,100,0,0,0,0,0,124,124,0,0,0,0,0,0,78,85,76,76,0,0,0,0,115,105,122,101,95,116,32,99,111,110,102,115,116,114,40,105,110,116,44,32,99,104,97,114,32,42,44,32,115,105,122,101,95,116,41,59,0,0,0,0,69,80,73,80,69,0,0,0,105,110,116,32,97,99,99,101,115,115,40,99,104,97,114,32,42,44,32,105,110,116,41,59,0,0,0,0,0,0,0,0,105,110,116,32,105,115,108,111,119,101,114,40,105,110,116,41,59,0,0,0,0,0,0,0,78,85,76,76,0,
0,0,0,98,97,100,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,109,97,105,110,40,41,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,115,115,105,122,101,95,116,32,119,114,105,116,101,40,105,110,116,44,32,118,111,105,100,32,42,44,32,115,105,122,101,95,116,41,59,0,0,0,0,0,69,80,69,82,77,0,0,0,69,66,65,68,70,0,0,0,115,116,114,117,99,116,32,116,109,32,42,108,111,99,97,108,116,105,109,101,40,105,110,116,32,42,41,59,0,0,0,0,115,116,100,101,114,114,0,0,105,110,116,32,115,116,114,116,111,
117,108,40,99,104,97,114,32,42,44,99,104,97,114,32,42,42,44,105,110,116,41,59,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,118,111,105,100,32,42,109,101,109,115,101,116,40,118,111,105,100,32,42,44,105,110,116,44,105,110,116,41,59,0,0,0,112,105,100,95,116,32,118,102,111,114,107,40,118,111,105,100,41,59,0,0,0,0,0,0,69,79,87,78,69,82,68,69,65,68,0,0,0,0,0,0,102,108,111,97,116,32,99,111,115,104,40,102,108,111,97,116,41,59,0,0,0,0,0,0,115,116,100,111,117,116,0,0,94,61,0,0,0,0,0,0,105,110,116,32,105,115,97,108,110,
117,109,40,105,110,116,41,59,0,0,0,0,0,0,0,105,110,116,32,117,115,108,101,101,112,40,117,115,101,99,111,110,100,115,95,116,41,59,0,69,79,86,69,82,70,76,79,87,0,0,0,0,0,0,0,105,110,116,32,102,114,101,97,100,40,118,111,105,100,32,42,44,32,105,110,116,44,32,105,110,116,44,32,70,73,76,69,32,42,41,59,0,0,0,0,115,116,100,105,110,0,0,0,115,116,114,105,110,103,46,104,0,0,0,0,0,0,0,0,124,61,0,0,0,0,0,0,105,110,116,32,117,110,108,105,110,107,40,99,104,97,114,32,42,41,59,0,0,0,0,0,105,110,116,0,0,0,0,0,69,79,
80,78,79,84,83,85,80,80,0,0,0,0,0,0,71,69,84,83,95,77,65,88,0,0,0,0,0,0,0,0,115,116,97,99,107,32,117,110,100,101,114,114,117,110,0,0,38,61,0,0,0,0,0,0,101,110,117,109,32,39,37,115,39,32,105,115,110,39,116,32,100,101,102,105,110,101,100,0,117,115,101,99,111,110,100,115,95,116,32,117,97,108,97,114,109,40,117,115,101,99,111,110,100,115,95,116,44,32,117,115,101,99,111,110,100,115,95,116,41,59,0,0,0,0,0,0,69,78,88,73,79,0,0,0,76,95,116,109,112,110,97,109,0,0,0,0,0,0,0,0,32,32,32,32,32,62,32,0,62,62,61,
0,0,0,0,0,105,110,116,32,116,116,121,110,97,109,101,95,114,40,105,110,116,44,32,99,104,97,114,32,42,44,32,115,105,122,101,95,116,41,59,0,0,0,0,0,69,78,79,84,84,89,0,0,95,73,79,78,66,70,0,0,60,60,61,0,0,0,0,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,99,104,97,114,32,42,116,116,121,110,97,109,101,40,105,110,116,41,59,0,0,0,0,0,69,78,79,84,83,85,80,0,95,73,79,76,66,70,0,0,37,116,0,0,0,0,0,0,37,61,0,0,0,0,0,0,105,110,116,32,116,114,117,110,99,97,116,101,40,99,104,97,114,32,42,44,32,111,
102,102,95,116,41,59,0,0,0,0,69,78,79,84,83,79,67,75,0,0,0,0,0,0,0,0,95,73,79,70,66,70,0,0,47,61,0,0,0,0,0,0,105,110,116,32,116,99,115,101,116,112,103,114,112,40,105,110,116,44,32,112,105,100,95,116,41,59,0,0,0,0,0,0,69,78,79,84,82,69,67,79,86,69,82,65,66,76,69,0,70,73,76,69,78,65,77,69,95,77,65,88,0,0,0,0,42,61,0,0,0,0,0,0,112,105,100,95,116,32,116,99,103,101,116,112,103,114,112,40,105,110,116,41,59,0,0,0,105,110,116,32,99,108,111,115,101,40,105,110,116,41,59,0,69,78,79,84,69,77,80,84,89,0,0,0,0,
0,0,0,105,110,116,32,105,115,103,114,97,112,104,40,105,110,116,41,59,0,0,0,0,0,0,0,66,85,70,83,73,90,0,0,109,97,105,110,40,41,32,115,104,111,117,108,100,32,114,101,116,117,114,110,32,97,110,32,105,110,116,32,111,114,32,118,111,105,100,0,0,0,0,0,45,61,0,0,0,0,0,0,108,111,110,103,32,115,121,115,99,111,110,102,40,105,110,116,41,59,0,0,0,0,0,0,69,78,79,84,68,73,82,0,69,65,76,82,69,65,68,89,0,0,0,0,0,0,0,0,69,65,67,67,69,83,0,0,115,116,114,117,99,116,32,116,109,32,42,103,109,116,105,109,101,95,114,40,
105,110,116,32,42,44,32,115,116,114,117,99,116,32,116,109,32,42,41,59,0,0,0,0,0,0,0,0,83,69,69,75,95,69,78,68,0,0,0,0,0,0,0,0,105,110,116,32,115,116,114,116,111,108,40,99,104,97,114,32,42,44,99,104,97,114,32,42,42,44,105,110,116,41,59,0,43,61,0,0,0,0,0,0,110,101,115,116,101,100,32,102,117,110,99,116,105,111,110,32,100,101,102,105,110,105,116,105,111,110,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,0,0,0,0,0,105,110,116,32,109,101,109,99,109,112,40,118,111,105,100,32,42,44,118,111,
105,100,32,42,44,105,110,116,41,59,0,0,118,111,105,100,32,115,121,110,99,40,118,111,105,100,41,59,0,0,0,0,0,0,0,0,69,78,79,84,67,79,78,78,0,0,0,0,0,0,0,0,102,108,111,97,116,32,99,111,115,40,102,108,111,97,116,41,59,0,0,0,0,0,0,0,83,69,69,75,95,67,85,82,0,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,119,104,105,108,101,0,0,0,105,110,116,32,115,121,109,108,105,110,107,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,41,59,0,0,0,0,99,104,97,114,32,42,97,115,99,116,105,109,101,40,115,116,114,117,99,116,32,116,109,
32,42,41,59,0,0,0,0,0,69,78,79,83,89,83,0,0,105,110,116,32,102,99,108,111,115,101,40,70,73,76,69,32,42,41,59,0,0,0,0,0,65,114,100,117,105,110,111,46,104,0,0,0,0,0,0,0,83,69,69,75,95,83,69,84,0,0,0,0,0,0,0,0,115,116,100,108,105,98,46,104,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,118,111,105,100,0,0,0,0,117,110,115,105,103,110,101,100,32,105,110,116,32,115,108,101,101,112,40,117,110,115,105,103,110,101,100,32,105,110,116,41,59,0,0,0,0,0,0,0,118,111,105,100,0,0,0,0,69,78,79,83,84,82,0,0,69,79,70,0,0,0,0,0,39,
37,115,39,32,105,115,32,117,110,100,101,102,105,110,101,100,0,0,0,0,0,0,0,110,111,110,101,0,0,0,0,117,110,115,105,103,110,101,100,0,0,0,0,0,0,0,0,115,101,109,105,99,111,108,111,110,32,101,120,112,101,99,116,101,100,0,0,0,0,0,0,105,110,116,32,115,101,116,117,105,100,40,117,105,100,95,116,41,59,0,0,0,0,0,0,69,78,79,83,82,0,0,0,95,95,118,97,95,108,105,115,116,83,116,114,117,99,116,0,105,110,116,101,103,101,114,32,118,97,108,117,101,32,101,120,112,101,99,116,101,100,32,105,110,115,116,101,97,100,32,111,
102,32,37,116,0,0,0,0,97,98,111,114,116,0,0,0,117,110,105,111,110,0,0,0,112,105,100,95,116,32,115,101,116,115,105,100,40,118,111,105,100,41,59,0,0,0,0,0,69,78,79,83,80,67,0,0,95,95,70,73,76,69,83,116,114,117,99,116,0,0,0,0,99,111,117,108,100,110,39,116,32,102,105,110,100,32,103,111,116,111,32,108,97,98,101,108,32,39,37,115,39,0,0,0,116,121,112,101,100,101,102,0,112,105,99,111,99,62,32,0,105,110,116,32,115,101,116,114,101,117,105,100,40,117,105,100,95,116,44,32,117,105,100,95,116,41,59,0,0,0,0,0,69,
78,79,80,82,79,84,79,79,80,84,0,0,0,0,0,105,110,116,32,118,115,115,99,97,110,102,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,44,32,118,97,95,108,105,115,116,41,59,0,0,0,102,114,111,109,32,97,110,32,97,114,114,97,121,32,111,102,32,115,105,122,101,32,37,100,32,116,111,32,111,110,101,32,111,102,32,115,105,122,101,32,37,100,0,0,0,0,0,0,110,111,32,118,97,108,117,101,32,114,101,116,117,114,110,101,100,32,102,114,111,109,32,97,32,102,117,110,99,116,105,111,110,32,114,101,116,117,114,110,105,110,103,
32,37,116,0,0,115,119,105,116,99,104,0,0,105,110,116,32,115,101,116,114,101,103,105,100,40,103,105,100,95,116,44,32,103,105,100,95,116,41,59,0,0,0,0,0,69,78,79,77,83,71,0,0,105,110,116,32,118,102,115,99,97,110,102,40,70,73,76,69,32,42,44,32,99,104,97,114,32,42,44,32,118,97,95,108,105,115,116,41,59,0,0,0,102,117,110,99,116,105,111,110,32,98,111,100,121,32,101,120,112,101,99,116,101,100,0,0,115,116,114,117,99,116,0,0,99,104,97,114,32,42,105,110,100,101,120,40,99,104,97,114,32,42,44,105,110,116,41,59,
0,0,0,0,0,0,0,0,112,105,100,95,116,32,115,101,116,112,103,114,112,40,118,111,105,100,41,59,0,0,0,0,69,78,79,77,69,77,0,0,105,110,116,32,118,115,99,97,110,102,40,99,104,97,114,32,42,44,32,118,97,95,108,105,115,116,41,59,0,0,0,0,37,116,32,105,115,32,110,111,116,32,97,32,102,117,110,99,116,105,111,110,32,45,32,99,97,110,39,116,32,99,97,108,108,0,0,0,0,0,0,0,115,116,97,116,105,99,0,0,105,110,116,32,115,101,116,112,103,105,100,40,112,105,100,95,116,44,32,112,105,100,95,116,41,59,0,0,0,0,0,0,105,110,116,
32,99,104,111,119,110,40,99,104,97,114,32,42,44,32,117,105,100,95,116,44,32,103,105,100,95,116,41,59,0,0,0,0,0,0,0,0,69,78,79,76,73,78,75,0,105,110,116,32,105,115,100,105,103,105,116,40,105,110,116,41,59,0,0,0,0,0,0,0,105,110,116,32,118,115,110,112,114,105,110,116,102,40,99,104,97,114,32,42,44,32,105,110,116,44,32,99,104,97,114,32,42,44,32,118,97,95,108,105,115,116,41,59,0,0,0,0,39,37,115,39,32,105,115,32,117,110,100,101,102,105,110,101,100,0,0,0,0,0,0,0,115,105,122,101,111,102,0,0,109,97,105,110,
0,0,0,0,105,110,116,32,115,101,116,103,105,100,40,103,105,100,95,116,41,59,0,0,0,0,0,0,69,78,79,76,67,75,0,0,69,65,71,65,73,78,0,0,115,116,114,117,99,116,32,116,109,32,42,103,109,116,105,109,101,40,105,110,116,32,42,41,59,0,0,0,0,0,0,0,105,110,116,32,118,115,112,114,105,110,116,102,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,44,32,118,97,95,108,105,115,116,41,59,0,0,105,110,116,32,97,116,111,108,40,99,104,97,114,32,42,41,59,0,0,0,0,0,0,0,110,111,116,32,101,110,111,117,103,104,32,97,114,103,117,
109,101,110,116,115,32,116,111,32,39,37,115,39,0,0,0,0,115,105,103,110,101,100,0,0,118,111,105,100,32,42,109,101,109,99,104,114,40,99,104,97,114,32,42,44,105,110,116,44,105,110,116,41,59,0,0,0,118,111,105,100,32,42,115,98,114,107,40,105,110,116,112,116,114,95,116,41,59,0,0,0,69,78,79,69,88,69,67,0,102,108,111,97,116,32,99,101,105,108,40,102,108,111,97,116,41,59,0,0,0,0,0,0,105,110,116,32,118,102,112,114,105,110,116,102,40,70,73,76,69,32,42,44,32,99,104,97,114,32,42,44,32,118,97,95,108,105,115,116,
41,59,0,0,99,111,109,109,97,32,101,120,112,101,99,116,101,100,0,0,115,104,111,114,116,0,0,0,102,108,111,97,116,32,97,99,111,115,40,102,108,111,97,116,41,59,0,0,0,0,0,0,105,110,116,32,114,109,100,105,114,40,99,104,97,114,32,42,41,59,0,0,0,0,0,0,69,78,79,69,78,84,0,0,70,73,76,69,32,42,102,114,101,111,112,101,110,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,44,32,70,73,76,69,32,42,41,59,0,0,35,100,101,102,105,110,101,32,79,85,84,80,85,84,32,49,32,10,35,100,101,102,105,110,101,32,73,78,80,85,84,32,
48,32,10,35,100,101,102,105,110,101,32,72,73,71,72,32,49,32,10,35,100,101,102,105,110,101,32,76,79,87,32,48,32,10,0,0,0,0,0,0,105,110,116,32,118,112,114,105,110,116,102,40,99,104,97,114,32,42,44,32,118,97,95,108,105,115,116,41,59,0,0,0,115,116,100,105,111,46,104,0,116,111,111,32,109,97,110,121,32,97,114,103,117,109,101,110,116,115,32,116,111,32,37,115,40,41,0,0,0,0,0,0,114,101,116,117,114,110,0,0,105,110,116,32,114,101,97,100,108,105,110,107,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,44,32,
115,105,122,101,95,116,41,59,0,0,0,99,32,108,105,98,114,97,114,121,0,0,0,0,0,0,0,69,78,79,68,69,86,0,0,105,110,116,32,115,115,99,97,110,102,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,44,32,46,46,46,41,59,0,0,0,0,0,0,0,0,39,37,115,39,32,105,115,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,114,101,103,105,115,116,101,114,0,0,0,0,0,0,0,0,109,101,109,98,101,114,32,39,37,115,39,32,97,108,114,101,97,100,121,32,100,101,102,105,
110,101,100,0,0,0,0,0,115,115,105,122,101,95,116,32,114,101,97,100,40,105,110,116,44,32,118,111,105,100,32,42,44,32,115,105,122,101,95,116,41,59,0,0,0,0,0,0,69,78,79,68,65,84,65,0,105,110,116,32,102,115,99,97,110,102,40,70,73,76,69,32,42,44,32,99,104,97,114,32,42,44,32,46,46,46,41,59,0,0,0,0,0,0,0,0,69,120,112,114,101,115,115,105,111,110,80,97,114,115,101,40,41,32,100,111,110,101,10,10,0,0,0,0,0,0,0,0,108,101,120,46,99,0,0,0,110,101,119,0,0,0,0,0,105,110,116,32,112,97,117,115,101,40,118,111,105,100,
41,59,0,0,0,0,0,0,0,0,69,78,79,66,85,70,83,0,105,110,116,32,115,99,97,110,102,40,99,104,97,114,32,42,44,32,46,46,46,41,59,0,116,121,112,101,32,110,111,116,32,101,120,112,101,99,116,101,100,32,104,101,114,101,0,0,108,111,110,103,0,0,0,0,108,111,110,103,32,112,97,116,104,99,111,110,102,40,99,104,97,114,32,42,44,32,105,110,116,41,59,0,0,0,0,0,69,78,70,73,76,69,0,0,105,110,116,32,115,110,112,114,105,110,116,102,40,99,104,97,114,32,42,44,32,105,110,116,44,32,99,104,97,114,32,42,44,32,46,46,46,41,59,0,
110,111,116,32,97,110,32,108,118,97,108,117,101,0,0,0,105,110,116,0,0,0,0,0,118,97,108,117,101,32,110,111,116,32,101,120,112,101,99,116,101,100,32,104,101,114,101,0,82,101,115,101,114,118,101,83,112,97,99,101,32,62,61,32,77,101,109,85,115,101,100,0,105,110,116,32,110,105,99,101,40,105,110,116,41,59,0,0,69,78,69,84,85,78,82,69,65,67,72,0,0,0,0,0,105,110,116,32,115,112,114,105,110,116,102,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,44,32,46,46,46,41,59,0,0,0,0,0,0,0,97,32,118,111,105,100,32,118,
97,108,117,101,32,105,115,110,39,116,32,109,117,99,104,32,117,115,101,32,104,101,114,101,0,0,0,0,0,0,0,0,105,102,0,0,0,0,0,0,111,102,102,95,116,32,108,115,101,101,107,40,105,110,116,44,32,111,102,102,95,116,44,32,105,110,116,41,59,0,0,0,69,78,69,84,82,69,83,69,84,0,0,0,0,0,0,0,105,110,116,32,102,112,114,105,110,116,102,40,70,73,76,69,32,42,44,32,99,104,97,114,32,42,44,32,46,46,46,41,59,0,0,0,0,0,0,0,101,120,112,114,101,115,115,105,111,110,32,101,120,112,101,99,116,101,100,0,0,0,0,0,103,111,116,111,
0,0,0,0,105,110,116,32,108,111,99,107,102,40,105,110,116,44,32,105,110,116,44,32,111,102,102,95,116,41,59,0,0,0,0,0,105,110,116,32,99,104,114,111,111,116,40,99,104,97,114,32,42,41,59,0,0,0,0,0,69,78,69,84,68,79,87,78,0,0,0,0,0,0,0,0,105,110,116,32,105,115,99,110,116,114,108,40,105,110,116,41,59,0,0,0,0,0,0,0,105,110,116,32,112,114,105,110,116,102,40,99,104,97,114,32,42,44,32,46,46,46,41,59,0,0,0,0,0,0,0,0,109,97,99,114,111,32,97,114,103,117,109,101,110,116,115,32,109,105,115,115,105,110,103,0,102,
111,114,0,0,0,0,0,98,97,100,32,112,97,114,97,109,101,116,101,114,0,0,0,105,110,116,32,108,105,110,107,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,41,59,0,0,0,0,0,0,0,69,78,65,77,69,84,79,79,76,79,78,71,0,0,0,0,69,65,70,78,79,83,85,80,80,79,82,84,0,0,0,0,77,95,83,81,82,84,49,95,50,0,0,0,0,0,0,0,100,111,117,98,108,101,32,100,105,102,102,116,105,109,101,40,105,110,116,44,32,105,110,116,41,59,0,0,0,0,0,0,105,110,116,32,103,101,116,99,104,97,114,40,41,59,0,0,88,88,88,0,0,0,0,0,105,110,116,32,97,116,
111,105,40,99,104,97,114,32,42,41,59,0,0,0,0,0,0,0,105,100,101,110,116,105,102,105,101,114,32,110,111,116,32,101,120,112,101,99,116,101,100,32,104,101,114,101,0,0,0,0,102,108,111,97,116,0,0,0,118,111,105,100,32,42,109,101,109,109,111,118,101,40,118,111,105,100,32,42,44,118,111,105,100,32,42,44,105,110,116,41,59,0,0,0,0,0,0,0,105,110,116,32,108,99,104,111,119,110,40,99,104,97,114,32,42,44,32,117,105,100,95,116,44,32,103,105,100,95,116,41,59,0,0,0,0,0,0,0,69,77,85,76,84,73,72,79,80,0,0,0,0,0,0,0,77,
95,83,81,82,84,50,0,102,108,111,97,116,32,97,116,97,110,50,40,102,108,111,97,116,44,32,102,108,111,97,116,41,59,0,0,0,0,0,0,99,104,97,114,32,42,103,101,116,115,40,99,104,97,114,32,42,41,59,0,0,0,0,0,118,111,105,100,32,97,110,97,108,111,103,87,114,105,116,101,40,105,110,116,44,32,105,110,116,41,59,0,0,0,0,0,98,114,97,99,107,101,116,115,32,110,111,116,32,99,108,111,115,101,100,0,0,0,0,0,101,120,116,101,114,110,0,0,105,110,116,32,105,115,97,116,116,121,40,105,110,116,41,59,0,0,0,0,0,0,0,0,69,77,83,71,
83,73,90,69,0,0,0,0,0,0,0,0,70,73,76,69,32,42,102,111,112,101,110,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,41,59,0,0,0,0,77,95,50,95,83,81,82,84,80,73,0,0,0,0,0,0,118,111,105,100,32,100,101,108,97,121,40,105,110,116,41,59,0,0,0,0,0,0,0,0,105,110,116,32,112,117,116,115,40,99,104,97,114,32,42,41,59,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,115,116,100,98,111,111,108,46,104,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,32,110,111,116,32,101,120,112,101,99,116,101,100,32,104,101,114,101,0,0,0,0,0,0,101,
110,117,109,0,0,0,0,37,115,0,0,0,0,0,0,99,104,97,114,32,42,103,101,116,119,100,40,99,104,97,114,32,42,41,59,0,0,0,0,76,73,84,84,76,69,95,69,78,68,73,65,78,0,0,0,69,77,76,73,78,75,0,0,77,95,50,95,80,73,0,0,105,110,116,32,117,110,103,101,116,99,40,105,110,116,44,32,70,73,76,69,32,42,41,59,0,0,0,0,0,0,0,0,67,111,112,121,83,105,122,101,32,60,61,32,77,65,88,95,84,77,80,95,67,79,80,89,95,66,85,70,0,0,0,0,69,120,112,114,101,115,115,105,111,110,80,97,114,115,101,40,41,58,10,0,0,0,0,0,101,108,115,101,0,0,
0,0,105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,115,116,114,117,99,116,0,0,117,105,100,95,116,32,103,101,116,117,105,100,40,118,111,105,100,41,59,0,0,0,0,0,69,77,70,73,76,69,0,0,77,95,49,95,80,73,0,0,99,116,121,112,101,46,104,0,118,111,105,100,32,115,101,116,118,98,117,102,40,70,73,76,69,32,42,44,32,99,104,97,114,32,42,44,32,105,110,116,44,32,105,110,116,41,59,0,100,111,101,115,110,39,116,32,104,97,118,101,32,97,32,109,101,109,98,101,114,32,99,97,108,108,101,100,32,39,37,115,39,0,
0,0,0,0,0,0,100,111,117,98,108,101,0,0,112,105,100,95,116,32,103,101,116,112,112,105,100,40,118,111,105,100,41,59,0,0,0,0,69,76,79,79,80,0,0,0,77,95,80,73,95,52,0,0,118,111,105,100,32,115,101,116,98,117,102,40,70,73,76,69,32,42,44,32,99,104,97,114,32,42,41,59,0,0,0,0,100,111,0,0,0,0,0,0,60,68,69,70,65,85,76,84,62,0,0,0,0,0,0,0,112,105,100,95,116,32,103,101,116,112,105,100,40,118,111,105,100,41,59,0,0,0,0,0,69,73,83,68,73,82,0,0,77,95,80,73,95,50,0,0,105,110,116,32,102,112,117,116,99,104,97,114,40,
105,110,116,41,59,0,0,0,0,0,0,112,111,105,110,116,101,114,0,37,116,32,102,114,111,109,32,37,116,0,0,0,0,0,0,100,101,108,101,116,101,0,0,112,105,100,95,116,32,103,101,116,112,103,114,112,40,118,111,105,100,41,59,0,0,0,0,69,73,83,67,79,78,78,0,77,95,80,73,0,0,0,0,105,110,116,32,112,117,116,99,104,97,114,40,105,110,116,41,59,0,0,0,0,0,0,0,100,101,102,97,117,108,116,0,99,97,110,39,116,32,117,115,101,32,39,37,115,39,32,111,110,32,115,111,109,101,116,104,105,110,103,32,116,104,97,116,39,115,32,110,111,
116,32,97,32,115,116,114,117,99,116,32,111,114,32,117,110,105,111,110,32,37,115,32,58,32,105,116,39,115,32,97,32,37,116,0,105,108,108,101,103,97,108,32,99,104,97,114,97,99,116,101,114,32,39,37,99,39,0,0,112,97,114,115,101,32,101,114,114,111,114,0,0,0,0,0,99,104,97,114,32,42,103,101,116,112,97,115,115,40,99,104,97,114,32,42,41,59,0,0,69,73,79,0,0,0,0,0,77,95,76,78,49,48,0,0,105,110,116,32,112,117,116,99,40,99,104,97,114,32,42,44,32,70,73,76,69,32,42,41,59,0,0,0,0,0,0,0,45,62,0,0,0,0,0,0,99,111,110,
116,105,110,117,101,0,0,0,0,0,0,0,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,105,110,116,32,103,101,116,112,97,103,101,115,105,122,101,40,118,111,105,100,41,59,0,0,105,110,116,32,99,104,100,105,114,40,99,104,97,114,32,42,41,59,0,0,0,0,0,0,95,95,98,111,111,108,95,116,114,117,101,95,102,97,108,115,101,95,97,114,101,95,100,101,102,105,110,101,100,0,0,0,69,73,78,86,65,76,0,0,78,85,76,76,0,0,0,0,77,95,76,78,50,0,0,0,105,110,116,32,105,115,98,108,97,110,107,40,105,110,116,41,59,0,0,0,0,0,
0,0,118,111,105,100,32,112,101,114,114,111,114,40,99,104,97,114,32,42,41,59,0,0,0,0,118,50,46,49,0,0,0,0,46,0,0,0,0,0,0,0,99,104,97,114,0,0,0,0,39,37,115,39,32,105,115,32,110,111,116,32,100,101,102,105,110,101,100,0,0,0,0,0,99,111,109,109,97,32,101,120,112,101,99,116,101,100,0,0,105,110,116,32,103,101,116,108,111,103,105,110,95,114,40,99,104,97,114,32,42,44,32,115,105,122,101,95,116,41,59,0,69,73,78,84,82,0,0,0,69,65,68,68,82,78,79,84,65,86,65,73,76,0,0,0,99,104,97,114,32,42,115,116,114,116,111,107,
95,114,40,99,104,97,114,32,42,44,99,104,97,114,32,42,44,99,104,97,114,32,42,42,41,59,0,0,77,95,76,79,71,49,48,69,0,0,0,0,0,0,0,0,99,104,97,114,32,42,99,116,105,109,101,40,105,110,116,32,42,41,59,0,0,0,0,0,105,110,116,32,102,115,101,101,107,40,70,73,76,69,32,42,44,32,105,110,116,44,32,105,110,116,41,59,0,0,0,0,102,108,111,97,116,32,115,116,114,116,111,100,40,99,104,97,114,32,42,44,99,104,97,114,32,42,42,41,59,0,0,0,110,101,101,100,32,97,110,32,115,116,114,117,99,116,117,114,101,32,111,114,32,117,110,
105,111,110,32,109,101,109,98,101,114,32,97,102,116,101,114,32,39,37,115,39,0,0,0,0,99,97,115,101,0,0,0,0,118,111,105,100,32,42,109,101,109,99,112,121,40,118,111,105,100,32,42,44,118,111,105,100,32,42,44,105,110,116,41,59,0,0,0,0,0,0,0,0,118,97,108,117,101,32,105,110,32,114,101,116,117,114,110,32,102,114,111,109,32,97,32,118,111,105,100,32,102,117,110,99,116,105,111,110,0,0,0,0,99,104,97,114,32,42,103,101,116,108,111,103,105,110,40,118,111,105,100,41,59,0,0,0,69,73,78,80,82,79,71,82,69,83,83,0,0,
0,0,0,99,104,97,114,32,42,115,116,114,100,117,112,40,99,104,97,114,32,42,41,59,0,0,0,77,95,76,79,71,50,69,0,102,108,111,97,116,32,97,116,97,110,40,102,108,111,97,116,41,59,0,0,0,0,0,0,105,110,116,32,102,116,101,108,108,40,70,73,76,69,32,42,41,59,0,0,0,0,0,0,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,80,117,115,104,79,112,101,114,97,116,111,114,40,41,10,0,0,98,114,101,97,107,0,0,0,118,97,108,117,101,32,114,101,113,117,105,114,101,100,32,105,110,32,114,101,116,117,114,110,0,0,0,0,0,0,0,
0,108,111,110,103,32,103,101,116,104,111,115,116,105,100,40,118,111,105,100,41,59,0,0,0,69,73,76,83,69,81,0,0,110,111,110,45,112,111,105,110,116,101,114,32,97,114,103,117,109,101,110,116,32,116,111,32,115,99,97,110,102,40,41,32,45,32,97,114,103,117,109,101,110,116,32,37,100,32,97,102,116,101,114,32,102,111,114,109,97,116,0,0,0,0,0,0,105,110,116,32,115,116,114,120,102,114,109,40,99,104,97,114,32,42,44,99,104,97,114,32,42,44,105,110,116,41,59,0,77,95,69,0,0,0,0,0,118,111,105,100,32,112,105,110,77,111,
100,101,40,105,110,116,44,32,105,110,116,41,59,0,105,110,116,32,102,115,101,116,112,111,115,40,70,73,76,69,32,42,44,32,105,110,116,32,42,41,59,0,0,0,0,0,111,117,116,32,111,102,32,109,101,109,111,114,121,10,0,0,109,97,116,104,46,104,0,0,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,67,111,108,108,97,112,115,101,40,41,32,102,105,110,105,115,104,101,100,10,0,0,0,0,0,97,117,116,111,0,0,0,0,39,58,39,32,101,120,112,101,99,116,101,100,0,0,0,0,103,105,100,95,116,32,103,101,116,103,105,100,40,118,
111,105,100,41,59,0,0,0,0,0,66,73,71,95,69,78,68,73,65,78,0,0,0,0,0,0,69,73,68,82,77,0,0,0,99,104,97,114,32,42,115,116,114,116,111,107,40,99,104,97,114,32,42,44,99,104,97,114,32,42,41,59,0,0,0,0,102,108,111,97,116,32,116,97,110,104,40,102,108,111,97,116,41,59,0,0,0,0,0,0,105,110,116,32,102,103,101,116,112,111,115,40,70,73,76,69,32,42,44,32,105,110,116,32,42,41,59,0,0,0,0,0,118,97,114,105,97,98,108,101,46,99,0,0,0,0,0,0,101,120,112,114,101,115,115,105,111,110,46,99,0,0,0,0,35,105,110,99,108,117,100,
101,0,0,0,0,0,0,0,0,115,116,114,117,99,116,47,117,110,105,111,110,32,100,101,102,105,110,105,116,105,111,110,115,32,99,97,110,32,111,110,108,121,32,98,101,32,103,108,111,98,97,108,115,0,0,0,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,34,102,105,108,101,110,97,109,101,46,104,34,32,101,120,112,101,99,116,101,100,0,0,0,117,105,100,95,116,32,103,101,116,101,117,105,100,40,118,111,105,100,41,59,0,0,0,0,69,72,79,83,84,85,78,82,69,65,67,72,0,0,0,0,99,104,97,114,32,42,115,116,114,115,116,114,
40,99,104,97,114,32,42,44,99,104,97,114,32,42,41,59,0,0,0,0,102,108,111,97,116,32,116,97,110,40,102,108,111,97,116,41,59,0,0,0,0,0,0,0,105,110,116,32,102,102,108,117,115,104,40,70,73,76,69,32,42,41,59,0,0,0,0,0,84,111,112,79,112,101,114,97,116,111,114,78,111,100,101,45,62,79,114,100,101,114,32,33,61,32,79,114,100,101,114,78,111,110,101,0,0,0,0,0,35,105,102,110,100,101,102,0,39,119,104,105,108,101,39,32,101,120,112,101,99,116,101,100,0,0,0,0,0,0,0,0,103,105,100,95,116,32,103,101,116,101,103,105,100,
40,118,111,105,100,41,59,0,0,0,0,69,70,66,73,71,0,0,0,99,104,97,114,32,42,115,116,114,112,98,114,107,40,99,104,97,114,32,42,44,99,104,97,114,32,42,41,59,0,0,0,102,108,111,97,116,32,115,113,114,116,40,102,108,111,97,116,41,59,0,0,0,0,0,0,105,110,116,32,102,105,108,101,110,111,40,70,73,76,69,32,42,41,59,0,0,0,0,0,116,121,112,101,32,0,0,0,105,110,102,105,120,32,101,118,97,108,117,97,116,105,111,110,10,0,0,0,0,0,0,0,35,105,102,100,101,102,0,0,60,80,82,79,71,82,65,77,62,0,0,0,0,0,0,0,39,123,39,32,101,
120,112,101,99,116,101,100,0,0,0,0,105,110,116,32,103,101,116,100,116,97,98,108,101,115,105,122,101,40,118,111,105,100,41,59,0,0,0,0,0,0,0,0,69,70,65,85,76,84,0,0,78,85,76,76,0,0,0,0,105,110,116,32,115,116,114,99,115,112,110,40,99,104,97,114,32,42,44,99,104,97,114,32,42,41,59,0,0,0,0,0,102,108,111,97,116,32,115,105,110,104,40,102,108,111,97,116,41,59,0,0,0,0,0,0,105,110,116,32,102,101,114,114,111,114,40,70,73,76,69,32,42,41,59,0,0,0,0,0,103,111,116,111,32,108,97,98,101,108,32,0,0,0,0,0,112,111,115,
116,102,105,120,32,101,118,97,108,117,97,116,105,111,110,10,0,0,0,0,0,78,85,76,76,32,112,111,105,110,116,101,114,32,100,101,114,101,102,101,114,101,110,99,101,0,0,0,0,0,0,0,0,35,105,102,0,0,0,0,0,39,41,39,32,101,120,112,101,99,116,101,100,0,0,0,0,99,104,97,114,32,42,103,101,116,99,119,100,40,99,104,97,114,32,42,44,32,115,105,122,101,95,116,41,59,0,0,0,69,69,88,73,83,84,0,0,105,110,116,32,108,97,98,115,40,105,110,116,41,59,0,0,105,110,116,32,115,116,114,115,112,110,40,99,104,97,114,32,42,44,99,104,
97,114,32,42,41,59,0,0,0,0,0,0,102,108,111,97,116,32,115,105,110,40,102,108,111,97,116,41,59,0,0,0,0,0,0,0,105,110,116,32,102,101,111,102,40,70,73,76,69,32,42,41,59,0,0,0,0,0,0,0,101,110,117,109,32,0,0,0,112,114,101,102,105,120,32,101,118,97,108,117,97,116,105,111,110,10,0,0,0,0,0,0,35,101,110,100,105,102,0,0,39,59,39,32,101,120,112,101,99,116,101,100,0,0,0,0,105,110,116,32,102,116,114,117,110,99,97,116,101,40,105,110,116,44,32,111,102,102,95,116,41,59,0,0,0,0,0,0,69,68,81,85,79,84,0,0,105,110,116,
32,97,98,115,40,105,110,116,41,59,0,0,0,105,110,116,32,115,116,114,108,101,110,40,99,104,97,114,32,42,41,59,0,0,0,0,0,102,108,111,97,116,32,114,111,117,110,100,40,102,108,111,97,116,41,59,0,0,0,0,0,118,111,105,100,32,99,108,101,97,114,101,114,114,40,70,73,76,69,32,42,41,59,0,0,117,110,105,111,110,32,0,0,35,101,108,115,101,0,0,0,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,67,111,108,108,97,112,115,101,40,37,100,41,58,10,0,0,0,101,120,112,101,99,116,101,100,32,34,39,34,0,0,0,0,100,97,116,
97,32,116,121,112,101,32,39,37,115,39,32,105,115,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,0,0,0,0,0,0,0,115,116,97,116,101,109,101,110,116,32,101,120,112,101,99,116,101,100,0,0,0,0,0,0,105,110,116,32,102,115,121,110,99,40,105,110,116,41,59,0,117,110,115,105,103,110,101,100,32,105,110,116,32,97,108,97,114,109,40,117,110,115,105,103,110,101,100,32,105,110,116,41,59,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,69,68,79,77,0,0,0,0,105,110,116,32,115,121,115,116,101,109,40,99,104,97,114,32,
42,41,59,0,0,0,0,0,99,104,97,114,32,42,115,116,114,101,114,114,111,114,40,105,110,116,41,59,0,0,0,0,102,108,111,97,116,32,112,111,119,40,102,108,111,97,116,44,102,108,111,97,116,41,59,0,105,110,116,32,105,115,97,108,112,104,97,40,105,110,116,41,59,0,0,0,0,0,0,0,70,73,76,69,32,42,116,109,112,102,105,108,101,40,41,59,0,0,0,0,0,0,0,0,32,105,110,32,97,114,103,117,109,101,110,116,32,37,100,32,111,102,32,99,97,108,108,32,116,111,32,37,115,40,41,0,115,116,114,117,99,116,32,0,116,104,105,115,32,37,116,32,
105,115,32,110,111,116,32,97,110,32,97,114,114,97,121,0,35,100,101,102,105,110,101,0,39,40,39,32,101,120,112,101,99,116,101,100,0,0,0,0,108,111,110,103,32,102,112,97,116,104,99,111,110,102,40,105,110,116,44,32,105,110,116,41,59,0,0,0,0,0,0,0,105,110,116,32,116,111,97,115,99,105,105,40,105,110,116,41,59,0,0,0,0,0,0,0,116,111,111,32,109,97,110,121,32,112,97,114,97,109,101,116,101,114,115,0,0,0,0,0,69,68,69,83,84,65,68,68,82,82,69,81,0,0,0,0,69,65,68,68,82,73,78,85,83,69,0,0,0,0,0,0,99,104,97,114,32,
42,103,101,116,101,110,118,40,99,104,97,114,32,42,41,59,0,0,0,99,104,97,114,32,42,115,116,114,110,99,112,121,40,99,104,97,114,32,42,44,99,104,97,114,32,42,44,105,110,116,41,59,0,0,0,0,0,0,0,102,108,111,97,116,32,109,111,100,102,40,102,108,111,97,116,44,32,102,108,111,97,116,32,42,41,59,0,0,0,0,0,116,105,109,101,95,116,32,99,108,111,99,107,40,41,59,0,118,111,105,100,32,114,101,119,105,110,100,40,70,73,76,69,32,42,41,59,0,0,0,0,115,101,116,0,0,0,0,0,109,97,99,114,111,0,0,0,65,100,100,114,32,61,61,32,
78,85,76,76,32,124,124,32,72,101,97,112,83,116,97,99,107,84,111,112,32,61,61,32,65,100,100,114,0,0,0,0,73,76,105,110,101,32,33,61].concat([32,78,85,76,76,0,0,0,102,108,111,97,116,32,97,116,111,102,40,99,104,97,114,32,42,41,59,0,0,0,0,0,97,114,114,97,121,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,101,103,101,114,0,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,99,104,97,114,32,42,114,105,110,100,101,120,40,99,104,97,114,32,42,44,105,110,116,41,59,0,0,0,
0,0,0,0,99,108,111,115,101,32,98,114,97,99,107,101,116,32,101,120,112,101,99,116,101,100,0,0,112,105,100,95,116,32,102,111,114,107,40,118,111,105,100,41,59,0,0,0,0,0,0,0,105,110,116,32,105,115,97,115,99,105,105,40,105,110,116,41,59,0,0,0,0,0,0,0,69,68,69,65,68,76,75,0,118,111,105,100,32,101,120,105,116,40,105,110,116,41,59,0,99,104,97,114,32,42,115,116,114,99,112,121,40,99,104,97,114,32,42,44,99,104,97,114,32,42,41,59,0,0,0,0,102,108,111,97,116,32,108,111,103,49,48,40,102,108,111,97,116,41,59,0,0,
0,0,0,102,108,111,97,116,32,97,115,105,110,40,102,108,111,97,116,41,59,0,0,0,0,0,0,105,110,116,32,114,101,110,97,109,101,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,41,59,0,0,0,0,0,97,115,115,105,103,110,0,0,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,101,120,112,114,101,115,115,105,111,110,0,0,0,0,0,0,35,101,110,100,105,102,32,119,105,116,104,111,117,116,32,35,105,102,0,0,0,0,0,0,99,97,110,39,116,32,100,101,102,105,110,101,32,97,32,118,111,105,100,32,118,97,
114,105,97,98,108,101,0,0,0,0,105,110,116,32,102,100,97,116,97,115,121,110,99,40,105,110,116,41,59,0,0,0,0,0,105,110,116,32,116,111,117,112,112,101,114,40,105,110,116,41,59,0,0,0,0,0,0,0,69,67,79,78,78,82,69,83,69,84,0,0,0,0,0,0,67,76,79,67,75,83,95,80,69,82,95,83,69,67,0,0,116,111,111,32,109,97,110,121,32,97,114,103,117,109,101,110,116,115,32,116,111,32,115,99,97,110,102,40,41,32,45,32,37,100,32,109,97,120,0,0,118,111,105,100,32,97,98,111,114,116,40,41,59,0,0,0,105,110,116,32,115,116,114,99,111,
108,108,40,99,104,97,114,32,42,44,99,104,97,114,32,42,41,59,0,0,0,0,0,102,108,111,97,116,32,108,111,103,40,102,108,111,97,116,41,59,0,0,0,0,0,0,0,118,111,105,100,32,100,105,103,105,116,97,108,87,114,105,116,101,40,105,110,116,44,32,105,110,116,41,59,0,0,0,0,105,110,116,32,114,101,109,111,118,101,40,99,104,97,114,32,42,41,59,0,0,0,0,0,99,97,110,39,116,32,114,101,97,100,32,102,105,108,101,32,37,115,10,0,0,0,0,0,99,97,110,39,116,32,37,115,32,0,0,0,0,0,0,0,100,111,117,98,108,101,0,0,101,114,114,110,111,
46,104,0,69,120,112,114,101,115,115,105,111,110,73,110,102,105,120,79,112,101,114,97,116,111,114,40,41,10,0,0,0,0,0,0,35,101,108,115,101,32,119,105,116,104,111,117,116,32,35,105,102,0,0,0,0,0,0,0,105,110,116,32,102,99,104,100,105,114,40,105,110,116,41,59,0,0,0,0,0,0,0,0,105,100,101,110,116,105,102,105,101,114,32,101,120,112,101,99,116,101,100,0,0,0,0,0,105,110,116,32,116,111,108,111,119,101,114,40,105,110,116,41,59,0,0,0,0,0,0,0,80,73,67,79,67,95,86,69,82,83,73,79,78,0,0,0,69,67,79,78,78,82,69,70,
85,83,69,68,0,0,0,0,116,109,0,0,0,0,0,0,118,111,105,100,32,115,114,97,110,100,40,105,110,116,41,59,0,0,0,0,0,0,0,0,105,110,116,32,115,116,114,110,99,109,112,40,99,104,97,114,32,42,44,99,104,97,114,32,42,44,105,110,116,41,59,0,102,108,111,97,116,32,108,100,101,120,112,40,102,108,111,97,116,44,32,105,110,116,41,59,0,0,0,0,0,0,0,0,105,110,116,32,102,112,117,116,115,40,99,104,97,114,32,42,44,32,70,73,76,69,32,42,41,59,0,0,0,0,0,0,10,0,0,0,0,0,0,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,0,
0,39,41,39,32,101,120,112,101,99,116,101,100,0,0,0,0,83,105,122,101,32,62,32,48,32,124,124,32,84,121,112,32,61,61,32,38,86,111,105,100,84,121,112,101,0,0,0,0,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,118,97,108,117,101,32,101,120,112,101,99,116,101,100,0,0,115,116,114,117,99,116,117,114,101,32,39,37,115,39,32,105,115,110,39,116,32,100,101,102,105,110,101,100,0,0,0,0,105,110,116,32,102,99,104,111,119,110,40,105,110,116,44,32,117,105,100,95,116,44,32,103,105,100,95,116,41,59,0,0,39,125,
39,32,101,120,112,101,99,116,101,100,0,0,0,0,105,110,116,32,105,115,120,100,105,103,105,116,40,105,110,116,41,59,0,0,0,0,0,0,69,67,79,78,78,65,66,79,82,84,69,68,0,0,0,0,105,110,116,32,116,105,109,101,103,109,40,115,116,114,117,99,116,32,116,109,32,42,41,59,0,0,0,0,0,0,0,0,104,101,97,112,46,99,0,0,105,110,116,32,114,97,110,100,40,41,59,0,0,0,0,0,105,110,116,32,115,116,114,99,109,112,40,99,104,97,114,32,42,44,99,104,97,114,32,42,41,59,0,0,0,0,0,0,102,108,111,97,116,32,102,114,101,120,112,40,102,108,
111,97,116,44,32,105,110,116,32,42,41,59,0,0,0,0,0,0,105,110,116,32,102,112,117,116,99,40,105,110,116,44,32,70,73,76,69,32,42,41,59,0,94,10,37,115,58,37,100,58,32,0,0,0,0,0,0,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,0,39,93,39,32,101,120,112,101,99,116,101,100,0,0,0,0,69,120,112,114,101,115,115,105,111,110,80,111,115,116,102,105,120,79,112,101,114,97,116,111,114,40,41,10,0,0,0,0,39,37,115,39,32,105,115,32,117,110,100,101,102,105,110,101,100,0,0,0,0,0,0,0,105,110,118,97,108,105,100,
32,117,115,101,32,111,102,32,97,32,78,85,76,76,32,112,111,105,110,116,101,114,0,0,0,118,111,105,100,32,95,101,120,105,116,40,105,110,116,41,59,0,0,0,0,0,0,0,0,101,120,112,114,101,115,115,105,111,110,32,101,120,112,101,99,116,101,100,0,0,0,0,0,105,110,116,32,105,115,117,112,112,101,114,40,105,110,116,41,59,0,0,0,0,0,0,0,69,67,72,73,76,68,0,0,99,104,97,114,32,42,115,116,114,112,116,105,109,101,40,99,104,97,114,32,42,44,32,99,104,97,114,32,42,44,32,115,116,114,117,99,116,32,116,109,32,42,41,59,0,0,0,
0,118,111,105,100,32,102,114,101,101,40,118,111,105,100,32,42,41,59,0,0,0,0,0,0,99,104,97,114,32,42,115,116,114,114,99,104,114,40,99,104,97,114,32,42,44,105,110,116,41,59,0,0,0,0,0,0,102,108,111,97,116,32,102,109,111,100,40,102,108,111,97,116,44,32,102,108,111,97,116,41,59,0,0,0,0,0,0,0,99,104,97,114,32,42,102,103,101,116,115,40,99,104,97,114,32,42,44,32,105,110,116,44,32,70,73,76,69,32,42,41,59,0,0,0,0,0,0,0,117,110,115,105,103,110,101,100,32,105,110,116,0,0,0,0,98,97,100,32,116,121,112,101,32,100,
101,99,108,97,114,97,116,105,111,110,0,0,0,0,105,100,101,110,116,105,102,105,101,114,32,101,120,112,101,99,116,101,100,0,0,0,0,0,115,101,116,117,112,40,41,59,32,119,104,105,108,101,40,49,41,32,123,32,108,111,111,112,40,41,59,32,125,0,0,0,112,111,116,32,61,32,48,59,32,111,110,109,101,115,115,97,103,101,32,61,32,102,117,110,99,116,105,111,110,40,101,118,101,110,116,41,32,123,32,105,102,32,40,39,99,111,100,101,39,32,105,110,32,101,118,101,110,116,46,100,97,116,97,41,32,123,32,77,111,100,117,108,101,
46,99,99,97,108,108,40,39,105,110,105,116,80,105,99,111,99,39,44,32,39,118,39,44,32,91,39,115,116,114,105,110,103,39,93,44,32,91,101,118,101,110,116,46,100,97,116,97,46,99,111,100,101,93,41,59,32,125,32,101,108,115,101,32,105,102,32,40,39,112,111,116,39,32,105,110,32,101,118,101,110,116,46,100,97,116,97,41,32,123,32,112,111,116,32,61,32,101,118,101,110,116,46,100,97,116,97,46,112,111,116,59,32,125,32,125,0,0,0,86,97,114,105,97,98,108,101,65,108,108,111,99,86,97,108,117,101,70,114,111,109,84,121,112,
101,0,0,0,0,0,0,86,97,114,105,97,98,108,101,65,108,108,111,99,86,97,108,117,101,65,110,100,67,111,112,121,0,0,0,0,0,0,0,76,101,120,84,111,107,101,110,105,115,101,0,0,0,0,0,76,101,120,71,101,116,82,97,119,84,111,107,101,110,0,0,76,101,120,67,111,112,121,84,111,107,101,110,115,0,0,0,72,101,97,112,80,111,112,83,116,97,99,107,0,0,0,0,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,67,111,108,108,97,112,115,101,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,32,0,0,0,200,6,0,0,92,0,0,0,200,37,
0,0,248,0,0,0,168,28,0,0,152,1,0,0,104,22,0,0,104,0,0,0,64,16,0,0,214,0,0,0,176,10,0,0,246,0,0,0,152,6,0,0,94,1,0,0,16,4,0,0,6,0,0,0,80,2,0,0,96,0,0,0,144,0,0,0,8,0,0,0,248,45,0,0,0,1,0,0,136,44,0,0,44,1,0,0,24,43,0,0,110,0,0,0,176,41,0,0,230,0,0,0,144,40,0,0,148,1,0,0,208,38,0,0,198,0,0,0,184,37,0,0,208,0,0,0,184,36,0,0,76,1,0,0,248,35,0,0,138,0,0,0,24,35,0,0,46,1,0,0,96,34,0,0,96,1,0,0,160,33,0,0,154,0,0,0,144,32,0,0,112,1,0,0,120,31,0,0,204,0,0,0,184,30,0,0,84,1,0,0,104,29,0,0,106,0,0,0,144,28,
0,0,166,1,0,0,32,28,0,0,102,1,0,0,104,27,0,0,66,1,0,0,8,27,0,0,130,0,0,0,168,26,0,0,88,0,0,0,32,26,0,0,14,1,0,0,112,25,0,0,120,1,0,0,160,24,0,0,34,0,0,0,232,23,0,0,202,0,0,0,248,22,0,0,34,1,0,0,72,22,0,0,62,1,0,0,208,21,0,0,90,0,0,0,88,21,0,0,40,1,0,0,192,20,0,0,36,1,0,0,104,20,0,0,86,1,0,0,224,19,0,0,72,0,0,0,32,19,0,0,140,0,0,0,64,18,0,0,2,1,0,0,176,17,0,0,156,1,0,0,224,16,0,0,106,1,0,0,32,16,0,0,54,1,0,0,176,15,0,0,60,1,0,0,32,15,0,0,194,0,0,0,96,14,0,0,158,0,0,0,0,14,0,0,72,1,0,0,152,13,0,0,58,
1,0,0,16,13,0,0,98,0,0,0,112,12,0,0,142,0,0,0,16,12,0,0,10,1,0,0,32,11,0,0,130,1,0,0,152,10,0,0,108,0,0,0,80,10,0,0,30,0,0,0,16,10,0,0,206,0,0,0,216,9,0,0,2,0,0,0,136,9,0,0,64,0,0,0,48,9,0,0,244,0,0,0,192,8,0,0,162,1,0,0,80,8,0,0,132,0,0,0,232,7,0,0,110,1,0,0,56,7,0,0,0,0,0,0,0,0,0,0,116,121,112,101,100,101,102,32,105,110,116,32,117,105,100,95,116,59,32,116,121,112,101,100,101,102,32,105,110,116,32,103,105,100,95,116,59,32,116,121,112,101,100,101,102,32,105,110,116,32,112,105,100,95,116,59,32,116,
121,112,101,100,101,102,32,105,110,116,32,111,102,102,95,116,59,32,116,121,112,101,100,101,102,32,105,110,116,32,115,105,122,101,95,116,59,32,116,121,112,101,100,101,102,32,105,110,116,32,115,115,105,122,101,95,116,59,32,116,121,112,101,100,101,102,32,105,110,116,32,117,115,101,99,111,110,100,115,95,116,59,116,121,112,101,100,101,102,32,105,110,116,32,105,110,116,112,116,114,95,116,59,0,0,0,0,0,0,0,94,115,48,48,48,48,0,0,94,101,48,48,48,48,0,0,60,0,0,0,144,15,0,0,92,1,0,0,88,40,0,0,100,0,0,0,104,
30,0,0,222,0,0,0,192,23,0,0,42,0,0,0,144,17,0,0,164,1,0,0,240,11,0,0,144,1,0,0,200,7,0,0,64,1,0,0,192,4,0,0,30,1,0,0,224,2,0,0,88,1,0,0,56,1,0,0,170,0,0,0,144,46,0,0,68,0,0,0,24,45,0,0,118,0,0,0,160,43,0,0,12,1,0,0,56,42,0,0,80,1,0,0,216,40,0,0,148,0,0,0,88,39,0,0,168,0,0,0,24,38,0,0,124,1,0,0,240,36,0,0,218,0,0,0,48,36,0,0,116,1,0,0,72,35,0,0,16,1,0,0,128,34,0,0,184,1,0,0,200,33,0,0,120,0,0,0,192,32,0,0,80,0,0,0,216,31,0,0,118,1,0,0,224,30,0,0,28,0,0,0,160,29,0,0,0,0,0,0,0,0,0,0,16,0,0,0,16,40,0,
0,40,0,0,0,16,30,0,0,20,0,0,0,128,23,0,0,10,0,0,0,80,17,0,0,50,0,0,0,152,11,0,0,166,0,0,0,152,7,0,0,58,0,0,0,160,4,0,0,86,0,0,0,192,2,0,0,178,0,0,0,24,1,0,0,78,1,0,0,120,46,0,0,38,1,0,0,8,45,0,0,164,0,0,0,136,43,0,0,100,1,0,0,40,42,0,0,168,1,0,0,200,40,0,0,32,1,0,0,64,39,0,0,186,0,0,0,0,38,0,0,224,0,0,0,224,36,0,0,8,1,0,0,32,36,0,0,0,0,0,0,0,0,0,0,22,1,0,0,200,24,0,0,138,1,0,0,96,18,0,0,240,0,0,0,184,12,0,0,146,0,0,0,120,8,0,0,134,0,0,0,16,5,0,0,200,0,0,0,40,3,0,0,200,0,0,0,120,1,0,0,220,0,0,0,208,
46,0,0,178,1,0,0,88,45,0,0,114,1,0,0,224,43,0,0,28,1,0,0,144,42,0,0,226,0,0,0,40,41,0,0,6,1,0,0,176,39,0,0,104,1,0,0,96,38,0,0,160,0,0,0,32,37,0,0,182,0,0,0,104,36,0,0,126,0,0,0,128,35,0,0,68,1,0,0,184,34,0,0,180,0,0,0,0,34,0,0,20,1,0,0,248,32,0,0,24,0,0,0,24,32,0,0,242,0,0,0,24,31,0,0,102,0,0,0,240,29,0,0,90,1,0,0,16,29,0,0,70,1,0,0,72,28,0,0,82,0,0,0,144,27,0,0,82,0,0,0,48,27,0,0,150,1,0,0,208,26,0,0,44,0,0,0,80,26,0,0,62,0,0,0,168,25,0,0,56,1,0,0,16,25,0,0,212,0,0,0,72,24,0,0,52,1,0,0,104,23,0,
0,74,0,0,0,168,22,0,0,76,0,0,0,0,22,0,0,190,0,0,0,120,21,0,0,128,0,0,0,232,20,0,0,134,1,0,0,136,20,0,0,162,0,0,0,16,20,0,0,98,1,0,0,96,19,0,0,232,0,0,0,208,18,0,0,94,0,0,0,232,17,0,0,122,1,0,0,40,17,0,0,18,0,0,0,136,16,0,0,48,0,0,0,208,15,0,0,66,0,0,0,72,15,0,0,228,0,0,0,144,14,0,0,0,0,0,0,0,0,0,0,116,121,112,101,100,101,102,32,115,116,114,117,99,116,32,95,95,118,97,95,108,105,115,116,83,116,114,117,99,116,32,118,97,95,108,105,115,116,59,32,116,121,112,101,100,101,102,32,115,116,114,117,99,116,32,
95,95,70,73,76,69,83,116,114,117,99,116,32,70,73,76,69,59,0,0,0,0,0,0,0,116,121,112,101,100,101,102,32,105,110,116,32,98,111,111,108,59,0,0,0,0,0,0,0,36,0,0,0,144,12,0,0,142,1,0,0,160,39,0,0,140,1,0,0,216,29,0,0,114,0,0,0,72,23,0,0,236,0,0,0,8,17,0,0,188,0,0,0,88,11,0,0,144,0,0,0,112,7,0,0,132,1,0,0,128,4,0,0,70,0,0,0,168,2,0,0,174,1,0,0,232,0,0,0,196,0,0,0,72,46,0,0,26,1,0,0,224,44,0,0,0,0,0,0,0,0,0,0,116,121,112,101,100,101,102,32,105,110,116,32,116,105,109,101,95,116,59,32,116,121,112,101,100,
101,102,32,105,110,116,32,99,108,111,99,107,95,116,59,0,0,0,0,0,0,0,0,172,0,0,0,56,8,0,0,18,1,0,0,72,38,0,0,124,0,0,0,248,28,0,0,152,0,0,0,144,22,0,0,160,1,0,0,112,16,0,0,82,1,0,0,208,10,0,0,50,1,0,0,232,6,0,0,136,0,0,0,56,4,0,0,78,0,0,0,96,2,0,0,174,0,0,0,168,0,0,0,180,1,0,0,40,46,0,0,48,1,0,0,184,44,0,0,12,0,0,0,72,43,0,0,238,0,0,0,200,41,0,0,22,0,0,0,168,40,0,0,250,0,0,0,240,38,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,184,38,0,0,83,0,0,0,0,0,0,0,64,37,0,0,88,0,0,0,0,0,0,0,160,36,0,0,
89,0,0,0,0,0,0,0,224,35,0,0,85,0,0,0,0,0,0,0,240,34,0,0,86,0,0,0,0,0,0,0,64,34,0,0,87,0,0,0,0,0,0,0,56,33,0,0,84,0,0,0,0,0,0,0,120,32,0,0,64,0,0,0,0,0,0,0,80,31,0,0,78,0,0,0,0,0,0,0,96,30,0,0,80,0,0,0,0,0,0,0,56,29,0,0,55,0,0,0,0,0,0,0,112,28,0,0,71,0,0,0,0,0,0,0,168,27,0,0,81,0,0,0,0,0,0,0,96,27,0,0,91,0,0,0,0,0,0,0,240,26,0,0,72,0,0,0,0,0,0,0,160,26,0,0,57,0,0,0,0,0,0,0,0,26,0,0,73,0,0,0,0,0,0,0,96,25,0,0,59,0,0,0,0,0,0,0,152,24,0,0,66,0,0,0,0,0,0,0,184,23,0,0,56,0,0,0,0,0,0,0,224,22,0,0,74,0,0,
0,0,0,0,0,64,22,0,0,75,0,0,0,0,0,0,0,200,21,0,0,76,0,0,0,0,0,0,0,32,21,0,0,54,0,0,0,0,0,0,0,184,20,0,0,60,0,0,0,0,0,0,0,96,20,0,0,90,0,0,0,0,0,0,0,176,19,0,0,65,0,0,0,0,0,0,0,24,19,0,0,82,0,0,0,0,0,0,0,32,18,0,0,62,0,0,0,0,0,0,0,136,17,0,0,61,0,0,0,0,0,0,0,208,16,0,0,37,0,0,0,0,0,0,0,24,16,0,0,63,0,0,0,0,0,0,0,136,15,0,0,67,0,0,0,0,0,0,0,24,15,0,0,79,0,0,0,0,0,0,0,80,14,0,0,70,0,0,0,0,0,0,0,248,13,0,0,68,0,0,0,0,0,0,0,112,13,0,0,69,0,0,0,0,0,0,0,8,13,0,0,58,0,0,0,0,0,0,0,104,12,0,0,77,0,0,0,0,0,0,
0,0,0,0,0,56,47,0,0,0,0,0,0,0,0,0,0,104,13,0,0,0,0,0,0,0,13,0,0,0,2,0,0,96,12,0,0,0,2,0,0,184,11,0,0,0,2,0,0,24,11,0,0,0,2,0,0,144,10,0,0,0,2,0,0,72,10,0,0,0,2,0,0,8,10,0,0,0,2,0,0,192,9,0,0,0,2,0,0,128,9,0,0,0,2,0,0,16,9,0,0,0,2,0,0,184,8,0,0,0,2,0,0,48,8,0,0,0,3,0,0,192,7,0,0,0,3,0,0,40,7,0,0,0,4,0,0,136,6,0,0,0,5,0,0,104,6,0,0,0,6,0,0,64,6,0,0,0,7,0,0,200,5,0,0,14,8,0,0,176,5,0,0,0,9,0,0,120,5,0,0,0,9,0,0,64,5,0,0,0,10,0,0,0,5,0,0,0,10,0,0,184,4,0,0,0,10,0,0,104,4,0,0,0,10,0,0,8,4,0,0,0,11,0,0,
248,3,0,0,0,11,0,0,224,3,0,0,14,12,0,0,144,3,0,0,14,12,0,0,128,3,0,0,14,13,0,0,96,3,0,0,0,13,0,0,80,3,0,0,0,13,0,0,32,3,0,0,254,0,0,0,216,2,0,0,254,0,0,0,152,2,0,0,14,0,0,0,72,2,0,0,14,0,0,0,64,2,0,0,14,0,0,0,32,2,0,0,14,0,0,0,192,1,0,0,0,15,0,0,184,1,0,0,240,0,0,0,160,1,0,0,0,15,0,0,48,29,0,0,0,15,0,0,104,28,0,0,15,0,0,0,144,1,0,0,240,0,0,0,112,1,0,0,154,1,0,0,40,18,0,0,46,0,0,0,16,41,0,0,84,0,0,0,0,31,0,0,128,1,0,0,40,24,0,0,74,1,0,0,208,17,0,0,38,0,0,0,56,12,0,0,136,1,0,0,16,8,0,0,170,1,0,0,232,
4,0,0,210,0,0,0,8,3,0,0,54,0,0,0,88,1,0,0,252,0,0,0,176,46,0,0,176,0,0,0,56,45,0,0,26,0,0,0,192,43,0,0,176,1,0,0,88,42,0,0,150,0,0,0,248,40,0,0,4,1,0,0,128,39,0,0,24,1,0,0,48,38,0,0,122,0,0,0,8,37,0,0,116,0,0,0,80,36,0,0,4,0,0,0,104,35,0,0,184,0,0,0,160,34,0,0,182,1,0,0,232,33,0,0,234,0,0,0,224,32,0,0,0,0,0,0,0,0,0,0,205,59,127,102,158,160,246,63,205,59,127,102,158,160,230,63,24,45,68,84,251,33,233,63,24,45,68,84,251,33,249,63,24,45,68,84,251,33,9,64,254,130,43,101,71,21,247,63,14,229,38,21,123,203,
219,63,239,57,250,254,66,46,230,63,22,85,181,187,177,107,2,64,105,87,20,139,10,191,5,64,109,155,66,80,215,13,242,63,131,200,201,109,48,95,228,63,131,200,201,109,48,95,212,63,0,0,0,0,152,71,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,42,1,0,0,96,24,0,0,14,0,0,0,112,42,0,0,108,1,0,0,0,32,0,0,146,1,0,0,248,24,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,110,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,30,0,0,0,
0,0,0,0,34,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,93,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,75,0,0,0,0,0,0,0,95,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,6,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,95,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,131,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,107,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,2,0,0,0,0,
0,0,0,19,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,105,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,101,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,90,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,115,0,0,0,0,0,0,0,84,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,113,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,89,0,0,0,0,0,0,0,35,0,0,0,0,0,
0,0,104,0,0,0,0,0,0,0,111,0,0,0,0,0,0,0,103,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,125,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,74,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,98,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,136,18,0,0,0,0,0,0,64,66,15,0,0,0,0,0,0,4,0,0,0,0,0,0]),"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);function runPostSets(){HEAP32[28]=112}var tempDoublePtr=Runtime.alignMemory(allocate(12,"i8",ALLOC_STATIC),8);assert(0==tempDoublePtr%8);
function copyTempFloat(b){HEAP8[tempDoublePtr]=HEAP8[b];HEAP8[tempDoublePtr+1]=HEAP8[b+1];HEAP8[tempDoublePtr+2]=HEAP8[b+2];HEAP8[tempDoublePtr+3]=HEAP8[b+3]}function copyTempDouble(b){HEAP8[tempDoublePtr]=HEAP8[b];HEAP8[tempDoublePtr+1]=HEAP8[b+1];HEAP8[tempDoublePtr+2]=HEAP8[b+2];HEAP8[tempDoublePtr+3]=HEAP8[b+3];HEAP8[tempDoublePtr+4]=HEAP8[b+4];HEAP8[tempDoublePtr+5]=HEAP8[b+5];HEAP8[tempDoublePtr+6]=HEAP8[b+6];HEAP8[tempDoublePtr+7]=HEAP8[b+7]}var _llvm_dbg_declare=void 0;
function _emscripten_asm_const(b){Runtime.asmConstCache||(Runtime.asmConstCache={});var c=Runtime.asmConstCache[b];if(c)return c();c=Runtime.asmConstCache[b]=eval("(function(){ "+Pointer_stringify(b)+" })");return c()}function _strlen(b){b|=0;for(var c=0,c=b;HEAP8[c];)c=c+1|0;return c-b|0}
function _memset(b,c,a){b|=0;c|=0;a|=0;var d=0,e=0,f=0,g=0,d=b+a|0;if(20<=(a|0)){c&=255;g=b&3;e=c|c<<8|c<<16|c<<24;f=d&-4;if(g)for(g=b+4-g|0;(b|0)<(g|0);)HEAP8[b]=c,b=b+1|0;for(;(b|0)<(f|0);)HEAP32[b>>2]=e,b=b+4|0}for(;(b|0)<(d|0);)HEAP8[b]=c,b=b+1|0}var _llvm_memset_p0i8_i32=_memset;function _strncpy(b,c,a){b|=0;c|=0;a|=0;for(var d=0,e=0,f=0;(f|0)<(a|0);)e=d?0:HEAP8[c+f|0],HEAP8[b+f|0]=e,d=d?1:0==HEAP8[c+f|0],f=f+1|0;return b|0}
function _strncmp(b,c,a){for(var d=0;d<a;){var e=HEAPU8[b+d|0],f=HEAPU8[c+d|0];if(e==f&&0==e)break;if(0==e)return-1;if(0==f)return 1;if(e==f)d++;else return e>f?1:-1}return 0}var _llvm_pow_f64=Math_pow;function _isalnum(b){return 48<=b&&57>=b||97<=b&&122>=b||65<=b&&90>=b}function _isspace(b){return 32==b||9<=b&&13>=b}
function _memcpy(b,c,a){b|=0;c|=0;a|=0;var d=0,d=b|0;if((b&3)==(c&3)){for(;b&3;){if(0==(a|0))return d|0;HEAP8[b]=HEAP8[c];b=b+1|0;c=c+1|0;a=a-1|0}for(;4<=(a|0);)HEAP32[b>>2]=HEAP32[c>>2],b=b+4|0,c=c+4|0,a=a-4|0}for(;0<(a|0);)HEAP8[b]=HEAP8[c],b=b+1|0,c=c+1|0,a=a-1|0;return d|0}var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
function ___assert_fail(b,c,a,d){ABORT=!0;throw"Assertion failed: "+Pointer_stringify(b)+", at: "+[c?Pointer_stringify(c):"unknown filename",a,d?Pointer_stringify(d):"unknown function"]+" at "+Error().stack;}function _strcmp(b,c){return _strncmp(b,c,TOTAL_MEMORY)}var _llvm_va_start=void 0;function _llvm_va_end(){}
var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,
ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,
ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86},ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",
5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",
28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",
47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",
68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",
84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",
102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",
130:"Previous owner died",131:"State not recoverable"},___errno_state=0;function ___setErrNo(b){return HEAP32[___errno_state>>2]=b}
var VFS=void 0,PATH={splitPath:function(b){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(b).slice(1)},normalizeArray:function(b,c){for(var a=0,d=b.length-1;0<=d;d--){var e=b[d];"."===e?b.splice(d,1):".."===e?(b.splice(d,1),a++):a&&(b.splice(d,1),a--)}if(c)for(;a--;a)b.unshift("..");return b},normalize:function(b){var c="/"===b.charAt(0),a="/"===b.substr(-1);(b=PATH.normalizeArray(b.split("/").filter(function(a){return!!a}),!c).join("/"))||c||(b=".");b&&a&&(b+="/");return(c?
"/":"")+b},dirname:function(b){var c=PATH.splitPath(b);b=c[0];c=c[1];if(!b&&!c)return".";c&&(c=c.substr(0,c.length-1));return b+c},basename:function(b,c){if("/"===b)return"/";var a=PATH.splitPath(b)[2];c&&a.substr(-1*c.length)===c&&(a=a.substr(0,a.length-c.length));return a},extname:function(b){return PATH.splitPath(b)[3]},join:function(){var b=Array.prototype.slice.call(arguments,0);return PATH.normalize(b.filter(function(b,a){if("string"!==typeof b)throw new TypeError("Arguments to path.join must be strings");
return b}).join("/"))},resolve:function(){for(var b="",c=!1,a=arguments.length-1;-1<=a&&!c;a--){var d=0<=a?arguments[a]:FS.cwd();if("string"!==typeof d)throw new TypeError("Arguments to path.resolve must be strings");d&&(b=d+"/"+b,c="/"===d.charAt(0))}b=PATH.normalizeArray(b.split("/").filter(function(a){return!!a}),!c).join("/");return(c?"/":"")+b||"."},relative:function(b,c){function a(a){for(var b=0;b<a.length&&""===a[b];b++);for(var c=a.length-1;0<=c&&""===a[c];c--);return b>c?[]:a.slice(b,c-
b+1)}b=PATH.resolve(b).substr(1);c=PATH.resolve(c).substr(1);for(var d=a(b.split("/")),e=a(c.split("/")),f=Math.min(d.length,e.length),g=f,h=0;h<f;h++)if(d[h]!==e[h]){g=h;break}f=[];for(h=g;h<d.length;h++)f.push("..");f=f.concat(e.slice(g));return f.join("/")}},TTY={ttys:[],init:function(){},shutdown:function(){},register:function(b,c){TTY.ttys[b]={input:[],output:[],ops:c};FS.registerDevice(b,TTY.stream_ops)},stream_ops:{open:function(b){var c=TTY.ttys[b.node.rdev];if(!c)throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
b.tty=c;b.seekable=!1},close:function(b){b.tty.output.length&&b.tty.ops.put_char(b.tty,10)},read:function(b,c,a,d,e){if(!b.tty||!b.tty.ops.get_char)throw new FS.ErrnoError(ERRNO_CODES.ENXIO);for(var f=e=0;f<d;f++){var g;try{g=b.tty.ops.get_char(b.tty)}catch(h){throw new FS.ErrnoError(ERRNO_CODES.EIO);}if(void 0===g&&0===e)throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);if(null===g||void 0===g)break;e++;c[a+f]=g}e&&(b.node.timestamp=Date.now());return e},write:function(b,c,a,d,e){if(!b.tty||!b.tty.ops.put_char)throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
for(e=0;e<d;e++)try{b.tty.ops.put_char(b.tty,c[a+e])}catch(f){throw new FS.ErrnoError(ERRNO_CODES.EIO);}d&&(b.node.timestamp=Date.now());return e}},default_tty_ops:{get_char:function(b){if(!b.input.length){var c=null;if(ENVIRONMENT_IS_NODE){if(c=process.stdin.read(),!c){if(process.stdin._readableState&&process.stdin._readableState.ended)return null;return}}else"undefined"!=typeof window&&"function"==typeof window.prompt?(c=window.prompt("Input: "),null!==c&&(c+="\n")):"function"==typeof readline&&
(c=readline(),null!==c&&(c+="\n"));if(!c)return null;b.input=intArrayFromString(c,!0)}return b.input.shift()},put_char:function(b,c){null===c||10===c?(Module.print(b.output.join("")),b.output=[]):b.output.push(TTY.utf8.processCChar(c))}},default_tty1_ops:{put_char:function(b,c){null===c||10===c?(Module.printErr(b.output.join("")),b.output=[]):b.output.push(TTY.utf8.processCChar(c))}}},MEMFS={CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function(b){return MEMFS.createNode(null,"/",16895,
0)},createNode:function(b,c,a,d){if(FS.isBlkdev(a)||FS.isFIFO(a))throw new FS.ErrnoError(ERRNO_CODES.EPERM);a=FS.createNode(b,c,a,d);FS.isDir(a.mode)?(a.node_ops={getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},a.stream_ops={llseek:MEMFS.stream_ops.llseek},
a.contents={}):FS.isFile(a.mode)?(a.node_ops={getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},a.stream_ops={llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap},a.contents=[],a.contentMode=MEMFS.CONTENT_FLEXIBLE):FS.isLink(a.mode)?(a.node_ops={getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},a.stream_ops={}):FS.isChrdev(a.mode)&&(a.node_ops=
{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},a.stream_ops=FS.chrdev_stream_ops);a.timestamp=Date.now();b&&(b.contents[c]=a);return a},ensureFlexible:function(b){b.contentMode!==MEMFS.CONTENT_FLEXIBLE&&(b.contents=Array.prototype.slice.call(b.contents),b.contentMode=MEMFS.CONTENT_FLEXIBLE)},node_ops:{getattr:function(b){var c={};c.dev=FS.isChrdev(b.mode)?b.id:1;c.ino=b.id;c.mode=b.mode;c.nlink=1;c.uid=0;c.gid=0;c.rdev=b.rdev;FS.isDir(b.mode)?c.size=4096:FS.isFile(b.mode)?c.size=
b.contents.length:FS.isLink(b.mode)?c.size=b.link.length:c.size=0;c.atime=new Date(b.timestamp);c.mtime=new Date(b.timestamp);c.ctime=new Date(b.timestamp);c.blksize=4096;c.blocks=Math.ceil(c.size/c.blksize);return c},setattr:function(b,c){void 0!==c.mode&&(b.mode=c.mode);void 0!==c.timestamp&&(b.timestamp=c.timestamp);if(void 0!==c.size){MEMFS.ensureFlexible(b);var a=b.contents;if(c.size<a.length)a.length=c.size;else for(;c.size>a.length;)a.push(0)}},lookup:function(b,c){throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
},mknod:function(b,c,a,d){return MEMFS.createNode(b,c,a,d)},rename:function(b,c,a){if(FS.isDir(b.mode)){var d;try{d=FS.lookupNode(c,a)}catch(e){}if(d)for(var f in d.contents)throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);}delete b.parent.contents[b.name];b.name=a;c.contents[a]=b},unlink:function(b,c){delete b.contents[c]},rmdir:function(b,c){var a=FS.lookupNode(b,c),d;for(d in a.contents)throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);delete b.contents[c]},readdir:function(b){var c=[".",".."],a;for(a in b.contents)b.contents.hasOwnProperty(a)&&
c.push(a);return c},symlink:function(b,c,a){b=MEMFS.createNode(b,c,41471,0);b.link=a;return b},readlink:function(b){if(!FS.isLink(b.mode))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return b.link}},stream_ops:{read:function(b,c,a,d,e){b=b.node.contents;if(e>=b.length)return 0;d=Math.min(b.length-e,d);assert(0<=d);if(8<d&&b.subarray)c.set(b.subarray(e,e+d),a);else for(var f=0;f<d;f++)c[a+f]=b[e+f];return d},write:function(b,c,a,d,e,f){var g=b.node;g.timestamp=Date.now();b=g.contents;if(d&&0===b.length&&
0===e&&c.subarray)return assert(c.length),f&&c.buffer===HEAP8.buffer&&0===a?(g.contents=c,g.contentMode=MEMFS.CONTENT_OWNING):(g.contents=new Uint8Array(c.subarray(a,a+d)),g.contentMode=MEMFS.CONTENT_FIXED),d;MEMFS.ensureFlexible(g);for(b=g.contents;b.length<e;)b.push(0);for(f=0;f<d;f++)b[e+f]=c[a+f];return d},llseek:function(b,c,a){1===a?c+=b.position:2===a&&FS.isFile(b.node.mode)&&(c+=b.node.contents.length);if(0>c)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);b.ungotten=[];return b.position=c},allocate:function(b,
c,a){MEMFS.ensureFlexible(b.node);b=b.node.contents;for(c+=a;c>b.length;)b.push(0)},mmap:function(b,c,a,d,e,f,g){if(!FS.isFile(b.node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENODEV);b=b.node.contents;if(g&2||b.buffer!==c&&b.buffer!==c.buffer){if(0<e||e+d<b.length)b=b.subarray?b.subarray(e,e+d):Array.prototype.slice.call(b,e,e+d);e=!0;d=_malloc(d);if(!d)throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);c.set(b,d)}else e=!1,d=b.byteOffset;return{ptr:d,allocated:e}}}},IDBFS={dbs:{},indexedDB:function(){return window.indexedDB||
window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function(b){return MEMFS.mount.apply(null,arguments)},syncfs:function(b,c,a){IDBFS.getLocalSet(b,function(d,e){if(d)return a(d);IDBFS.getRemoteSet(b,function(b,d){if(b)return a(b);IDBFS.reconcile(c?d:e,c?e:d,a)})})},reconcile:function(b,c,a){var d=0,e={},f;for(f in b.files)if(b.files.hasOwnProperty(f)){var g=b.files[f],h=c.files[f];if(!h||g.timestamp>h.timestamp)e[f]=g,d++}var l={};for(f in c.files)c.files.hasOwnProperty(f)&&
(g=c.files[f],h=b.files[f],h||(l[f]=g,d++));if(!d)return a(null);var k=0,m=function(b){if(b)return a(b);if(++k>=d)return a(null)};b=("remote"===b.type?b.db:c.db).transaction([IDBFS.DB_STORE_NAME],"readwrite");b.onerror=function(){a(this.error)};b=b.objectStore(IDBFS.DB_STORE_NAME);for(var n in e)if(e.hasOwnProperty(n))if(f=e[n],"local"===c.type)try{if(FS.isDir(f.mode))FS.mkdir(n,f.mode);else if(FS.isFile(f.mode)){var q=FS.open(n,"w+",438);FS.write(q,f.contents,0,f.contents.length,0,!0);FS.close(q)}m(null)}catch(p){return m(p)}else f=
b.put(f,n),f.onsuccess=function(){m(null)},f.onerror=function(){m(this.error)};for(n in l)if(l.hasOwnProperty(n))if(f=l[n],"local"===c.type)try{FS.isDir(f.mode)?FS.rmdir(n):FS.isFile(f.mode)&&FS.unlink(n),m(null)}catch(s){return m(s)}else f=b.delete(n),f.onsuccess=function(){m(null)},f.onerror=function(){m(this.error)}},getLocalSet:function(b,c){for(var a={},d=function(a){return"."!==a&&".."!==a},e=function(a){return function(b){return PATH.join(a,b)}},f=FS.readdir(b.mountpoint).filter(d).map(e(b.mountpoint));f.length;){var g=
f.pop(),h,l;try{l=FS.lookupPath(g).node,h=FS.stat(g)}catch(k){return c(k)}if(FS.isDir(h.mode))f.push.apply(f,FS.readdir(g).filter(d).map(e(g))),a[g]={mode:h.mode,timestamp:h.mtime};else if(FS.isFile(h.mode))a[g]={contents:l.contents,mode:h.mode,timestamp:h.mtime};else return c(Error("node type not supported"))}return c(null,{type:"local",files:a})},getDB:function(b,c){var a=IDBFS.dbs[b];if(a)return c(null,a);var d;try{d=IDBFS.indexedDB().open(b,IDBFS.DB_VERSION)}catch(e){return onerror(e)}d.onupgradeneeded=
function(){a=d.result;a.createObjectStore(IDBFS.DB_STORE_NAME)};d.onsuccess=function(){a=d.result;IDBFS.dbs[b]=a;c(null,a)};d.onerror=function(){c(this.error)}},getRemoteSet:function(b,c){var a={};IDBFS.getDB(b.mountpoint,function(b,e){if(b)return c(b);var f=e.transaction([IDBFS.DB_STORE_NAME],"readonly");f.onerror=function(){c(this.error)};f.objectStore(IDBFS.DB_STORE_NAME).openCursor().onsuccess=function(b){b=b.target.result;if(!b)return c(null,{type:"remote",db:e,files:a});a[b.key]=b.value;b.continue()}})}},
NODEFS={mount:function(b){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(b.opts.root),0)},createNode:function(b,c,a,d){if(!FS.isDir(a)&&!FS.isFile(a)&&!FS.isLink(a))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);b=FS.createNode(b,c,a);b.node_ops=NODEFS.node_ops;b.stream_ops=NODEFS.stream_ops;return b},getMode:function(b){var c;try{c=fs.lstatSync(b)}catch(a){if(!a.code)throw a;throw new FS.ErrnoError(ERRNO_CODES[a.code]);}return c.mode},realPath:function(b){for(var c=[];b.parent!==
b;)c.push(b.name),b=b.parent;c.push(b.mount.opts.root);c.reverse();return PATH.join.apply(null,c)},node_ops:{getattr:function(b){b=NODEFS.realPath(b);var c;try{c=fs.lstatSync(b)}catch(a){if(!a.code)throw a;throw new FS.ErrnoError(ERRNO_CODES[a.code]);}return{dev:c.dev,ino:c.ino,mode:c.mode,nlink:c.nlink,uid:c.uid,gid:c.gid,rdev:c.rdev,size:c.size,atime:c.atime,mtime:c.mtime,ctime:c.ctime,blksize:c.blksize,blocks:c.blocks}},setattr:function(b,c){var a=NODEFS.realPath(b);try{void 0!==c.mode&&(fs.chmodSync(a,
c.mode),b.mode=c.mode);if(void 0!==c.timestamp){var d=new Date(c.timestamp);fs.utimesSync(a,d,d)}void 0!==c.size&&fs.truncateSync(a,c.size)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);}},lookup:function(b,c){var a=PATH.join(NODEFS.realPath(b),c),a=NODEFS.getMode(a);return NODEFS.createNode(b,c,a)},mknod:function(b,c,a,d){b=NODEFS.createNode(b,c,a,d);c=NODEFS.realPath(b);try{FS.isDir(b.mode)?fs.mkdirSync(c,b.mode):fs.writeFileSync(c,"",{mode:b.mode})}catch(e){if(!e.code)throw e;
throw new FS.ErrnoError(ERRNO_CODES[e.code]);}return b},rename:function(b,c,a){b=NODEFS.realPath(b);c=PATH.join(NODEFS.realPath(c),a);try{fs.renameSync(b,c)}catch(d){if(!d.code)throw d;throw new FS.ErrnoError(ERRNO_CODES[d.code]);}},unlink:function(b,c){var a=PATH.join(NODEFS.realPath(b),c);try{fs.unlinkSync(a)}catch(d){if(!d.code)throw d;throw new FS.ErrnoError(ERRNO_CODES[d.code]);}},rmdir:function(b,c){var a=PATH.join(NODEFS.realPath(b),c);try{fs.rmdirSync(a)}catch(d){if(!d.code)throw d;throw new FS.ErrnoError(ERRNO_CODES[d.code]);
}},readdir:function(b){b=NODEFS.realPath(b);try{return fs.readdirSync(b)}catch(c){if(!c.code)throw c;throw new FS.ErrnoError(ERRNO_CODES[c.code]);}},symlink:function(b,c,a){b=PATH.join(NODEFS.realPath(b),c);try{fs.symlinkSync(a,b)}catch(d){if(!d.code)throw d;throw new FS.ErrnoError(ERRNO_CODES[d.code]);}},readlink:function(b){b=NODEFS.realPath(b);try{return fs.readlinkSync(b)}catch(c){if(!c.code)throw c;throw new FS.ErrnoError(ERRNO_CODES[c.code]);}}},stream_ops:{open:function(b){var c=NODEFS.realPath(b.node);
try{FS.isFile(b.node.mode)&&(b.nfd=fs.openSync(c,b.flags))}catch(a){if(!a.code)throw a;throw new FS.ErrnoError(ERRNO_CODES[a.code]);}},close:function(b){try{FS.isFile(b.node.mode)&&fs.closeSync(b.nfd)}catch(c){if(!c.code)throw c;throw new FS.ErrnoError(ERRNO_CODES[c.code]);}},read:function(b,c,a,d,e){var f=new Buffer(d),g;try{g=fs.readSync(b.nfd,f,0,d,e)}catch(h){throw new FS.ErrnoError(ERRNO_CODES[h.code]);}if(0<g)for(b=0;b<g;b++)c[a+b]=f[b];return g},write:function(b,c,a,d,e){c=new Buffer(c.subarray(a,
a+d));var f;try{f=fs.writeSync(b.nfd,c,0,d,e)}catch(g){throw new FS.ErrnoError(ERRNO_CODES[g.code]);}return f},llseek:function(b,c,a){if(1===a)c+=b.position;else if(2===a&&FS.isFile(b.node.mode))try{var d=fs.fstatSync(b.nfd);c+=d.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code]);}if(0>c)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return b.position=c}}};_stdin=allocate(1,"i32*",ALLOC_STATIC);_stdout=allocate(1,"i32*",ALLOC_STATIC);_stderr=allocate(1,"i32*",ALLOC_STATIC);
function _fflush(b){}
var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:function(b){this.errno=b;for(var c in ERRNO_CODES)if(ERRNO_CODES[c]===b){this.code=c;break}this.message=ERRNO_MESSAGES[b]},handleFSError:function(b){if(!(b instanceof FS.ErrnoError))throw b+" : "+Error().stack;return ___setErrNo(b.errno)},lookupPath:function(b,c){b=PATH.resolve(FS.cwd(),b);c=c||{recurse_count:0};if(8<c.recurse_count)throw new FS.ErrnoError(ERRNO_CODES.ELOOP);for(var a=
PATH.normalizeArray(b.split("/").filter(function(a){return!!a}),!1),d=FS.root,e="/",f=0;f<a.length;f++){var g=f===a.length-1;if(g&&c.parent)break;d=FS.lookupNode(d,a[f]);e=PATH.join(e,a[f]);FS.isMountpoint(d)&&(d=d.mount.root);if(!g||c.follow)for(g=0;FS.isLink(d.mode);)if(d=FS.readlink(e),e=PATH.resolve(PATH.dirname(e),d),d=FS.lookupPath(e,{recurse_count:c.recurse_count}).node,40<g++)throw new FS.ErrnoError(ERRNO_CODES.ELOOP);}return{path:e,node:d}},getPath:function(b){for(var c;;){if(FS.isRoot(b))return c?
PATH.join(b.mount.mountpoint,c):b.mount.mountpoint;c=c?PATH.join(b.name,c):b.name;b=b.parent}},hashName:function(b,c){for(var a=0,d=0;d<c.length;d++)a=(a<<5)-a+c.charCodeAt(d)|0;return(b+a>>>0)%FS.nameTable.length},hashAddNode:function(b){var c=FS.hashName(b.parent.id,b.name);b.name_next=FS.nameTable[c];FS.nameTable[c]=b},hashRemoveNode:function(b){var c=FS.hashName(b.parent.id,b.name);if(FS.nameTable[c]===b)FS.nameTable[c]=b.name_next;else for(c=FS.nameTable[c];c;){if(c.name_next===b){c.name_next=
b.name_next;break}c=c.name_next}},lookupNode:function(b,c){var a=FS.mayLookup(b);if(a)throw new FS.ErrnoError(a);a=FS.hashName(b.id,c);for(a=FS.nameTable[a];a;a=a.name_next){var d=a.name;if(a.parent.id===b.id&&d===c)return a}return FS.lookup(b,c)},createNode:function(b,c,a,d){var e={id:FS.nextInode++,name:c,mode:a,node_ops:{},stream_ops:{},rdev:d,parent:null,mount:null};b||(b=e);e.parent=b;e.mount=b.mount;Object.defineProperties(e,{read:{get:function(){return 365===(e.mode&365)},set:function(a){a?
e.mode|=365:e.mode&=-366}},write:{get:function(){return 146===(e.mode&146)},set:function(a){a?e.mode|=146:e.mode&=-147}},isFolder:{get:function(){return FS.isDir(e.mode)}},isDevice:{get:function(){return FS.isChrdev(e.mode)}}});FS.hashAddNode(e);return e},destroyNode:function(b){FS.hashRemoveNode(b)},isRoot:function(b){return b===b.parent},isMountpoint:function(b){return b.mounted},isFile:function(b){return 32768===(b&61440)},isDir:function(b){return 16384===(b&61440)},isLink:function(b){return 40960===
(b&61440)},isChrdev:function(b){return 8192===(b&61440)},isBlkdev:function(b){return 24576===(b&61440)},isFIFO:function(b){return 4096===(b&61440)},isSocket:function(b){return 49152===(b&49152)},flagModes:{r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(b){var c=FS.flagModes[b];if("undefined"===typeof c)throw Error("Unknown file open mode: "+b);return c},flagsToPermissionString:function(b){var c=
["r","w","rw"][b&2097155];b&512&&(c+="w");return c},nodePermissions:function(b,c){if(FS.ignorePermissions)return 0;if(-1===c.indexOf("r")||b.mode&292){if(-1!==c.indexOf("w")&&!(b.mode&146)||-1!==c.indexOf("x")&&!(b.mode&73))return ERRNO_CODES.EACCES}else return ERRNO_CODES.EACCES;return 0},mayLookup:function(b){return FS.nodePermissions(b,"x")},mayCreate:function(b,c){try{return FS.lookupNode(b,c),ERRNO_CODES.EEXIST}catch(a){}return FS.nodePermissions(b,"wx")},mayDelete:function(b,c,a){var d;try{d=
FS.lookupNode(b,c)}catch(e){return e.errno}if(b=FS.nodePermissions(b,"wx"))return b;if(a){if(!FS.isDir(d.mode))return ERRNO_CODES.ENOTDIR;if(FS.isRoot(d)||FS.getPath(d)===FS.cwd())return ERRNO_CODES.EBUSY}else if(FS.isDir(d.mode))return ERRNO_CODES.EISDIR;return 0},mayOpen:function(b,c){return b?FS.isLink(b.mode)?ERRNO_CODES.ELOOP:FS.isDir(b.mode)&&(0!==(c&2097155)||c&512)?ERRNO_CODES.EISDIR:FS.nodePermissions(b,FS.flagsToPermissionString(c)):ERRNO_CODES.ENOENT},MAX_OPEN_FDS:4096,nextfd:function(b,
c){c=c||FS.MAX_OPEN_FDS;for(var a=b||1;a<=c;a++)if(!FS.streams[a])return a;throw new FS.ErrnoError(ERRNO_CODES.EMFILE);},getStream:function(b){return FS.streams[b]},createStream:function(b,c,a){c=FS.nextfd(c,a);b.fd=c;Object.defineProperties(b,{object:{get:function(){return b.node},set:function(a){b.node=a}},isRead:{get:function(){return 1!==(b.flags&2097155)}},isWrite:{get:function(){return 0!==(b.flags&2097155)}},isAppend:{get:function(){return b.flags&1024}}});return FS.streams[c]=b},closeStream:function(b){FS.streams[b]=
null},chrdev_stream_ops:{open:function(b){var c=FS.getDevice(b.node.rdev);b.stream_ops=c.stream_ops;b.stream_ops.open&&b.stream_ops.open(b)},llseek:function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);}},major:function(b){return b>>8},minor:function(b){return b&255},makedev:function(b,c){return b<<8|c},registerDevice:function(b,c){FS.devices[b]={stream_ops:c}},getDevice:function(b){return FS.devices[b]},syncfs:function(b,c){"function"===typeof b&&(c=b,b=!1);for(var a=0,d=FS.mounts.length,e=function(b){if(b)return c(b);
++a>=d&&c(null)},f=0;f<FS.mounts.length;f++){var g=FS.mounts[f];g.type.syncfs?g.type.syncfs(g,b,e):e(null)}},mount:function(b,c,a){var d;a&&(d=FS.lookupPath(a,{follow:!1}),a=d.path);c={type:b,opts:c,mountpoint:a,root:null};b=b.mount(c);b.mount=c;c.root=b;d&&(d.node.mount=c,d.node.mounted=!0,"/"===a&&(FS.root=c.root));FS.mounts.push(c);return b},lookup:function(b,c){return b.node_ops.lookup(b,c)},mknod:function(b,c,a){var d=FS.lookupPath(b,{parent:!0}).node;b=PATH.basename(b);var e=FS.mayCreate(d,
b);if(e)throw new FS.ErrnoError(e);if(!d.node_ops.mknod)throw new FS.ErrnoError(ERRNO_CODES.EPERM);return d.node_ops.mknod(d,b,c,a)},create:function(b,c){c=(void 0!==c?c:438)&4095;c|=32768;return FS.mknod(b,c,0)},mkdir:function(b,c){c=(void 0!==c?c:511)&1023;c|=16384;return FS.mknod(b,c,0)},mkdev:function(b,c,a){"undefined"===typeof a&&(a=c,c=438);return FS.mknod(b,c|8192,a)},symlink:function(b,c){var a=FS.lookupPath(c,{parent:!0}).node,d=PATH.basename(c),e=FS.mayCreate(a,d);if(e)throw new FS.ErrnoError(e);
if(!a.node_ops.symlink)throw new FS.ErrnoError(ERRNO_CODES.EPERM);return a.node_ops.symlink(a,d,b)},rename:function(b,c){var a=PATH.dirname(b),d=PATH.dirname(c),e=PATH.basename(b),f=PATH.basename(c),g,h,l;try{g=FS.lookupPath(b,{parent:!0}),h=g.node,g=FS.lookupPath(c,{parent:!0}),l=g.node}catch(k){throw new FS.ErrnoError(ERRNO_CODES.EBUSY);}if(h.mount!==l.mount)throw new FS.ErrnoError(ERRNO_CODES.EXDEV);g=FS.lookupNode(h,e);d=PATH.relative(b,d);if("."!==d.charAt(0))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
d=PATH.relative(c,a);if("."!==d.charAt(0))throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);var m;try{m=FS.lookupNode(l,f)}catch(n){}if(g!==m){a=FS.isDir(g.mode);if(e=FS.mayDelete(h,e,a))throw new FS.ErrnoError(e);if(e=m?FS.mayDelete(l,f,a):FS.mayCreate(l,f))throw new FS.ErrnoError(e);if(!h.node_ops.rename)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isMountpoint(g)||m&&FS.isMountpoint(m))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);if(l!==h&&(e=FS.nodePermissions(h,"w")))throw new FS.ErrnoError(e);
FS.hashRemoveNode(g);try{h.node_ops.rename(g,l,f)}catch(q){throw q;}finally{FS.hashAddNode(g)}}},rmdir:function(b){var c=FS.lookupPath(b,{parent:!0}).node;b=PATH.basename(b);var a=FS.lookupNode(c,b),d=FS.mayDelete(c,b,!0);if(d)throw new FS.ErrnoError(d);if(!c.node_ops.rmdir)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isMountpoint(a))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);c.node_ops.rmdir(c,b);FS.destroyNode(a)},readdir:function(b){b=FS.lookupPath(b,{follow:!0}).node;if(!b.node_ops.readdir)throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
return b.node_ops.readdir(b)},unlink:function(b){var c=FS.lookupPath(b,{parent:!0}).node;b=PATH.basename(b);var a=FS.lookupNode(c,b),d=FS.mayDelete(c,b,!1);if(d)throw d===ERRNO_CODES.EISDIR&&(d=ERRNO_CODES.EPERM),new FS.ErrnoError(d);if(!c.node_ops.unlink)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isMountpoint(a))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);c.node_ops.unlink(c,b);FS.destroyNode(a)},readlink:function(b){b=FS.lookupPath(b,{follow:!1}).node;if(!b.node_ops.readlink)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
return b.node_ops.readlink(b)},stat:function(b,c){var a=FS.lookupPath(b,{follow:!c}).node;if(!a.node_ops.getattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);return a.node_ops.getattr(a)},lstat:function(b){return FS.stat(b,!0)},chmod:function(b,c,a){b="string"===typeof b?FS.lookupPath(b,{follow:!a}).node:b;if(!b.node_ops.setattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);b.node_ops.setattr(b,{mode:c&4095|b.mode&-4096,timestamp:Date.now()})},lchmod:function(b,c){FS.chmod(b,c,!0)},fchmod:function(b,c){var a=
FS.getStream(b);if(!a)throw new FS.ErrnoError(ERRNO_CODES.EBADF);FS.chmod(a.node,c)},chown:function(b,c,a,d){b="string"===typeof b?FS.lookupPath(b,{follow:!d}).node:b;if(!b.node_ops.setattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);b.node_ops.setattr(b,{timestamp:Date.now()})},lchown:function(b,c,a){FS.chown(b,c,a,!0)},fchown:function(b,c,a){b=FS.getStream(b);if(!b)throw new FS.ErrnoError(ERRNO_CODES.EBADF);FS.chown(b.node,c,a)},truncate:function(b,c){if(0>c)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
var a;a="string"===typeof b?FS.lookupPath(b,{follow:!0}).node:b;if(!a.node_ops.setattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isDir(a.mode))throw new FS.ErrnoError(ERRNO_CODES.EISDIR);if(!FS.isFile(a.mode))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var d=FS.nodePermissions(a,"w");if(d)throw new FS.ErrnoError(d);a.node_ops.setattr(a,{size:c,timestamp:Date.now()})},ftruncate:function(b,c){var a=FS.getStream(b);if(!a)throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(0===(a.flags&2097155))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
FS.truncate(a.node,c)},utime:function(b,c,a){b=FS.lookupPath(b,{follow:!0}).node;b.node_ops.setattr(b,{timestamp:Math.max(c,a)})},open:function(b,c,a,d,e){b=PATH.normalize(b);c="string"===typeof c?FS.modeStringToFlags(c):c;a=c&64?("undefined"===typeof a?438:a)&4095|32768:0;var f;try{f=FS.lookupPath(b,{follow:!(c&131072)}).node}catch(g){}if(c&64)if(f){if(c&128)throw new FS.ErrnoError(ERRNO_CODES.EEXIST);}else f=FS.mknod(b,a,0);if(!f)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);FS.isChrdev(f.mode)&&
(c&=-513);if(a=FS.mayOpen(f,c))throw new FS.ErrnoError(a);c&512&&FS.truncate(f,0);c&=-641;d=FS.createStream({node:f,path:FS.getPath(f),flags:c,seekable:!0,position:0,stream_ops:f.stream_ops,ungotten:[],error:!1},d,e);d.stream_ops.open&&d.stream_ops.open(d);!Module.logReadFiles||c&1||(FS.readFiles||(FS.readFiles={}),b in FS.readFiles||(FS.readFiles[b]=1,Module.printErr("read file: "+b)));return d},close:function(b){try{b.stream_ops.close&&b.stream_ops.close(b)}catch(c){throw c;}finally{FS.closeStream(b.fd)}},
llseek:function(b,c,a){if(!b.seekable||!b.stream_ops.llseek)throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);return b.stream_ops.llseek(b,c,a)},read:function(b,c,a,d,e){if(0>d||0>e)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(1===(b.flags&2097155))throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(FS.isDir(b.node.mode))throw new FS.ErrnoError(ERRNO_CODES.EISDIR);if(!b.stream_ops.read)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var f=!0;if("undefined"===typeof e)e=b.position,f=!1;else if(!b.seekable)throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
c=b.stream_ops.read(b,c,a,d,e);f||(b.position+=c);return c},write:function(b,c,a,d,e,f){if(0>d||0>e)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(0===(b.flags&2097155))throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(FS.isDir(b.node.mode))throw new FS.ErrnoError(ERRNO_CODES.EISDIR);if(!b.stream_ops.write)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var g=!0;if("undefined"===typeof e)e=b.position,g=!1;else if(!b.seekable)throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);b.flags&1024&&FS.llseek(b,0,2);c=b.stream_ops.write(b,
c,a,d,e,f);g||(b.position+=c);return c},allocate:function(b,c,a){if(0>c||0>=a)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(0===(b.flags&2097155))throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(!FS.isFile(b.node.mode)&&!FS.isDir(node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENODEV);if(!b.stream_ops.allocate)throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);b.stream_ops.allocate(b,c,a)},mmap:function(b,c,a,d,e,f,g){if(1===(b.flags&2097155))throw new FS.ErrnoError(ERRNO_CODES.EACCES);if(!b.stream_ops.mmap)throw new FS.errnoError(ERRNO_CODES.ENODEV);
return b.stream_ops.mmap(b,c,a,d,e,f,g)},ioctl:function(b,c,a){if(!b.stream_ops.ioctl)throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);return b.stream_ops.ioctl(b,c,a)},readFile:function(b,c){c=c||{};c.flags=c.flags||"r";c.encoding=c.encoding||"binary";var a,d=FS.open(b,c.flags),e=FS.stat(b).size,f=new Uint8Array(e);FS.read(d,f,0,e,0);if("utf8"===c.encoding){a="";for(var g=new Runtime.UTF8Processor,h=0;h<e;h++)a+=g.processCChar(f[h])}else if("binary"===c.encoding)a=f;else throw Error('Invalid encoding type "'+
c.encoding+'"');FS.close(d);return a},writeFile:function(b,c,a){a=a||{};a.flags=a.flags||"w";a.encoding=a.encoding||"utf8";b=FS.open(b,a.flags,a.mode);if("utf8"===a.encoding)a=new Runtime.UTF8Processor,c=new Uint8Array(a.processJSString(c)),FS.write(b,c,0,c.length,0);else if("binary"===a.encoding)FS.write(b,c,0,c.length,0);else throw Error('Invalid encoding type "'+a.encoding+'"');FS.close(b)},cwd:function(){return FS.currentPath},chdir:function(b){b=FS.lookupPath(b,{follow:!0});if(!FS.isDir(b.node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
var c=FS.nodePermissions(b.node,"x");if(c)throw new FS.ErrnoError(c);FS.currentPath=b.path},createDefaultDirectories:function(){FS.mkdir("/tmp")},createDefaultDevices:function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(){return 0}});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));FS.mkdir("/dev/shm");
FS.mkdir("/dev/shm/tmp")},createStandardStreams:function(){Module.stdin?FS.createDevice("/dev","stdin",Module.stdin):FS.symlink("/dev/tty","/dev/stdin");Module.stdout?FS.createDevice("/dev","stdout",null,Module.stdout):FS.symlink("/dev/tty","/dev/stdout");Module.stderr?FS.createDevice("/dev","stderr",null,Module.stderr):FS.symlink("/dev/tty1","/dev/stderr");var b=FS.open("/dev/stdin","r");HEAP32[_stdin>>2]=b.fd;assert(1===b.fd,"invalid handle for stdin ("+b.fd+")");b=FS.open("/dev/stdout","w");HEAP32[_stdout>>
2]=b.fd;assert(2===b.fd,"invalid handle for stdout ("+b.fd+")");b=FS.open("/dev/stderr","w");HEAP32[_stderr>>2]=b.fd;assert(3===b.fd,"invalid handle for stderr ("+b.fd+")")},staticInit:function(){FS.nameTable=Array(4096);FS.root=FS.createNode(null,"/",16895,0);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices()},init:function(b,c,a){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
FS.init.initialized=!0;Module.stdin=b||Module.stdin;Module.stdout=c||Module.stdout;Module.stderr=a||Module.stderr;FS.createStandardStreams()},quit:function(){FS.init.initialized=!1;for(var b=0;b<FS.streams.length;b++){var c=FS.streams[b];c&&FS.close(c)}},getMode:function(b,c){var a=0;b&&(a|=365);c&&(a|=146);return a},joinPath:function(b,c){var a=PATH.join.apply(null,b);c&&"/"==a[0]&&(a=a.substr(1));return a},absolutePath:function(b,c){return PATH.resolve(c,b)},standardizePath:function(b){return PATH.normalize(b)},
findObject:function(b,c){var a=FS.analyzePath(b,c);if(a.exists)return a.object;___setErrNo(a.error);return null},analyzePath:function(b,c){try{var a=FS.lookupPath(b,{follow:!c});b=a.path}catch(d){}var e={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{a=FS.lookupPath(b,{parent:!0}),e.parentExists=!0,e.parentPath=a.path,e.parentObject=a.node,e.name=PATH.basename(b),a=FS.lookupPath(b,{follow:!c}),e.exists=!0,e.path=a.path,e.object=a.node,
e.name=a.node.name,e.isRoot="/"===a.path}catch(f){e.error=f.errno}return e},createFolder:function(b,c,a,d){b=PATH.join("string"===typeof b?b:FS.getPath(b),c);a=FS.getMode(a,d);return FS.mkdir(b,a)},createPath:function(b,c,a,d){b="string"===typeof b?b:FS.getPath(b);for(c=c.split("/").reverse();c.length;)if(a=c.pop()){var e=PATH.join(b,a);try{FS.mkdir(e)}catch(f){}b=e}return e},createFile:function(b,c,a,d,e){b=PATH.join("string"===typeof b?b:FS.getPath(b),c);d=FS.getMode(d,e);return FS.create(b,d)},
createDataFile:function(b,c,a,d,e,f){b=c?PATH.join("string"===typeof b?b:FS.getPath(b),c):b;d=FS.getMode(d,e);e=FS.create(b,d);if(a){if("string"===typeof a){c=Array(a.length);for(var g=0,h=a.length;g<h;++g)c[g]=a.charCodeAt(g);a=c}FS.chmod(b,d|146);c=FS.open(b,"w");FS.write(c,a,0,a.length,0,f);FS.close(c);FS.chmod(b,d)}return e},createDevice:function(b,c,a,d){b=PATH.join("string"===typeof b?b:FS.getPath(b),c);c=FS.getMode(!!a,!!d);FS.createDevice.major||(FS.createDevice.major=64);var e=FS.makedev(FS.createDevice.major++,
0);FS.registerDevice(e,{open:function(a){a.seekable=!1},close:function(a){d&&d.buffer&&d.buffer.length&&d(10)},read:function(b,c,d,e,k){for(var m=k=0;m<e;m++){var n;try{n=a()}catch(q){throw new FS.ErrnoError(ERRNO_CODES.EIO);}if(void 0===n&&0===k)throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);if(null===n||void 0===n)break;k++;c[d+m]=n}k&&(b.node.timestamp=Date.now());return k},write:function(a,b,c,e,k){for(k=0;k<e;k++)try{d(b[c+k])}catch(m){throw new FS.ErrnoError(ERRNO_CODES.EIO);}e&&(a.node.timestamp=
Date.now());return k}});return FS.mkdev(b,c,e)},createLink:function(b,c,a,d,e){b=PATH.join("string"===typeof b?b:FS.getPath(b),c);return FS.symlink(a,b)},forceLoadFile:function(b){if(b.isDevice||b.isFolder||b.link||b.contents)return!0;var c=!0;if("undefined"!==typeof XMLHttpRequest)throw Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(Module.read)try{b.contents=
intArrayFromString(Module.read(b.url),!0)}catch(a){c=!1}else throw Error("Cannot load without read() or XMLHttpRequest.");c||___setErrNo(ERRNO_CODES.EIO);return c},createLazyFile:function(b,c,a,d,e){if("undefined"!==typeof XMLHttpRequest){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var f=function(){this.lengthKnown=!1;this.chunks=[]};f.prototype.get=function(a){if(!(a>this.length-1||0>a)){var b=
a%this.chunkSize;return this.getter(Math.floor(a/this.chunkSize))[b]}};f.prototype.setDataGetter=function(a){this.getter=a};f.prototype.cacheLength=function(){var b=new XMLHttpRequest;b.open("HEAD",a,!1);b.send(null);if(!(200<=b.status&&300>b.status||304===b.status))throw Error("Couldn't load "+a+". Status: "+b.status);var c=Number(b.getResponseHeader("Content-length")),d,e=1048576;(d=b.getResponseHeader("Accept-Ranges"))&&"bytes"===d||(e=c);var f=this;f.setDataGetter(function(b){var d=b*e,g=(b+1)*
e-1,g=Math.min(g,c-1);if("undefined"===typeof f.chunks[b]){var h=f.chunks;if(d>g)throw Error("invalid range ("+d+", "+g+") or no bytes requested!");if(g>c-1)throw Error("only "+c+" bytes available! programmer error!");var l=new XMLHttpRequest;l.open("GET",a,!1);c!==e&&l.setRequestHeader("Range","bytes="+d+"-"+g);"undefined"!=typeof Uint8Array&&(l.responseType="arraybuffer");l.overrideMimeType&&l.overrideMimeType("text/plain; charset=x-user-defined");l.send(null);if(!(200<=l.status&&300>l.status||
304===l.status))throw Error("Couldn't load "+a+". Status: "+l.status);d=void 0!==l.response?new Uint8Array(l.response||[]):intArrayFromString(l.responseText||"",!0);h[b]=d}if("undefined"===typeof f.chunks[b])throw Error("doXHR failed!");return f.chunks[b]});this._length=c;this._chunkSize=e;this.lengthKnown=!0};f=new f;Object.defineProperty(f,"length",{get:function(){this.lengthKnown||this.cacheLength();return this._length}});Object.defineProperty(f,"chunkSize",{get:function(){this.lengthKnown||this.cacheLength();
return this._chunkSize}});f={isDevice:!1,contents:f}}else f={isDevice:!1,url:a};var g=FS.createFile(b,c,f,d,e);f.contents?g.contents=f.contents:f.url&&(g.contents=null,g.url=f.url);var h={};Object.keys(g.stream_ops).forEach(function(a){var b=g.stream_ops[a];h[a]=function(){if(!FS.forceLoadFile(g))throw new FS.ErrnoError(ERRNO_CODES.EIO);return b.apply(null,arguments)}});h.read=function(a,b,c,d,e){if(!FS.forceLoadFile(g))throw new FS.ErrnoError(ERRNO_CODES.EIO);a=a.node.contents;if(e>=a.length)return 0;
d=Math.min(a.length-e,d);assert(0<=d);if(a.slice)for(var f=0;f<d;f++)b[c+f]=a[e+f];else for(f=0;f<d;f++)b[c+f]=a.get(e+f);return d};g.stream_ops=h;return g},createPreloadedFile:function(b,c,a,d,e,f,g,h,l){function k(a){function k(a){h||FS.createDataFile(b,c,a,d,e,l);f&&f();removeRunDependency("cp "+m)}var p=!1;Module.preloadPlugins.forEach(function(b){!p&&b.canHandle(m)&&(b.handle(a,m,k,function(){g&&g();removeRunDependency("cp "+m)}),p=!0)});p||k(a)}Browser.init();var m=c?PATH.resolve(PATH.join(b,
c)):b;addRunDependency("cp "+m);"string"==typeof a?Browser.asyncLoad(a,function(a){k(a)},g):k(a)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(b,c,a){c=c||function(){};a=a||function(){};var d=FS.indexedDB();try{var e=d.open(FS.DB_NAME(),FS.DB_VERSION)}catch(f){return a(f)}e.onupgradeneeded=function(){console.log("creating db");
e.result.createObjectStore(FS.DB_STORE_NAME)};e.onsuccess=function(){var d=e.result.transaction([FS.DB_STORE_NAME],"readwrite"),f=d.objectStore(FS.DB_STORE_NAME),l=0,k=0,m=b.length;b.forEach(function(b){b=f.put(FS.analyzePath(b).object.contents,b);b.onsuccess=function(){l++;l+k==m&&(0==k?c():a())};b.onerror=function(){k++;l+k==m&&(0==k?c():a())}});d.onerror=a};e.onerror=a},loadFilesFromDB:function(b,c,a){c=c||function(){};a=a||function(){};var d=FS.indexedDB();try{var e=d.open(FS.DB_NAME(),FS.DB_VERSION)}catch(f){return a(f)}e.onupgradeneeded=
a;e.onsuccess=function(){var d=e.result;try{var f=d.transaction([FS.DB_STORE_NAME],"readonly")}catch(l){a(l);return}var k=f.objectStore(FS.DB_STORE_NAME),m=0,n=0,q=b.length;b.forEach(function(b){var d=k.get(b);d.onsuccess=function(){FS.analyzePath(b).exists&&FS.unlink(b);FS.createDataFile(PATH.dirname(b),PATH.basename(b),d.result,!0,!0,!0);m++;m+n==q&&(0==n?c():a())};d.onerror=function(){n++;m+n==q&&(0==n?c():a())}});f.onerror=a};e.onerror=a}},SOCKFS={mount:function(b){return FS.createNode(null,"/",
16895,0)},createSocket:function(b,c,a){a&&assert(1==c==(6==a));b={family:b,type:c,protocol:a,server:null,peers:{},pending:[],recv_queue:[],sock_ops:SOCKFS.websocket_sock_ops};c=SOCKFS.nextname();a=FS.createNode(SOCKFS.root,c,49152,0);a.sock=b;c=FS.createStream({path:c,node:a,flags:FS.modeStringToFlags("r+"),seekable:!1,stream_ops:SOCKFS.stream_ops});b.stream=c;return b},getSocket:function(b){return(b=FS.getStream(b))&&FS.isSocket(b.node.mode)?b.node.sock:null},stream_ops:{poll:function(b){b=b.node.sock;
return b.sock_ops.poll(b)},ioctl:function(b,c,a){b=b.node.sock;return b.sock_ops.ioctl(b,c,a)},read:function(b,c,a,d,e){b=b.node.sock;d=b.sock_ops.recvmsg(b,d);if(!d)return 0;c.set(d.buffer,a);return d.buffer.length},write:function(b,c,a,d,e){b=b.node.sock;return b.sock_ops.sendmsg(b,c,a,d)},close:function(b){b=b.node.sock;b.sock_ops.close(b)}},nextname:function(){SOCKFS.nextname.current||(SOCKFS.nextname.current=0);return"socket["+SOCKFS.nextname.current++ +"]"},websocket_sock_ops:{createPeer:function(b,
c,a){var d;"object"===typeof c&&(d=c,a=c=null);if(d)if(d._socket)c=d._socket.remoteAddress,a=d._socket.remotePort;else{a=/ws[s]?:\/\/([^:]+):(\d+)/.exec(d.url);if(!a)throw Error("WebSocket URL must be in the format ws(s)://address:port");c=a[1];a=parseInt(a[2],10)}else try{d=new WebSocket("ws://"+c+":"+a,ENVIRONMENT_IS_NODE?{}:["binary"]),d.binaryType="arraybuffer"}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);}c={addr:c,port:a,socket:d,dgram_send_queue:[]};SOCKFS.websocket_sock_ops.addPeer(b,
c);SOCKFS.websocket_sock_ops.handlePeerEvents(b,c);2===b.type&&"undefined"!==typeof b.sport&&c.dgram_send_queue.push(new Uint8Array([255,255,255,255,112,111,114,116,(b.sport&65280)>>8,b.sport&255]));return c},getPeer:function(b,c,a){return b.peers[c+":"+a]},addPeer:function(b,c){b.peers[c.addr+":"+c.port]=c},removePeer:function(b,c){delete b.peers[c.addr+":"+c.port]},handlePeerEvents:function(b,c){var a=!0,d=function(){try{for(var a=c.dgram_send_queue.shift();a;)c.socket.send(a),a=c.dgram_send_queue.shift()}catch(b){c.socket.close()}},
e=function(d){assert("string"!==typeof d&&void 0!==d.byteLength);d=new Uint8Array(d);var e=a;a=!1;e&&10===d.length&&255===d[0]&&255===d[1]&&255===d[2]&&255===d[3]&&112===d[4]&&111===d[5]&&114===d[6]&&116===d[7]?(d=d[8]<<8|d[9],SOCKFS.websocket_sock_ops.removePeer(b,c),c.port=d,SOCKFS.websocket_sock_ops.addPeer(b,c)):b.recv_queue.push({addr:c.addr,port:c.port,data:d})};ENVIRONMENT_IS_NODE?(c.socket.on("open",d),c.socket.on("message",function(a,b){b.binary&&e((new Uint8Array(a)).buffer)}),c.socket.on("error",
function(){})):(c.socket.onopen=d,c.socket.onmessage=function(a){e(a.data)})},poll:function(b){if(1===b.type&&b.server)return b.pending.length?65:0;var c=0,a=1===b.type?SOCKFS.websocket_sock_ops.getPeer(b,b.daddr,b.dport):null;if(b.recv_queue.length||!a||a&&a.socket.readyState===a.socket.CLOSING||a&&a.socket.readyState===a.socket.CLOSED)c|=65;if(!a||a&&a.socket.readyState===a.socket.OPEN)c|=4;if(a&&a.socket.readyState===a.socket.CLOSING||a&&a.socket.readyState===a.socket.CLOSED)c|=16;return c},ioctl:function(b,
c,a){switch(c){case 21531:return c=0,b.recv_queue.length&&(c=b.recv_queue[0].data.length),HEAP32[a>>2]=c,0;default:return ERRNO_CODES.EINVAL}},close:function(b){if(b.server){try{b.server.close()}catch(c){}b.server=null}for(var a=Object.keys(b.peers),d=0;d<a.length;d++){var e=b.peers[a[d]];try{e.socket.close()}catch(f){}SOCKFS.websocket_sock_ops.removePeer(b,e)}return 0},bind:function(b,c,a){if("undefined"!==typeof b.saddr||"undefined"!==typeof b.sport)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);b.saddr=
c;b.sport=a||_mkport();if(2===b.type){b.server&&(b.server.close(),b.server=null);try{b.sock_ops.listen(b,0)}catch(d){if(!(d instanceof FS.ErrnoError))throw d;if(d.errno!==ERRNO_CODES.EOPNOTSUPP)throw d;}}},connect:function(b,c,a){if(b.server)throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);if("undefined"!==typeof b.daddr&&"undefined"!==typeof b.dport){var d=SOCKFS.websocket_sock_ops.getPeer(b,b.daddr,b.dport);if(d){if(d.socket.readyState===d.socket.CONNECTING)throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
throw new FS.ErrnoError(ERRNO_CODES.EISCONN);}}c=SOCKFS.websocket_sock_ops.createPeer(b,c,a);b.daddr=c.addr;b.dport=c.port;throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);},listen:function(b,c){if(!ENVIRONMENT_IS_NODE)throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);if(b.server)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var a=require("ws").Server;b.server=new a({host:b.saddr,port:b.sport});b.server.on("connection",function(a){if(1===b.type){var c=SOCKFS.createSocket(b.family,b.type,b.protocol);a=
SOCKFS.websocket_sock_ops.createPeer(c,a);c.daddr=a.addr;c.dport=a.port;b.pending.push(c)}else SOCKFS.websocket_sock_ops.createPeer(b,a)});b.server.on("closed",function(){b.server=null});b.server.on("error",function(){})},accept:function(b){if(!b.server)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var c=b.pending.shift();c.stream.flags=b.stream.flags;return c},getname:function(b,c){var a,d;if(c){if(void 0===b.daddr||void 0===b.dport)throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);a=b.daddr;d=b.dport}else a=
b.saddr||0,d=b.sport||0;return{addr:a,port:d}},sendmsg:function(b,c,a,d,e,f){if(2===b.type){if(void 0===e||void 0===f)e=b.daddr,f=b.dport;if(void 0===e||void 0===f)throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);}else e=b.daddr,f=b.dport;var g=SOCKFS.websocket_sock_ops.getPeer(b,e,f);if(1===b.type){if(!g||g.socket.readyState===g.socket.CLOSING||g.socket.readyState===g.socket.CLOSED)throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);if(g.socket.readyState===g.socket.CONNECTING)throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
}c=c instanceof Array||c instanceof ArrayBuffer?c.slice(a,a+d):c.buffer.slice(c.byteOffset+a,c.byteOffset+a+d);if(2===b.type&&(!g||g.socket.readyState!==g.socket.OPEN))return g&&g.socket.readyState!==g.socket.CLOSING&&g.socket.readyState!==g.socket.CLOSED||(g=SOCKFS.websocket_sock_ops.createPeer(b,e,f)),g.dgram_send_queue.push(c),d;try{return g.socket.send(c),d}catch(h){throw new FS.ErrnoError(ERRNO_CODES.EINVAL);}},recvmsg:function(b,c){if(1===b.type&&b.server)throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
var a=b.recv_queue.shift();if(!a){if(1===b.type){if(a=SOCKFS.websocket_sock_ops.getPeer(b,b.daddr,b.dport)){if(a.socket.readyState===a.socket.CLOSING||a.socket.readyState===a.socket.CLOSED)return null;throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);}throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);}throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);}var d=a.data.byteLength||a.data.length,e=a.data.byteOffset||0,f=a.data.buffer||a.data,g=Math.min(c,d),h={buffer:new Uint8Array(f,e,g),addr:a.addr,port:a.port};1===
b.type&&g<d&&(a.data=new Uint8Array(f,e+g,d-g),b.recv_queue.unshift(a));return h}}};function _send(b,c,a,d){return SOCKFS.getSocket(b)?_write(b,c,a):(___setErrNo(ERRNO_CODES.EBADF),-1)}function _pwrite(b,c,a,d){b=FS.getStream(b);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),-1;try{return FS.write(b,HEAP8,c,a,d)}catch(e){return FS.handleFSError(e),-1}}
function _write(b,c,a){b=FS.getStream(b);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),-1;try{return FS.write(b,HEAP8,c,a)}catch(d){return FS.handleFSError(d),-1}}function _fwrite(b,c,a,d){a*=c;if(0==a)return 0;b=_write(d,b,a);if(-1==b){if(c=FS.getStream(d))c.error=!0;return 0}return Math.floor(b/c)}function __reallyNegative(b){return 0>b||0===b&&-Infinity===1/b}
function __formatString(b,c){function a(a){var b;"double"===a?b=HEAPF64[c+e>>3]:"i64"==a?(b=[HEAP32[c+e>>2],HEAP32[c+(e+8)>>2]],e+=8):(a="i32",b=HEAP32[c+e>>2]);e+=Math.max(Runtime.getNativeFieldSize(a),Runtime.getAlignSize(a,null,!0));return b}for(var d=b,e=0,f=[],g,h;;){var l=d;g=HEAP8[d];if(0===g)break;h=HEAP8[d+1|0];if(37==g){var k=!1,m=!1,n=!1,q=!1,p=!1;a:for(;;){switch(h){case 43:k=!0;break;case 45:m=!0;break;case 35:n=!0;break;case 48:if(q)break a;else{q=!0;break}case 32:p=!0;break;default:break a}d++;
h=HEAP8[d+1|0]}var s=0;if(42==h)s=a("i32"),d++,h=HEAP8[d+1|0];else for(;48<=h&&57>=h;)s=10*s+(h-48),d++,h=HEAP8[d+1|0];var t=!1;if(46==h){var r=0,t=!0;d++;h=HEAP8[d+1|0];if(42==h)r=a("i32"),d++;else for(;;){h=HEAP8[d+1|0];if(48>h||57<h)break;r=10*r+(h-48);d++}h=HEAP8[d+1|0]}else r=6;var u;switch(String.fromCharCode(h)){case "h":h=HEAP8[d+2|0];104==h?(d++,u=1):u=2;break;case "l":h=HEAP8[d+2|0];108==h?(d++,u=8):u=4;break;case "L":case "q":case "j":u=8;break;case "z":case "t":case "I":u=4;break;default:u=
null}u&&d++;h=HEAP8[d+1|0];switch(String.fromCharCode(h)){case "d":case "i":case "u":case "o":case "x":case "X":case "p":l=100==h||105==h;u=u||4;var w=g=a("i"+8*u),v;8==u&&(g=Runtime.makeBigInt(g[0],g[1],117==h));if(4>=u){var x=Math.pow(256,u)-1;g=(l?reSign:unSign)(g&x,8*u)}x=Math.abs(g);l="";if(100==h||105==h)v=8==u&&i64Math?i64Math.stringify(w[0],w[1],null):reSign(g,8*u,1).toString(10);else if(117==h)v=8==u&&i64Math?i64Math.stringify(w[0],w[1],!0):unSign(g,8*u,1).toString(10),g=Math.abs(g);else if(111==
h)v=(n?"0":"")+x.toString(8);else if(120==h||88==h){l=n&&0!=g?"0x":"";if(8==u&&i64Math)if(w[1]){v=(w[1]>>>0).toString(16);for(n=(w[0]>>>0).toString(16);8>n.length;)n="0"+n;v+=n}else v=(w[0]>>>0).toString(16);else if(0>g){g=-g;v=(x-1).toString(16);w=[];for(n=0;n<v.length;n++)w.push((15-parseInt(v[n],16)).toString(16));for(v=w.join("");v.length<2*u;)v="f"+v}else v=x.toString(16);88==h&&(l=l.toUpperCase(),v=v.toUpperCase())}else 112==h&&(0===x?v="(nil)":(l="0x",v=x.toString(16)));if(t)for(;v.length<
r;)v="0"+v;0<=g&&(k?l="+"+l:p&&(l=" "+l));"-"==v.charAt(0)&&(l="-"+l,v=v.substr(1));for(;l.length+v.length<s;)m?v+=" ":q?v="0"+v:l=" "+l;v=l+v;v.split("").forEach(function(a){f.push(a.charCodeAt(0))});break;case "f":case "F":case "e":case "E":case "g":case "G":g=a("double");if(isNaN(g))v="nan",q=!1;else if(isFinite(g)){t=!1;u=Math.min(r,20);if(103==h||71==h)t=!0,r=r||1,u=parseInt(g.toExponential(u).split("e")[1],10),r>u&&-4<=u?(h=(103==h?"f":"F").charCodeAt(0),r-=u+1):(h=(103==h?"e":"E").charCodeAt(0),
r--),u=Math.min(r,20);if(101==h||69==h)v=g.toExponential(u),/[eE][-+]\d$/.test(v)&&(v=v.slice(0,-1)+"0"+v.slice(-1));else if(102==h||70==h)v=g.toFixed(u),0===g&&__reallyNegative(g)&&(v="-"+v);l=v.split("e");if(t&&!n)for(;1<l[0].length&&-1!=l[0].indexOf(".")&&("0"==l[0].slice(-1)||"."==l[0].slice(-1));)l[0]=l[0].slice(0,-1);else for(n&&-1==v.indexOf(".")&&(l[0]+=".");r>u++;)l[0]+="0";v=l[0]+(1<l.length?"e"+l[1]:"");69==h&&(v=v.toUpperCase());0<=g&&(k?v="+"+v:p&&(v=" "+v))}else v=(0>g?"-":"")+"inf",
q=!1;for(;v.length<s;)v=m?v+" ":!q||"-"!=v[0]&&"+"!=v[0]?(q?"0":" ")+v:v[0]+"0"+v.slice(1);97>h&&(v=v.toUpperCase());v.split("").forEach(function(a){f.push(a.charCodeAt(0))});break;case "s":q=(k=a("i8*"))?_strlen(k):6;t&&(q=Math.min(q,r));if(!m)for(;q<s--;)f.push(32);if(k)for(n=0;n<q;n++)f.push(HEAPU8[k++|0]);else f=f.concat(intArrayFromString("(null)".substr(0,q),!0));if(m)for(;q<s--;)f.push(32);break;case "c":for(m&&f.push(a("i8"));0<--s;)f.push(32);m||f.push(a("i8"));break;case "n":m=a("i32*");
HEAP32[m>>2]=f.length;break;case "%":f.push(g);break;default:for(n=l;n<d+2;n++)f.push(HEAP8[n])}d+=2}else f.push(g),d+=1}return f}function _fprintf(b,c,a){a=__formatString(c,a);c=Runtime.stackSave();b=_fwrite(allocate(a,"i8",ALLOC_STACK),1,a.length,b);Runtime.stackRestore(c);return b}function _printf(b,c){return _fprintf(HEAP32[_stdout>>2],b,c)}function _recv(b,c,a,d){return SOCKFS.getSocket(b)?_read(b,c,a):(___setErrNo(ERRNO_CODES.EBADF),-1)}
function _pread(b,c,a,d){b=FS.getStream(b);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),-1;try{return FS.read(b,HEAP8,c,a,d)}catch(e){return FS.handleFSError(e),-1}}function _read(b,c,a){b=FS.getStream(b);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),-1;try{return FS.read(b,HEAP8,c,a)}catch(d){return FS.handleFSError(d),-1}}
function _fread(b,c,a,d){a*=c;if(0==a)return 0;for(var e=0,f=FS.getStream(d);f.ungotten.length&&0<a;)HEAP8[b++|0]=f.ungotten.pop(),a--,e++;b=_read(d,b,a);if(-1==b)return f&&(f.error=!0),0;e+=b;e<a&&(f.eof=!0);return Math.floor(e/c)}function _fgetc(b){var c=FS.getStream(b);if(!c||c.eof||c.error)return-1;b=_fread(_fgetc.ret,1,1,b);return 0==b?-1:-1==b?(c.error=!0,-1):HEAPU8[_fgetc.ret|0]}
function _fgets(b,c,a){var d=FS.getStream(a);if(!d||d.error||d.eof)return 0;for(var e,f=0;f<c-1&&10!=e;f++){e=_fgetc(a);if(-1==e){if(d.error||d.eof&&0==f)return 0;if(d.eof)break}HEAP8[b+f|0]=e}HEAP8[b+f|0]=0;return b}function _getchar(){return _fgetc(HEAP32[_stdin>>2])}function _fputc(b,c){var a=unSign(b&255);HEAP8[_fputc.ret|0]=a;if(-1==_write(c,_fputc.ret,1)){if(a=FS.getStream(c))a.error=!0;return-1}return a}function _putchar(b){return _fputc(b,HEAP32[_stdout>>2])}
function _stat(b,c,a){b="string"!==typeof b?Pointer_stringify(b):b;try{var d=a?FS.lstat(b):FS.stat(b);HEAP32[c>>2]=d.dev;HEAP32[c+4>>2]=0;HEAP32[c+8>>2]=d.ino;HEAP32[c+12>>2]=d.mode;HEAP32[c+16>>2]=d.nlink;HEAP32[c+20>>2]=d.uid;HEAP32[c+24>>2]=d.gid;HEAP32[c+28>>2]=d.rdev;HEAP32[c+32>>2]=0;HEAP32[c+36>>2]=d.size;HEAP32[c+40>>2]=4096;HEAP32[c+44>>2]=d.blocks;HEAP32[c+48>>2]=Math.floor(d.atime.getTime()/1E3);HEAP32[c+52>>2]=0;HEAP32[c+56>>2]=Math.floor(d.mtime.getTime()/1E3);HEAP32[c+60>>2]=0;HEAP32[c+
64>>2]=Math.floor(d.ctime.getTime()/1E3);HEAP32[c+68>>2]=0;HEAP32[c+72>>2]=d.ino;return 0}catch(e){return FS.handleFSError(e),-1}}function _open(b,c,a){a=HEAP32[a>>2];b=Pointer_stringify(b);try{return FS.open(b,c,a).fd}catch(d){return FS.handleFSError(d),-1}}
function _fopen(b,c){var a;c=Pointer_stringify(c);if("r"==c[0])a=-1!=c.indexOf("+")?2:0;else if("w"==c[0])a=-1!=c.indexOf("+")?2:1,a|=576;else if("a"==c[0])a=-1!=c.indexOf("+")?2:1,a|=64,a|=1024;else return ___setErrNo(ERRNO_CODES.EINVAL),0;a=_open(b,a,allocate([511,0,0,0],"i32",ALLOC_STACK));return-1==a?0:a}function _close(b){b=FS.getStream(b);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),-1;try{return FS.close(b),0}catch(c){return FS.handleFSError(c),-1}}
function _fsync(b){if(FS.getStream(b))return 0;___setErrNo(ERRNO_CODES.EBADF);return-1}function _fclose(b){_fsync(b);return _close(b)}function _longjmp(b,c){throw{longjmp:!0,id:HEAP32[b>>2],value:c||1};}function _analogWrite(b,c){postMessage({pin:b-2,brightness:c})}function _digitalWrite(b,c){postMessage({pin:b-2,brightness:c?255:0})}
function _usleep(b){b/=1E3;if(ENVIRONMENT_IS_WEB&&window.performance&&window.performance.now)for(var c=window.performance.now();window.performance.now()-c<b;);else for(c=Date.now();Date.now()-c<b;);return 0}var _putc=_fputc;function _fputs(b,c){return _write(c,b,_strlen(b))}
function _snprintf(b,c,a,d){a=__formatString(a,d);d=void 0===c?a.length:Math.min(a.length,Math.max(c-1,0));if(0>b){b=-b;var e=_malloc(d+1);b=HEAP32[b>>2]=e}for(e=0;e<d;e++)HEAP8[b+e|0]=a[e];if(d<c||void 0===c)HEAP8[b+e|0]=0;return a.length}function _sprintf(b,c,a){return _snprintf(b,void 0,c,a)}
function _strerror_r(b,c,a){if(b in ERRNO_MESSAGES){if(ERRNO_MESSAGES[b].length>a-1)return ___setErrNo(ERRNO_CODES.ERANGE);b=ERRNO_MESSAGES[b];for(a=0;a<b.length;a++)HEAP8[c+a|0]=b.charCodeAt(a);return HEAP8[c+a|0]=0}return ___setErrNo(ERRNO_CODES.EINVAL)}function _strerror(b){_strerror.buffer||(_strerror.buffer=_malloc(256));_strerror_r(b,_strerror.buffer,256);return _strerror.buffer}function ___errno_location(){return ___errno_state}
function __isFloat(b){return!!/^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?$/.exec(b)}
function __scanString(b,c,a,d){__scanString.whiteSpace||(__scanString.whiteSpace={},__scanString.whiteSpace[32]=1,__scanString.whiteSpace[9]=1,__scanString.whiteSpace[10]=1,__scanString.whiteSpace[11]=1,__scanString.whiteSpace[12]=1,__scanString.whiteSpace[13]=1);b=Pointer_stringify(b);var e=0;if(0<=b.indexOf("%n")){var f=c;c=function(){e++;return f()};var g=a;a=function(){e--;return g()}}var h=0,l=0,k=0,m,h=0;a:for(;h<b.length;)if("%"===b[h]&&"n"==b[h+1]){var n=HEAP32[d+k>>2],k=k+Runtime.getAlignSize("void*",
null,!0);HEAP32[n>>2]=e;h+=2}else{if("%"===b[h]){var q=b.indexOf("c",h+1);if(0<q){var p=1;q>h+1&&(m=b.substring(h+1,q),p=parseInt(m),p!=m&&(p=0));if(p){n=HEAP32[d+k>>2];k+=Runtime.getAlignSize("void*",null,!0);l++;for(var s=0;s<p;s++)m=c(),HEAP8[n++|0]=m;h+=q-h+1;continue}}}if("%"===b[h]&&0<b.indexOf("[",h+1)&&(q=/\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(b.substring(h)))){for(var p=parseInt(q[1])||Infinity,t="^"===q[2],r=q[3];m=/([^\-])\-([^\-])/.exec(r);){for(var n=m[1].charCodeAt(0),s=m[2].charCodeAt(0),
u="";n<=s;u+=String.fromCharCode(n++));r=r.replace(m[1]+"-"+m[2],u)}n=HEAP32[d+k>>2];k+=Runtime.getAlignSize("void*",null,!0);l++;for(s=0;s<p;s++)if(m=c(),t)if(0>r.indexOf(String.fromCharCode(m)))HEAP8[n++|0]=m;else{a();break}else if(0<=r.indexOf(String.fromCharCode(m)))HEAP8[n++|0]=m;else{a();break}HEAP8[n++|0]=0;h+=q[0].length;continue}for(;;){m=c();if(0==m)return l;if(!(m in __scanString.whiteSpace))break}a();if("%"===b[h]){h++;n=!1;"*"==b[h]&&(n=!0,h++);for(m=h;48<=b[h].charCodeAt(0)&&57>=b[h].charCodeAt(0);)h++;
var w;h!=m&&(w=parseInt(b.slice(m,h),10));t=p=q=!1;"l"==b[h]?(q=!0,h++,"l"==b[h]&&(t=!0,h++)):"h"==b[h]&&(p=!0,h++);r=b[h];h++;s=0;u=[];if("f"==r||"e"==r||"g"==r||"F"==r||"E"==r||"G"==r){var v=0;for(m=c();0<m;)u.push(String.fromCharCode(m)),__isFloat(u.join(""))&&(v=u.length),m=c();for(s=0;s<u.length-v+1;s++)a();u.length=v}else{m=c();v=!0;if(("x"==r||"X"==r)&&48==m){var x=c();120==x||88==x?m=c():a()}for(;(s<w||isNaN(w))&&0<m&&!(m in __scanString.whiteSpace||"s"!=r&&("d"!==r&&"u"!=r&&"i"!=r||!(48<=
m&&57>=m||v&&45==m))&&("x"!==r&&"X"!==r||!(48<=m&&57>=m||97<=m&&102>=m||65<=m&&70>=m)))&&(h>=b.length||m!==b[h].charCodeAt(0));)u.push(String.fromCharCode(m)),m=c(),s++,v=!1;a()}if(0===u.length)return 0;if(!n){m=u.join("");n=HEAP32[d+k>>2];k+=Runtime.getAlignSize("void*",null,!0);switch(r){case "d":case "u":case "i":p?HEAP16[n>>1]=parseInt(m,10):t?(tempI64=[parseInt(m,10)>>>0,(tempDouble=parseInt(m,10),1<=Math_abs(tempDouble)?0<tempDouble?Math_min(Math_floor(tempDouble/4294967296),4294967295)>>>0:
~~Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[n>>2]=tempI64[0],HEAP32[n+4>>2]=tempI64[1]):HEAP32[n>>2]=parseInt(m,10);break;case "X":case "x":HEAP32[n>>2]=parseInt(m,16);break;case "F":case "f":case "E":case "e":case "G":case "g":case "E":q?HEAPF64[n>>3]=parseFloat(m):HEAPF32[n>>2]=parseFloat(m);break;case "s":for(m=intArrayFromString(m),s=0;s<m.length;s++)HEAP8[n+s|0]=m[s]}l++}}else{if(b[h].charCodeAt(0)in __scanString.whiteSpace){for(m=c();m in __scanString.whiteSpace;){if(0>=
m)break a;m=c()}a(m)}else if(m=c(),b[h].charCodeAt(0)!==m){a(m);break a}h++}}return l}function _ungetc(b,c){c=FS.getStream(c);if(!c)return-1;if(-1===b)return b;b=unSign(b&255);c.ungotten.push(b);c.eof=!1;return b}function _fscanf(b,c,a){if(!FS.getStream(b))return-1;var d=[];return __scanString(c,function(){var a=_fgetc(b);d.push(a);return a},function(){_ungetc(d.pop(),b)},a)}function _sscanf(b,c,a){var d=0;return __scanString(c,function(){return HEAP8[b+d++|0]},function(){d--},a)}
function _freopen(b,c,a){if(!b){b=FS.getStream(a);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),0;_freopen.buffer&&_free(_freopen.buffer);b=intArrayFromString(b.path);b=allocate(b,"i8",ALLOC_NORMAL)}_fclose(a);return _fopen(b,c)}function _unlink(b){b=Pointer_stringify(b);try{return FS.unlink(b),0}catch(c){return FS.handleFSError(c),-1}}function _rmdir(b){b=Pointer_stringify(b);try{return FS.rmdir(b),0}catch(c){return FS.handleFSError(c),-1}}
function _remove(b){var c=_unlink(b);-1==c&&(c=_rmdir(b));return c}function _rename(b,c){b=Pointer_stringify(b);c=Pointer_stringify(c);try{return FS.rename(b,c),0}catch(a){return FS.handleFSError(a),-1}}function _lseek(b,c,a){b=FS.getStream(b);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),-1;try{return FS.llseek(b,c,a)}catch(d){return FS.handleFSError(d),-1}}function _fseek(b,c,a){if(-1==_lseek(b,c,a))return-1;b=FS.getStream(b);b.eof=!1;return 0}
function _rewind(b){_fseek(b,0,0);if(b=FS.getStream(b))b.error=!1}function _tmpnam(b,c,a){var d=FS.findObject(c||"/tmp");if(!d||!d.isFolder)if(c="/tmp",d=FS.findObject(c),!d||!d.isFolder)return 0;a=a||"file";do a+=String.fromCharCode(65+Math.floor(25*Math.random()));while(a in d.contents);c=c+"/"+a;_tmpnam.buffer||(_tmpnam.buffer=_malloc(256));b||(b=_tmpnam.buffer);for(d=0;d<c.length;d++)HEAP8[b+d|0]=c.charCodeAt(d);HEAP8[b+d|0]=0;return b}
function _tmpfile(){_tmpfile.mode&&(_tmpfile.mode=allocate(intArrayFromString("w+"),"i8",ALLOC_NORMAL));return _fopen(_tmpnam(0),_tmpfile.mode)}function _clearerr(b){if(b=FS.getStream(b))b.eof=!1,b.error=!1}function _feof(b){b=FS.getStream(b);return Number(b&&b.eof)}function _ferror(b){b=FS.getStream(b);return Number(b&&b.error)}function _fileno(b){return b}
function _fgetpos(b,c){b=FS.getStream(b);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),-1;if(FS.isChrdev(b.node.mode))return ___setErrNo(ERRNO_CODES.ESPIPE),-1;HEAP32[c>>2]=b.position;HEAP32[c+4>>2]=(b.eof?1:0)+(b.error?2:0);return 0}function _fsetpos(b,c){b=FS.getStream(b);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),-1;if(FS.isChrdev(b.node.mode))return ___setErrNo(ERRNO_CODES.EPIPE),-1;b.position=HEAP32[c>>2];var a=HEAP32[c+4>>2];b.eof=Boolean(a&1);b.error=Boolean(a&2);return 0}
function _ftell(b){b=FS.getStream(b);return b?FS.isChrdev(b.node.mode)?(___setErrNo(ERRNO_CODES.ESPIPE),-1):b.position:(___setErrNo(ERRNO_CODES.EBADF),-1)}function _puts(b){var c=HEAP32[_stdout>>2];b=_fputs(b,c);return 0>b?b:0>_fputc(10,c)?-1:b+1}function _perror(b){var c=HEAP32[_stdout>>2];b&&(_fputs(b,c),_fputc(58,c),_fputc(32,c));b=HEAP32[___errno_location()>>2];_puts(_strerror(b))}function _setvbuf(b,c,a,d){return 0}function _setbuf(b,c){c?_setvbuf(b,c,0,8192):_setvbuf(b,c,2,8192)}
function _strchr(b,c){b--;do{b++;var a=HEAP8[b];if(a==c)return b}while(a);return 0}var _sin=Math_sin,_cos=Math_cos,_tan=Math_tan,_asin=Math_asin,_acos=Math_acos,_atan=Math_atan,_atan2=Math_atan2;function _sinh(b){b=Math.pow(Math.E,b);return(b-1/b)/2}function _cosh(b){b=Math.pow(Math.E,b);return(b+1/b)/2}function _tanh(b){return _sinh(b)/_cosh(b)}var _exp=Math_exp,_fabs=Math_abs;function _fmod(b,c){return b%c}
function _frexp(b,c){var a=0,d=0;if(0!==b){a=1;0>b&&(b=-b,a=-1);var e=Math.log(b)/Math.log(2),d=Math.ceil(e);d===e&&(d+=1);a=a*b/Math.pow(2,d)}HEAP32[c>>2]=d;return a}function _ldexp(b,c){return b*Math.pow(2,c)}var _log=Math_log;function _log10(b){return Math.log(b)/Math.LN10}function _modf(b,c){HEAPF64[c>>3]=Math.floor(b);return b-HEAPF64[c>>3]}var _sqrt=Math_sqrt,_ceil=Math_ceil,_floor=Math_floor;
function _strcpy(b,c){b|=0;c|=0;var a=0;do HEAP8[b+a|0]=HEAP8[c+a|0],a=a+1|0;while(HEAP8[c+(a-1)|0]);return b|0}function _strcat(b,c){b|=0;c|=0;var a=0,d=0,d=b+(_strlen(b)|0)|0;do HEAP8[d+a|0]=HEAP8[c+a|0],a=a+1|0;while(HEAP8[c+(a-1)|0]);return b|0}function _strncat(b,c,a){for(var d=_strlen(b),e=0;;){HEAP8[b+d+e|0]=HEAP8[c+e|0];if(0==HEAP8[b+(d+e)|0])break;e++;if(e==a){HEAP8[b+(d+e)|0]=0;break}}return b}var _index=_strchr;
function _strrchr(b,c){var a=b+_strlen(b);do{if(HEAP8[a]==c)return a;a--}while(a>=b);return 0}var _rindex=_strrchr;function _memcmp(b,c,a){b|=0;c|=0;a|=0;for(var d=0,e=0,f=0;(d|0)<(a|0);){e=HEAPU8[b+d|0];f=HEAPU8[c+d|0];if((e|0)!=(f|0))return((e|0)>(f|0)?1:-1)|0;d=d+1|0}return 0}function _memmove(b,c,a){b|=0;c|=0;a|=0;if((c|0)<(b|0)&(b|0)<(c+a|0))for(c=c+a|0,b=b+a|0;0<(a|0);)b=b-1|0,c=c-1|0,a=a-1|0,HEAP8[b]=HEAP8[c];else _memcpy(b,c,a)|0}var _llvm_memmove_p0i8_p0i8_i32=_memmove;
function _memchr(b,c,a){c=unSign(c);for(var d=0;d<a;d++){if(HEAP8[b]==c)return b;b++}return 0}var _strcoll=_strcmp;function _strspn(b,c){for(var a=b,d,e,f;;){e=HEAP8[a];if(!e)return a-b;for(d=c;;){f=HEAP8[d];if(!f||f==e)break;d++}if(!f)return a-b;a++}}function _strcspn(b,c){for(var a=b,d,e,f;;){e=HEAP8[a];if(!e)return a-b;for(d=c;;){f=HEAP8[d];if(!f||f==e)break;d++}if(f)return a-b;a++}}
function _strpbrk(b,c){for(var a,d={};;){a=HEAP8[c++|0];if(!a)break;d[a]=1}for(;;){a=HEAP8[b];if(!a)break;if(a in d)return b;b++}return 0}function _strstr(b,c){var a=0,d;do{a||(d=b,a=c);var e=HEAP8[b++|0],f=HEAP8[a++|0];if(0==f)return d;f!=e&&(b=d+1,a=0)}while(e);return 0}var ___strtok_state=0;
function _strtok_r(b,c,a){var d,e,f,g;if(0==b&&0==(b=getValue(a,"i8*")))return 0;a:for(;;){e=getValue(b++,"i8");for(d=c;0!=(f=getValue(d++,"i8"));)if(e==f)continue a;break}if(0==e)return setValue(a,0,"i8*"),0;for(g=b-1;;){e=getValue(b++,"i8");d=c;do if((f=getValue(d++,"i8"))==e)return 0==e?b=0:setValue(b-1,0,"i8"),setValue(a,b,"i8*"),g;while(0!=f)}abort("strtok_r error!")}function _strtok(b,c){return _strtok_r(b,c,___strtok_state)}
function _strdup(b){var c=_strlen(b),a=_malloc(c+1);_memcpy(a,b,c)|0;HEAP8[a+c|0]=0;return a}
function __parseInt(b,c,a,d,e,f,g){for(;_isspace(HEAP8[b]);)b++;var h=1;45==HEAP8[b]?(h=-1,b++):43==HEAP8[b]&&b++;a?16!=a||48!=HEAP8[b]||120!=HEAP8[b+1|0]&&88!=HEAP8[b+1|0]||(b+=2):48==HEAP8[b]&&(120==HEAP8[b+1|0]||88==HEAP8[b+1|0]?(a=16,b+=2):(a=8,b++));a||(a=10);for(var l,k=0;0!=(l=HEAP8[b])&&(l=parseInt(String.fromCharCode(l),a),!isNaN(l));)k=k*a+l,b++;k*=h;c&&(HEAP32[c>>2]=b);g&&(Math.abs(k)>e?(k=e,___setErrNo(ERRNO_CODES.ERANGE)):k=unSign(k,f));if(k>e||k<d)k=k>e?e:d,___setErrNo(ERRNO_CODES.ERANGE);
return 64==f?(tempRet0=(tempDouble=k,1<=Math_abs(tempDouble)?0<tempDouble?Math_min(Math_floor(tempDouble/4294967296),4294967295)>>>0:~~Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0),k>>>0):k}function _strtol(b,c,a){return __parseInt(b,c,a,-2147483648,2147483647,32)}function _atoi(b){return _strtol(b,null,10)}var _atol=_atoi;function _strtoul(b,c,a){return __parseInt(b,c,a,0,4294967295,32,!0)}function _rand(){return Math.floor(2147483648*Math.random())}function _srand(b){}
var _environ=allocate(1,"i32*",ALLOC_STATIC),___environ=_environ;
function ___buildEnvironment(b){var c,a;___buildEnvironment.called?(a=HEAP32[_environ>>2],c=HEAP32[a>>2]):(___buildEnvironment.called=!0,ENV.USER="root",ENV.PATH="/",ENV.PWD="/",ENV.HOME="/home/emscripten",ENV.LANG="en_US.UTF-8",ENV._="./this.program",c=allocate(1024,"i8",ALLOC_STATIC),a=allocate(256,"i8*",ALLOC_STATIC),HEAP32[a>>2]=c,HEAP32[_environ>>2]=a);var d=[],e=0,f;for(f in b)if("string"===typeof b[f]){var g=f+"="+b[f];d.push(g);e+=g.length}if(1024<e)throw Error("Environment size exceeded TOTAL_ENV_SIZE!");
for(b=0;b<d.length;b++){g=d[b];for(e=0;e<g.length;e++)HEAP8[c+e|0]=g.charCodeAt(e);HEAP8[c+e|0]=0;HEAP32[a+4*b>>2]=c;c+=g.length+1}HEAP32[a+4*d.length>>2]=0}var ENV={};function _getenv(b){if(0===b)return 0;b=Pointer_stringify(b);if(!ENV.hasOwnProperty(b))return 0;_getenv.ret&&_free(_getenv.ret);_getenv.ret=allocate(intArrayFromString(ENV[b]),"i8",ALLOC_NORMAL);return _getenv.ret}function _system(b){___setErrNo(ERRNO_CODES.EAGAIN);return-1}
var _abs=Math_abs,_labs=Math_abs,___tm_formatted=allocate(44,"i8",ALLOC_STATIC),_tzname=allocate(8,"i32*",ALLOC_STATIC),_daylight=allocate(1,"i32*",ALLOC_STATIC),_timezone=allocate(1,"i32*",ALLOC_STATIC);
function _tzset(){if(!_tzset.called){_tzset.called=!0;HEAP32[_timezone>>2]=60*-(new Date).getTimezoneOffset();var b=new Date(2E3,6,1);HEAP32[_daylight>>2]=Number((new Date(2E3,0,1)).getTimezoneOffset()!=b.getTimezoneOffset());var b=allocate(intArrayFromString("GMT"),"i8",ALLOC_NORMAL),c=allocate(intArrayFromString("GMT"),"i8",ALLOC_NORMAL);HEAP32[_tzname>>2]=b;HEAP32[_tzname+4>>2]=c}}
function _mktime(b){_tzset();var c=HEAP32[b+20>>2],a=(new Date(1900<=c?c:c+1900,HEAP32[b+16>>2],HEAP32[b+12>>2],HEAP32[b+8>>2],HEAP32[b+4>>2],HEAP32[b>>2],0)).getTime()/1E3;HEAP32[b+24>>2]=(new Date(a)).getDay();c=Math.round((a-(new Date(c,0,1)).getTime())/864E5);HEAP32[b+28>>2]=c;return a}
function _asctime_r(b,c){var a=new Date(1E3*_mktime(b)),d=a.toString(),e=d.replace(/\d{4}.*/,"").replace(/ 0/,"  "),d=d.match(/\d{2}:\d{2}:\d{2}/)[0],d=e+d+" "+a.getFullYear()+"\n";d.split("").forEach(function(a,b){HEAP8[c+b|0]=a.charCodeAt(0)});HEAP8[c+25|0]=0;return c}function _asctime(b){return _asctime_r(b,___tm_formatted)}function _clock(){void 0===_clock.start&&(_clock.start=Date.now());return Math.floor(1E3*(Date.now()-_clock.start))}
var ___tm_current=allocate(44,"i8",ALLOC_STATIC),___tm_timezone=allocate(intArrayFromString("GMT"),"i8",ALLOC_STATIC);
function _localtime_r(b,c){_tzset();var a=new Date(1E3*HEAP32[b>>2]);HEAP32[c>>2]=a.getSeconds();HEAP32[c+4>>2]=a.getMinutes();HEAP32[c+8>>2]=a.getHours();HEAP32[c+12>>2]=a.getDate();HEAP32[c+16>>2]=a.getMonth();HEAP32[c+20>>2]=a.getFullYear()-1900;HEAP32[c+24>>2]=a.getDay();var d=new Date(a.getFullYear(),0,1),e=Math.floor((a.getTime()-d.getTime())/864E5);HEAP32[c+28>>2]=e;HEAP32[c+36>>2]=60*d.getTimezoneOffset();a=Number(d.getTimezoneOffset()!=a.getTimezoneOffset());HEAP32[c+32>>2]=a;HEAP32[c+40>>
2]=___tm_timezone;return c}function _localtime(b){return _localtime_r(b,___tm_current)}function _ctime(b){return _asctime(_localtime(b))}function _difftime(b,c){return b-c}
function _gmtime_r(b,c){var a=new Date(1E3*HEAP32[b>>2]);HEAP32[c>>2]=a.getUTCSeconds();HEAP32[c+4>>2]=a.getUTCMinutes();HEAP32[c+8>>2]=a.getUTCHours();HEAP32[c+12>>2]=a.getUTCDate();HEAP32[c+16>>2]=a.getUTCMonth();HEAP32[c+20>>2]=a.getUTCFullYear()-1900;HEAP32[c+24>>2]=a.getUTCDay();HEAP32[c+36>>2]=0;HEAP32[c+32>>2]=0;var d=new Date(a);d.setUTCDate(1);d.setUTCMonth(0);d.setUTCHours(0);d.setUTCMinutes(0);d.setUTCSeconds(0);d.setUTCMilliseconds(0);a=Math.floor((a.getTime()-d.getTime())/864E5);HEAP32[c+
28>>2]=a;HEAP32[c+40>>2]=___tm_timezone;return c}function _gmtime(b){return _gmtime_r(b,___tm_current)}function _time(b){var c=Math.floor(Date.now()/1E3);b&&(HEAP32[b>>2]=c);return c}function __isLeapYear(b){return 0===b%4&&(0!==b%100||0===b%400)}function __arraySum(b,c){for(var a=0,d=0;d<=c;a+=b[d++]);return a}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31],__MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];
function __addDays(b,c){for(var a=new Date(b.getTime());0<c;){var d=__isLeapYear(a.getFullYear()),e=a.getMonth(),d=(d?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[e];if(c>d-a.getDate())c-=d-a.getDate()+1,a.setDate(1),11>e?a.setMonth(e+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+c);break}}return a}
function _strftime(b,c,a,d){d={tm_sec:HEAP32[d>>2],tm_min:HEAP32[d+4>>2],tm_hour:HEAP32[d+8>>2],tm_mday:HEAP32[d+12>>2],tm_mon:HEAP32[d+16>>2],tm_year:HEAP32[d+20>>2],tm_wday:HEAP32[d+24>>2],tm_yday:HEAP32[d+28>>2],tm_isdst:HEAP32[d+32>>2]};a=Pointer_stringify(a);var e={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"},f;for(f in e)a=a.replace(RegExp(f,"g"),e[f]);var g="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
h="January February March April May June July August September October November December".split(" "),l=function(a,b,c){for(a="number"===typeof a?a.toString():a||"";a.length<b;)a=c[0]+a;return a},k=function(a,b){return l(a,b,"0")},m=function(a,b){var c=function(a){return 0>a?-1:0<a?1:0},d;0===(d=c(a.getFullYear()-b.getFullYear()))&&0===(d=c(a.getMonth()-b.getMonth()))&&(d=c(a.getDate()-b.getDate()));return d},n=function(a){switch(a.getDay()){case 0:return new Date(a.getFullYear()-1,11,29);case 1:return a;
case 2:return new Date(a.getFullYear(),0,3);case 3:return new Date(a.getFullYear(),0,2);case 4:return new Date(a.getFullYear(),0,1);case 5:return new Date(a.getFullYear()-1,11,31);case 6:return new Date(a.getFullYear()-1,11,30)}},q=function(a){a=__addDays(new Date(a.tm_year+1900,0,1),a.tm_yday);var b=new Date(a.getFullYear(),0,4),c=new Date(a.getFullYear()+1,0,4),b=n(b),c=n(c);return 0>=m(b,a)?0>=m(c,a)?a.getFullYear()+1:a.getFullYear():a.getFullYear()-1},e={"%a":function(a){return g[a.tm_wday].substring(0,
3)},"%A":function(a){return g[a.tm_wday]},"%b":function(a){return h[a.tm_mon].substring(0,3)},"%B":function(a){return h[a.tm_mon]},"%C":function(a){return k(Math.floor((a.tm_year+1900)/100),2)},"%d":function(a){return k(a.tm_mday,2)},"%e":function(a){return l(a.tm_mday,2," ")},"%g":function(a){return q(a).toString().substring(2)},"%G":function(a){return q(a)},"%H":function(a){return k(a.tm_hour,2)},"%I":function(a){return k(13>a.tm_hour?a.tm_hour:a.tm_hour-12,2)},"%j":function(a){return k(a.tm_mday+
__arraySum(__isLeapYear(a.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,a.tm_mon-1),3)},"%m":function(a){return k(a.tm_mon+1,2)},"%M":function(a){return k(a.tm_min,2)},"%n":function(){return"\n"},"%p":function(a){return 0<a.tm_hour&&13>a.tm_hour?"AM":"PM"},"%S":function(a){return k(a.tm_sec,2)},"%t":function(){return"\t"},"%u":function(a){return(new Date(a.tm_year+1900,a.tm_mon+1,a.tm_mday,0,0,0,0)).getDay()||7},"%U":function(a){var b=new Date(a.tm_year+1900,0,1),c=0===b.getDay()?b:__addDays(b,
7-b.getDay());a=new Date(a.tm_year+1900,a.tm_mon,a.tm_mday);return 0>m(c,a)?(b=__arraySum(__isLeapYear(a.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,a.getMonth()-1)-31,c=31-c.getDate()+b+a.getDate(),k(Math.ceil(c/7),2)):0===m(c,b)?"01":"00"},"%V":function(a){var b=new Date(a.tm_year+1901,0,4),c=n(new Date(a.tm_year+1900,0,4)),b=n(b),d=__addDays(new Date(a.tm_year+1900,0,1),a.tm_yday);if(0>m(d,c))return"53";if(0>=m(b,d))return"01";a=c.getFullYear()<a.tm_year+1900?a.tm_yday+32-c.getDate():
a.tm_yday+1-c.getDate();return k(Math.ceil(a/7),2)},"%w":function(a){return(new Date(a.tm_year+1900,a.tm_mon+1,a.tm_mday,0,0,0,0)).getDay()},"%W":function(a){var b=new Date(a.tm_year,0,1),c=1===b.getDay()?b:__addDays(b,0===b.getDay()?1:7-b.getDay()+1);a=new Date(a.tm_year+1900,a.tm_mon,a.tm_mday);return 0>m(c,a)?(b=__arraySum(__isLeapYear(a.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,a.getMonth()-1)-31,c=31-c.getDate()+b+a.getDate(),k(Math.ceil(c/7),2)):0===m(c,b)?"01":"00"},"%y":function(a){return(a.tm_year+
1900).toString().substring(2)},"%Y":function(a){return a.tm_year+1900},"%z":function(a){return""},"%Z":function(a){return""},"%%":function(){return"%"}};for(f in e)0<=a.indexOf(f)&&(a=a.replace(RegExp(f,"g"),e[f](d)));f=intArrayFromString(a,!1);if(f.length>c)return 0;writeArrayToMemory(f,b);return f.length-1}
function _strptime(b,c,a){for(var d=Pointer_stringify(c),e=0;25>e;++e)d=d.replace(RegExp("\\"+"\\!@#$^&*()+=-[]/{}|:<>?,."[e],"g"),"\\"+"\\!@#$^&*()+=-[]/{}|:<>?,."[e]);c={"%A":"%a","%B":"%b","%c":"%x\\s+%X","%D":"%m\\/%d\\/%y","%e":"%d","%h":"%b","%R":"%H\\:%M","%r":"%I\\:%M\\:%S\\s%p","%T":"%H\\:%M\\:%S","%x":"%m\\/%d\\/(?:%y|%Y)","%X":"%H\\:%M\\:%S"};for(var f in c)d=d.replace(f,c[f]);var e={"%a":"(?:Sun(?:day)?)|(?:Mon(?:day)?)|(?:Tue(?:sday)?)|(?:Wed(?:nesday)?)|(?:Thu(?:rsday)?)|(?:Fri(?:day)?)|(?:Sat(?:urday)?)",
"%b":"(?:Jan(?:uary)?)|(?:Feb(?:ruary)?)|(?:Mar(?:ch)?)|(?:Apr(?:il)?)|May|(?:Jun(?:e)?)|(?:Jul(?:y)?)|(?:Aug(?:ust)?)|(?:Sep(?:tember)?)|(?:Oct(?:ober)?)|(?:Nov(?:ember)?)|(?:Dec(?:ember)?)","%C":"\\d\\d","%d":"0[1-9]|[1-9](?!\\d)|1\\d|2\\d|30|31","%H":"\\d(?!\\d)|[0,1]\\d|20|21|22|23","%I":"\\d(?!\\d)|0\\d|10|11|12","%j":"00[1-9]|0?[1-9](?!\\d)|0?[1-9]\\d(?!\\d)|[1,2]\\d\\d|3[0-6]\\d","%m":"0[1-9]|[1-9](?!\\d)|10|11|12","%M":"0\\d|\\d(?!\\d)|[1-5]\\d","%n":"\\s","%p":"AM|am|PM|pm|A\\.M\\.|a\\.m\\.|P\\.M\\.|p\\.m\\.",
"%S":"0\\d|\\d(?!\\d)|[1-5]\\d|60","%U":"0\\d|\\d(?!\\d)|[1-4]\\d|50|51|52|53","%W":"0\\d|\\d(?!\\d)|[1-4]\\d|50|51|52|53","%w":"[0-6]","%y":"\\d\\d","%Y":"\\d\\d\\d\\d","%%":"%","%t":"\\s"},g={JAN:0,FEB:1,MAR:2,APR:3,MAY:4,JUN:5,JUL:6,AUG:7,SEP:8,OCT:9,NOV:10,DEC:11};f={SUN:0,MON:1,TUE:2,WED:3,THU:4,FRI:5,SAT:6};c={MON:0,TUE:1,WED:2,THU:3,FRI:4,SAT:5,SUN:6};for(var h in e)d=d.replace(h,"("+h+e[h]+")");for(var l=[],e=d.indexOf("%");0<=e;e=d.indexOf("%"))l.push(d[e+1]),d=d.replace(RegExp("\\%"+d[e+
1],"g"),"");var k=RegExp("^"+d).exec(Pointer_stringify(b));if(k){h=function(){var b=function(a,b,c){return"number"!==typeof a||isNaN(a)?b:a>=b?a<=c?a:c:b};return{year:b(HEAP32[a+20>>2]+1900,1970,9999),month:b(HEAP32[a+16>>2],0,11),day:b(HEAP32[a+12>>2],1,31),hour:b(HEAP32[a+8>>2],0,23),min:b(HEAP32[a+4>>2],0,59),sec:b(HEAP32[a>>2],0,59)}}();e=function(a){a=l.indexOf(a);if(0<=a)return k[a+1]};if(d=e("S"))h.sec=parseInt(d);if(d=e("M"))h.min=parseInt(d);if(d=e("H"))h.hour=parseInt(d);else if(d=e("I")){var m=
parseInt(d);if(d=e("p"))m+="P"===d.toUpperCase()[0]?12:0;h.hour=m}if(d=e("Y"))h.year=parseInt(d);else if(d=e("y"))m=parseInt(d),m=(d=e("C"))?m+100*parseInt(d):m+(69>m?2E3:1900),h.year=m;if(d=e("m"))h.month=parseInt(d)-1;else if(d=e("b"))h.month=g[d.substring(0,3).toUpperCase()]||0;if(d=e("d"))h.day=parseInt(d);else if(d=e("j"))for(f=parseInt(d),c=__isLeapYear(h.year),g=0;12>g;++g)d=__arraySum(c?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,g-1),f<=d+(c?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[g]&&(h.day=
f-d);else if(d=e("a"))if(g=d.substring(0,3).toUpperCase(),d=e("U"))f=f[g],c=parseInt(d),g=new Date(h.year,0,1),f=0===g.getDay()?__addDays(g,f+7*(c-1)):__addDays(g,7-g.getDay()+f+7*(c-1)),h.day=f.getDate(),h.month=f.getMonth();else if(d=e("W"))f=c[g],c=parseInt(d),g=new Date(h.year,0,1),f=1===g.getDay()?__addDays(g,f+7*(c-1)):__addDays(g,7-g.getDay()+1+f+7*(c-1)),h.day=f.getDate(),h.month=f.getMonth();h=new Date(h.year,h.month,h.day,h.hour,h.min,h.sec,0);HEAP32[a>>2]=h.getSeconds();HEAP32[a+4>>2]=
h.getMinutes();HEAP32[a+8>>2]=h.getHours();HEAP32[a+12>>2]=h.getDate();HEAP32[a+16>>2]=h.getMonth();HEAP32[a+20>>2]=h.getFullYear()-1900;HEAP32[a+24>>2]=h.getDay();HEAP32[a+28>>2]=__arraySum(__isLeapYear(h.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,h.getMonth()-1)+h.getDate()-1;HEAP32[a+32>>2]=0;return b+intArrayFromString(k[0]).length-1}return 0}function _timegm(b){_tzset();var c=HEAP32[_timezone>>2],a=HEAP32[_daylight>>2],a=1==a?3600:0;return _mktime(b)+c-a}
function _iscntrl(b){return 0<=b&&31>=b||127===b}function _ispunct(b){return 33<=b&&47>=b||58<=b&&64>=b||91<=b&&96>=b||123<=b&&126>=b}function _isxdigit(b){return 48<=b&&57>=b||97<=b&&102>=b||65<=b&&70>=b}function _tolower(b){b|=0;return 65>(b|0)||90<(b|0)?b|0:b-65+97|0}function _toupper(b){return 97<=b&&122>=b?b-97+65:b}function _isascii(b){return 0<=b&&0==(b&128)}function _toascii(b){return b&127}
function _access(b,c){b=Pointer_stringify(b);if(c&-8)return ___setErrNo(ERRNO_CODES.EINVAL),-1;var a;try{a=FS.lookupPath(b,{follow:!0}).node}catch(d){return FS.handleFSError(d),-1}var e="";c&4&&(e+="r");c&2&&(e+="w");c&1&&(e+="x");return e&&FS.nodePermissions(a,e)?(___setErrNo(ERRNO_CODES.EACCES),-1):0}function _alarm(b){return 0}function _chdir(b){"string"!==typeof b&&(b=Pointer_stringify(b));try{return FS.chdir(b),0}catch(c){return FS.handleFSError(c),-1}}
function _chroot(b){___setErrNo(ERRNO_CODES.EACCES);return-1}function _chown(b,c,a,d){"string"!==typeof b&&(b=Pointer_stringify(b));try{return FS.chown(b,c,a),0}catch(e){return FS.handleFSError(e),-1}}
function _confstr(b,c,a){switch(b){case 0:b=ENV.PATH||"/";break;case 1:b="POSIX_V6_ILP32_OFF32\nPOSIX_V6_ILP32_OFFBIG";break;case 2:b="glibc 2.14";break;case 3:b="";break;case 1118:case 1122:case 1124:case 1125:case 1126:case 1128:case 1129:case 1130:b="";break;case 1116:case 1117:case 1121:b="-m32";break;case 1120:b="-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64";break;default:return ___setErrNo(ERRNO_CODES.EINVAL),0}if(0==a||0==c)return b.length+1;for(var d=Math.min(a,b.length),e=0;e<d;e++)HEAP8[c+
e|0]=b.charCodeAt(e);a>d&&(HEAP8[c+e++|0]=0);return e}function _ctermid(b){if(!_ctermid.ret){var c=intArrayFromString("/dev/tty");_ctermid.ret=allocate(c,"i8",ALLOC_NORMAL)}return b?_strcpy(b,_ctermid.ret):_ctermid.ret}
function _fcntl(b,c,a,d){b=FS.getStream(b);if(!b)return ___setErrNo(ERRNO_CODES.EBADF),-1;switch(c){case 0:c=HEAP32[a>>2];if(0>c)return ___setErrNo(ERRNO_CODES.EINVAL),-1;var e;try{e=FS.open(b.path,b.flags,0,c)}catch(f){return FS.handleFSError(f),-1}return e.fd;case 1:case 2:return 0;case 3:return b.flags;case 4:return c=HEAP32[a>>2],b.flags|=c,0;case 12:case 12:return c=HEAP32[a>>2],HEAP16[c+0>>1]=2,0;case 13:case 14:case 13:case 14:return 0;case 8:case 9:return ___setErrNo(ERRNO_CODES.EINVAL),-1;
default:return ___setErrNo(ERRNO_CODES.EINVAL),-1}}function _dup(b){return _fcntl(b,0,allocate([0,0,0,0],"i32",ALLOC_STACK))}function _dup2(b,c){var a=FS.getStream(b);if(0>c)return ___setErrNo(ERRNO_CODES.EBADF),-1;if(b===c&&a)return b;_close(c);try{return FS.open(a.path,a.flags,0,c,c).fd}catch(d){return FS.handleFSError(d),-1}}function __exit(b){Module.print("exit("+b+") called");Module.exit(b)}function _fchown(b,c,a){try{return FS.fchown(b,c,a),0}catch(d){return FS.handleFSError(d),-1}}
function _fchdir(b){if(b=FS.getStream(b))return _chdir(b.path);___setErrNo(ERRNO_CODES.EBADF);return-1}var _fdatasync=_fsync;function _fork(){___setErrNo(ERRNO_CODES.EAGAIN);return-1}function _fpathconf(b,c){switch(c){case 0:return 32E3;case 1:case 2:case 3:return 255;case 4:case 5:case 16:case 17:case 18:return 4096;case 6:case 7:case 20:return 1;case 8:return 0;case 9:case 10:case 11:case 12:case 14:case 15:case 19:return-1;case 13:return 64}___setErrNo(ERRNO_CODES.EINVAL);return-1}
function _truncate(b,c){"string"!==typeof b&&(b=Pointer_stringify(b));try{return FS.truncate(b,c),0}catch(a){return FS.handleFSError(a),-1}}function _ftruncate(b,c){try{return FS.ftruncate(b,c),0}catch(a){return FS.handleFSError(a),-1}}function _getcwd(b,c){if(0==c)return ___setErrNo(ERRNO_CODES.EINVAL),0;var a=FS.cwd();if(c<a.length+1)return ___setErrNo(ERRNO_CODES.ERANGE),0;for(var d=0;d<a.length;d++)HEAP8[b+d|0]=a.charCodeAt(d);HEAP8[b+d|0]=0;return b}function _getgid(){return 0}
var _getegid=_getgid,_geteuid=_getgid;function _gethostid(){return 42}function _getlogin_r(b,c){if(5>c)return ___setErrNo(ERRNO_CODES.ERANGE);for(var a=0;4>a;a++)HEAP8[b+a|0]="root".charCodeAt(a);return HEAP8[b+a|0]=0}function _getlogin(){_getlogin.ret||(_getlogin.ret=_malloc(8));return _getlogin_r(_getlogin.ret,8)?0:_getlogin.ret}function _getpagesize(){return PAGE_SIZE}var _getpgrp=_getgid,_getpid=_getgid,_getppid=_getgid,_getuid=_getgid;
function _isatty(b){b=FS.getStream(b);return b?b.tty?1:(___setErrNo(ERRNO_CODES.ENOTTY),0):(___setErrNo(ERRNO_CODES.EBADF),0)}function _lchown(b,c,a){return _chown(b,c,a,!0)}function _link(b,c){___setErrNo(ERRNO_CODES.EMLINK);return-1}function _lockf(b,c,a){if(FS.getStream(b))return 0;___setErrNo(ERRNO_CODES.EBADF);return-1}function _nice(b){___setErrNo(ERRNO_CODES.EPERM);return 0}var _pathconf=_fpathconf;function _pause(){___setErrNo(ERRNO_CODES.EINTR);return-1}
function _readlink(b,c,a){b=Pointer_stringify(b);var d;try{d=FS.readlink(b)}catch(e){return FS.handleFSError(e),-1}d=d.slice(0,Math.max(0,a-1));writeStringToMemory(d,c,!0);return d.length}function _sbrk(b){var c=_sbrk;c.called||(DYNAMICTOP=alignMemoryPage(DYNAMICTOP),c.called=!0,assert(Runtime.dynamicAlloc),c.alloc=Runtime.dynamicAlloc,Runtime.dynamicAlloc=function(){abort("cannot dynamically allocate, sbrk now has control")});var a=DYNAMICTOP;0!=b&&c.alloc(b);return a}
function _setgid(b){___setErrNo(ERRNO_CODES.EPERM);return-1}function _setpgid(b,c){___setErrNo(ERRNO_CODES.EPERM);return-1}var _setpgrp=_setgid,_setregid=_setpgid,_setreuid=_setpgid,_setsid=_setgid,_setuid=_setgid;function _sleep(b){return _usleep(1E6*b)}function _symlink(b,c){b=Pointer_stringify(b);c=Pointer_stringify(c);try{return FS.symlink(b,c),0}catch(a){return FS.handleFSError(a),-1}}function _sync(){}
function _sysconf(b){switch(b){case 30:return PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 79:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;
case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1E3;case 89:return 700;case 71:return 256;
case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return 1}___setErrNo(ERRNO_CODES.EINVAL);return-1}function _tcgetpgrp(b){return 0}function _tcsetpgrp(b,c){___setErrNo(ERRNO_CODES.EINVAL);return-1}
function _ttyname_r(b,c,a){if(FS.getStream(b)){if(!_isatty(b))return ___setErrNo(ERRNO_CODES.ENOTTY);if(9>a)return ___setErrNo(ERRNO_CODES.ERANGE)}else return ___setErrNo(ERRNO_CODES.EBADF);writeStringToMemory("/dev/tty",c);return 0}function _ttyname(b){_ttyname.ret||(_ttyname.ret=_malloc(256));return _ttyname_r(b,_ttyname.ret,256)?0:_ttyname.ret}var _ualarm=_alarm,_vfork=_fork;function _abort(){Module.abort()}
var Browser={mainLoop:{scheduler:null,shouldPause:!1,paused:!1,queue:[],pause:function(){Browser.mainLoop.shouldPause=!0},resume:function(){Browser.mainLoop.paused&&(Browser.mainLoop.paused=!1,Browser.mainLoop.scheduler());Browser.mainLoop.shouldPause=!1},updateStatus:function(){if(Module.setStatus){var b=Module.statusMessage||"Please wait...",c=Browser.mainLoop.remainingBlockers,a=Browser.mainLoop.expectedBlockers;c?c<a?Module.setStatus(b+" ("+(a-c)+"/"+a+")"):Module.setStatus(b):Module.setStatus("")}}},
isFullScreen:!1,pointerLock:!1,moduleContextCreatedCallbacks:[],workers:[],init:function(){function b(){Browser.pointerLock=document.pointerLockElement===a||document.mozPointerLockElement===a||document.webkitPointerLockElement===a}Module.preloadPlugins||(Module.preloadPlugins=[]);if(!Browser.initted&&!ENVIRONMENT_IS_WORKER){Browser.initted=!0;try{new Blob,Browser.hasBlobConstructor=!0}catch(c){Browser.hasBlobConstructor=!1,console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder=
"undefined"!=typeof MozBlobBuilder?MozBlobBuilder:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:Browser.hasBlobConstructor?null:console.log("warning: no BlobBuilder");Browser.URLObject="undefined"!=typeof window?window.URL?window.URL:window.webkitURL:void 0;Module.noImageDecoding||"undefined"!==typeof Browser.URLObject||(console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available."),Module.noImageDecoding=!0);Module.preloadPlugins.push({canHandle:function(a){return!Module.noImageDecoding&&
/\.(jpg|jpeg|png|bmp)$/i.test(a)},handle:function(a,b,c,g){var h=null;if(Browser.hasBlobConstructor)try{h=new Blob([a],{type:Browser.getMimetype(b)}),h.size!==a.length&&(h=new Blob([(new Uint8Array(a)).buffer],{type:Browser.getMimetype(b)}))}catch(l){Runtime.warnOnce("Blob constructor present but fails: "+l+"; falling back to blob builder")}h||(h=new Browser.BlobBuilder,h.append((new Uint8Array(a)).buffer),h=h.getBlob());var k=Browser.URLObject.createObjectURL(h);assert("string"==typeof k,"createObjectURL must return a url as a string");
var m=new Image;m.onload=function(){assert(m.complete,"Image "+b+" could not be decoded");var g=document.createElement("canvas");g.width=m.width;g.height=m.height;g.getContext("2d").drawImage(m,0,0);Module.preloadedImages[b]=g;Browser.URLObject.revokeObjectURL(k);c&&c(a)};m.onerror=function(a){console.log("Image "+k+" could not be decoded");g&&g()};m.src=k}});Module.preloadPlugins.push({canHandle:function(a){return!Module.noAudioDecoding&&a.substr(-4)in{".ogg":1,".wav":1,".mp3":1}},handle:function(a,
b,c,g){function h(g){k||(k=!0,Module.preloadedAudios[b]=g,c&&c(a))}function l(){k||(k=!0,Module.preloadedAudios[b]=new Audio,g&&g())}var k=!1;if(Browser.hasBlobConstructor){try{var m=new Blob([a],{type:Browser.getMimetype(b)})}catch(n){return l()}m=Browser.URLObject.createObjectURL(m);assert("string"==typeof m,"createObjectURL must return a url as a string");var q=new Audio;q.addEventListener("canplaythrough",function(){h(q)},!1);q.onerror=function(c){if(!k){console.log("warning: browser could not fully decode audio "+
b+", trying slower base64 approach");c="data:audio/x-"+b.substr(-3)+";base64,";for(var f="",g=0,l=0,m=0;m<a.length;m++)for(g=g<<8|a[m],l+=8;6<=l;)var n=g>>l-6&63,l=l-6,f=f+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[n];2==l?(f+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(g&3)<<4],f+="=="):4==l&&(f+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(g&15)<<2],f+="=");q.src=c+f;h(q)}};q.src=m;Browser.safeSetTimeout(function(){h(q)},1E4)}else return l()}});
var a=Module.canvas;a.requestPointerLock=a.requestPointerLock||a.mozRequestPointerLock||a.webkitRequestPointerLock;a.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock||function(){};a.exitPointerLock=a.exitPointerLock.bind(document);document.addEventListener("pointerlockchange",b,!1);document.addEventListener("mozpointerlockchange",b,!1);document.addEventListener("webkitpointerlockchange",b,!1);Module.elementPointerLock&&a.addEventListener("click",
function(b){!Browser.pointerLock&&a.requestPointerLock&&(a.requestPointerLock(),b.preventDefault())},!1)}},createContext:function(b,c,a){var d;try{if(d=c?b.getContext("experimental-webgl",{alpha:!1}):b.getContext("2d"),!d)throw":(";}catch(e){return Module.print("Could not create canvas - "+e),null}c&&(b.style.backgroundColor="black",b.addEventListener("webglcontextlost",function(a){alert("WebGL context lost. You will need to reload the page.")},!1));a&&(Module.ctx=d,Module.useWebGL=c,Browser.moduleContextCreatedCallbacks.forEach(function(a){a()}),
Browser.init());return d},destroyContext:function(b,c,a){},fullScreenHandlersInstalled:!1,lockPointer:void 0,resizeCanvas:void 0,requestFullScreen:function(b,c){function a(){Browser.isFullScreen=!1;(document.webkitFullScreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.mozFullscreenElement||document.fullScreenElement||document.fullscreenElement)===d?(d.cancelFullScreen=document.cancelFullScreen||document.mozCancelFullScreen||document.webkitCancelFullScreen,d.cancelFullScreen=
d.cancelFullScreen.bind(document),Browser.lockPointer&&d.requestPointerLock(),Browser.isFullScreen=!0,Browser.resizeCanvas&&Browser.setFullScreenCanvasSize()):Browser.resizeCanvas&&Browser.setWindowedCanvasSize();if(Module.onFullScreen)Module.onFullScreen(Browser.isFullScreen)}Browser.lockPointer=b;Browser.resizeCanvas=c;"undefined"===typeof Browser.lockPointer&&(Browser.lockPointer=!0);"undefined"===typeof Browser.resizeCanvas&&(Browser.resizeCanvas=!1);var d=Module.canvas;Browser.fullScreenHandlersInstalled||
(Browser.fullScreenHandlersInstalled=!0,document.addEventListener("fullscreenchange",a,!1),document.addEventListener("mozfullscreenchange",a,!1),document.addEventListener("webkitfullscreenchange",a,!1));d.requestFullScreen=d.requestFullScreen||d.mozRequestFullScreen||(d.webkitRequestFullScreen?function(){d.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}:null);d.requestFullScreen()},requestAnimationFrame:function(b){window.requestAnimationFrame||(window.requestAnimationFrame=window.requestAnimationFrame||
window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||window.setTimeout);window.requestAnimationFrame(b)},safeCallback:function(b){return function(){if(!ABORT)return b.apply(null,arguments)}},safeRequestAnimationFrame:function(b){return Browser.requestAnimationFrame(function(){ABORT||b()})},safeSetTimeout:function(b,c){return setTimeout(function(){ABORT||b()},c)},safeSetInterval:function(b,c){return setInterval(function(){ABORT||
b()},c)},getMimetype:function(b){return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",bmp:"image/bmp",ogg:"audio/ogg",wav:"audio/wav",mp3:"audio/mpeg"}[b.substr(b.lastIndexOf(".")+1)]},getUserMedia:function(b){window.getUserMedia||(window.getUserMedia=navigator.getUserMedia||navigator.mozGetUserMedia);window.getUserMedia(b)},getMovementX:function(b){return b.movementX||b.mozMovementX||b.webkitMovementX||0},getMovementY:function(b){return b.movementY||b.mozMovementY||b.webkitMovementY||0},mouseX:0,
mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function(b){if(Browser.pointerLock)"mousemove"!=b.type&&"mozMovementX"in b?Browser.mouseMovementX=Browser.mouseMovementY=0:(Browser.mouseMovementX=Browser.getMovementX(b),Browser.mouseMovementY=Browser.getMovementY(b)),"undefined"!=typeof SDL?(Browser.mouseX=SDL.mouseX+Browser.mouseMovementX,Browser.mouseY=SDL.mouseY+Browser.mouseMovementY):(Browser.mouseX+=Browser.mouseMovementX,Browser.mouseY+=Browser.mouseMovementY);else{var c=Module.canvas.getBoundingClientRect(),
a;if("touchstart"==b.type||"touchend"==b.type||"touchmove"==b.type)if(b=b.touches.item(0))a=b.pageX-(window.scrollX+c.left),b=b.pageY-(window.scrollY+c.top);else return;else a=b.pageX-(window.scrollX+c.left),b=b.pageY-(window.scrollY+c.top);var d=Module.canvas.height;a*=Module.canvas.width/c.width;b*=d/c.height;Browser.mouseMovementX=a-Browser.mouseX;Browser.mouseMovementY=b-Browser.mouseY;Browser.mouseX=a;Browser.mouseY=b}},xhrLoad:function(b,c,a){var d=new XMLHttpRequest;d.open("GET",b,!0);d.responseType=
"arraybuffer";d.onload=function(){200==d.status||0==d.status&&d.response?c(d.response):a()};d.onerror=a;d.send(null)},asyncLoad:function(b,c,a,d){Browser.xhrLoad(b,function(a){assert(a,'Loading data file "'+b+'" failed (no arrayBuffer).');c(new Uint8Array(a));d||removeRunDependency("al "+b)},function(c){if(a)a();else throw'Loading data file "'+b+'" failed.';});d||addRunDependency("al "+b)},resizeListeners:[],updateResizeListeners:function(){var b=Module.canvas;Browser.resizeListeners.forEach(function(c){c(b.width,
b.height)})},setCanvasSize:function(b,c,a){var d=Module.canvas;d.width=b;d.height=c;a||Browser.updateResizeListeners()},windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function(){var b=Module.canvas;this.windowedWidth=b.width;this.windowedHeight=b.height;b.width=screen.width;b.height=screen.height;"undefined"!=typeof SDL&&(b=HEAPU32[SDL.screen+0*Runtime.QUANTUM_SIZE>>2],HEAP32[SDL.screen+0*Runtime.QUANTUM_SIZE>>2]=b|8388608);Browser.updateResizeListeners()},setWindowedCanvasSize:function(){var b=
Module.canvas;b.width=this.windowedWidth;b.height=this.windowedHeight;"undefined"!=typeof SDL&&(b=HEAPU32[SDL.screen+0*Runtime.QUANTUM_SIZE>>2],HEAP32[SDL.screen+0*Runtime.QUANTUM_SIZE>>2]=b&-8388609);Browser.updateResizeListeners()}};FS.staticInit();__ATINIT__.unshift({func:function(){Module.noFSInit||FS.init.initialized||FS.init()}});__ATMAIN__.push({func:function(){FS.ignorePermissions=!1}});__ATEXIT__.push({func:function(){FS.quit()}});Module.FS_createFolder=FS.createFolder;
Module.FS_createPath=FS.createPath;Module.FS_createDataFile=FS.createDataFile;Module.FS_createPreloadedFile=FS.createPreloadedFile;Module.FS_createLazyFile=FS.createLazyFile;Module.FS_createLink=FS.createLink;Module.FS_createDevice=FS.createDevice;___errno_state=Runtime.staticAlloc(4);HEAP32[___errno_state>>2]=0;__ATINIT__.unshift({func:function(){TTY.init()}});__ATEXIT__.push({func:function(){TTY.shutdown()}});TTY.utf8=new Runtime.UTF8Processor;if(ENVIRONMENT_IS_NODE)var fs=require("fs");
__ATINIT__.push({func:function(){SOCKFS.root=FS.mount(SOCKFS,{},null)}});_fgetc.ret=allocate([0],"i8",ALLOC_STATIC);_fputc.ret=allocate([0],"i8",ALLOC_STATIC);___strtok_state=Runtime.staticAlloc(4);___buildEnvironment(ENV);Module.requestFullScreen=function(b,c){Browser.requestFullScreen(b,c)};Module.requestAnimationFrame=function(b){Browser.requestAnimationFrame(b)};Module.setCanvasSize=function(b,c,a){Browser.setCanvasSize(b,c,a)};Module.pauseMainLoop=function(){Browser.mainLoop.pause()};
Module.resumeMainLoop=function(){Browser.mainLoop.resume()};Module.getUserMedia=function(){Browser.getUserMedia()};STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=!0;STACK_MAX=STACK_BASE+5242880;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);assert(DYNAMIC_BASE<TOTAL_MEMORY);
var FUNCTION_TABLE=[0,0,_UnistdTtyname_r,0,_MathSinh,0,_UnistdDup,0,_Unistd_Exit,0,_StdlibAtol,0,_StdTolower,0,_EmDigitalWrite,0,_StdlibAtof,0,_StdioVsnprintf,0,_StdlibAtoi,0,_StdIsascii,0,_StdioFsetpos,0,_MathLdexp,0,_StringStrtok_r,0,_UnistdTruncate,0,_UnistdAccess,0,_UnistdLchown,0,_StdAsctime,0,_MathCos,0,_StdlibStrtod,0,_StringMemchr,0,_StdioSetvbuf,0,_MathAsin,0,_StdioVscanf,0,_StdlibStrtol,0,_StdboolSetupFunc,0,_MathFloor,0,_MathSetupFunc,0,_StdlibMalloc,0,_StringIndex,0,_StdioUngetc,0,_UnistdUalarm,
0,_StdioVfscanf,0,_StringStrcmp,0,_StdTime,0,_UnistdReadlink,0,_StdioPrintf,0,_StdioFprintf,0,_StdIspunct,0,_StringStrxfrm,0,_StdioPutchar,0,_MathAtan,0,_StdlibCalloc,0,_UnistdGetuid,0,_UnistdNice,0,_UnistdAlarm,0,_StdioVfprintf,0,_UnistdDup2,0,_UnistdSymlink,0,_StringMemcpy,0,_StdioFseek,0,_UnistdChown,0,_UnistdGetpagesize,0,_UnistdTcsetpgrp,0,_UnistdFdatasync,0,_initPicoc,0,_StdDifftime,0,_MathSin,0,_StringStrncmp,0,_StringStrtok,0,_MathRound,0,_StdIsblank,0,_StdioFerror,0,_StdioSnprintf,0,_UnistdGetppid,
0,_UnistdVfork,0,_StdioFwrite,0,_StdIsprint,0,_UnistdGetdtablesize,0,_UnistdRmdir,0,_UnistdSync,0,_StdLocaltime,0,_StdioFread,0,_StringStrncpy,0,_MathLog10,0,_StdIscntrl,0,_UnistdGetgid,0,_StdErrnoSetupFunc,0,_UnistdSetsid,0,_StdioClearerr,0,_StdioFscanf,0,_StdlibSrand,0,_StdlibStrtoul,0,_StringStrerror,0,_StringStrrchr,0,_StdIsalnum,0,_StdIsspace,0,_MathFrexp,0,_StdlibRealloc,0,_StdioFflush,0,_StdioFeof,0,_MathSqrt,0,_StdlibSystem,0,_StdGmtime_r,0,_StdioSprintf,0,_StdlibSetupFunc,0,_UnistdSetreuid,
0,_StdStrptime,0,_UnistdFsync,0,_StdioFgetc,0,_UnistdLink,0,_UnistdGetlogin,0,_UnistdTtyname,0,_UnistdFtruncate,0,_MathFabs,0,_StdioGets,0,_UnistdClose,0,_EmSetupFunc,0,_StringStrspn,0,_StdioFgets,0,_StringMemmove,0,_StdlibAbs,0,_StdioRename,0,_StdioVsscanf,0,_UnistdFork,0,_StdioVprintf,0,_MathTanh,0,_StdGmtime,0,_StdToupper,0,_StdioFclose,0,_StdioFtell,0,_UnistdUnlink,0,_UnistdConfstr,0,_UnistdChdir,0,_StdToascii,0,_MathFmod,0,_StringSetupFunc,0,_UnistdFchown,0,_UnistdSbrk,0,_MathModf,0,_StdioRewind,
0,_StdlibLabs,0,_UnistdSysconf,0,_StringStrcoll,0,_UnistdGetwd,0,_StringStrpbrk,0,_StdIsalpha,0,_StdioFgetpos,0,_StdioFopen,0,_MathPow,0,_StdTimegm,0,_StdioRemove,0,_StringStrncat,0,_StdlibGetenv,0,_UnistdLockf,0,_UnistdPause,0,_StdlibRand,0,_UnistdPathconf,0,_EmAnalogWrite,0,_UnistdFchdir,0,_UnistdGetegid,0,_StdIsxdigit,0,_StdIslower,0,_StdioGetchar,0,_UnistdSetpgrp,0,_StdioPuts,0,_UnistdSleep,0,_UnistdSetregid,0,_UnistdLseek,0,_StringStrcat,0,_UnistdGetpid,0,_StdioFileno,0,_StdioPutc,0,_UnistdSetuid,
0,_MathCeil,0,_UnistdGetcwd,0,_StdlibFree,0,_StringStrcpy,0,_StdIsgraph,0,_UnistdGetlogin_r,0,_UnistdRead,0,_StringStrchr,0,_StdioPerror,0,_StringRindex,0,_UnistdCtermid,0,_UnistdGeteuid,0,_StdioSscanf,0,_StdlibAbort,0,_UnistdGetpgrp,0,_StdioTmpfile,0,_UnistdSetpgid,0,_EmPinMode,0,_UnistdWrite,0,_UnistdGethostid,0,_StdioFputs,0,_StringStrcspn,0,_StringStrdup,0,_UnistdIsatty,0,_StdioVsprintf,0,_StringStrlen,0,_StdTimeSetupFunc,0,_MathAtan2,0,_UnistdTcgetpgrp,0,_StdMktime,0,_StdioScanf,0,_MathCosh,
0,_StdioFreopen,0,_StdCtime,0,_StdClock,0,_StringMemset,0,_EmDelay,0,_UnistdFpathconf,0,_StdioSetbuf,0,_UnistdChroot,0,_MathAcos,0,_UnistdSetgid,0,_StdioSetupFunc,0,_StdIsdigit,0,_UnistdUsleep,0,_StringMemcmp,0,_UnistdGetpass,0,_StdlibExit,0,_MathExp,0,_UnistdSetupFunc,0,_StdStrftime,0,_MathLog,0,_StdioFputc,0,_StdIsupper,0,_MathTan,0,_StringStrstr,0];function _main(b,c){_emscripten_asm_const(12120);return 0}Module._main=_main;
function _initPicoc(b){_PicocInitialise(131072);var c=_strlen(b);_PicocParse(8952,b,c,1,0,1);b=HEAP32[3710];c=_strlen(HEAP32[3710]);_PicocParse(6904,b,c,1,0,1)}Module._initPicoc=_initPicoc;function _TableInit(){_TableInitTable(17168,17576,97,1);var b=_TableStrRegister(16320);HEAP32[4492]=b}function _TableInitTable(b,c,a,d){HEAP16[(b|0)>>1]=a&65535;HEAP16[(b+2|0)>>1]=d&65535;HEAP32[(b+4|0)>>2]=c;_memset(c,0,a<<2)}function _TableStrRegister(b){var c=_strlen(b);return _TableStrRegister2(b,c)}
function _TableSet(b,c,a,d,e,f){var g=0,h=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var l,k,m,n,q,p,s,t=h;k=b;m=c;n=a;q=d;p=e;s=f;g=0==(_TableSearch(k,m,t)|0)?2:3;break;case 2:g=_VariableAlloc(0,20,HEAP16[(k+2|0)>>1]<<16>>16);HEAP32[(g+4|0)>>2]=q;HEAP16[(g+8|0)>>1]=p&65535;HEAP16[(g+10|0)>>1]=s&65535;HEAP32[(g+12|0)>>2]=m;HEAP32[((g+12|0)+4|0)>>2]=n;HEAP32[(g|0)>>2]=HEAP32[(HEAP32[(k+4|0)>>2]+(HEAP32[t>>2]<<2)|0)>>2];HEAP32[(HEAP32[(k+4|0)>>2]+
(HEAP32[t>>2]<<2)|0)>>2]=g;l=1;g=4;break;case 3:l=0;g=4;break;case 4:return b=l,STACKTOP=h,b;default:assert(0,"bad label: "+g)}}
function _TableSearch(b,c,a){for(var d=0,d=1;;)switch(d){case 1:var e,f,g,h,l,d=b;f=c;g=a;l=(f>>>0)%(HEAP16[(d|0)>>1]<<16>>16>>>0)&-1;h=HEAP32[(HEAP32[(d+4|0)>>2]+(l<<2)|0)>>2];d=2;break;case 2:d=0!=(h|0)?3:7;break;case 3:d=(HEAP32[(h+12|0)>>2]|0)==(f|0)?4:5;break;case 4:e=h;d=8;break;case 5:d=6;break;case 6:h=HEAP32[(h|0)>>2];d=2;break;case 7:HEAP32[g>>2]=l;e=0;d=8;break;case 8:return e;default:assert(0,"bad label: "+d)}}
function _TableGet(b,c,a,d,e,f){var g=0,h=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var l,k,m,n,q,p,s=h,g=b;k=c;m=a;n=d;q=e;p=f;k=_TableSearch(g,k,s);g=0==(k|0)?2:3;break;case 2:l=0;g=6;break;case 3:HEAP32[m>>2]=HEAP32[((k+12|0)+4|0)>>2];g=0!=(n|0)?4:5;break;case 4:HEAP32[n>>2]=HEAP32[(k+4|0)>>2];HEAP32[q>>2]=HEAP16[(k+8|0)>>1]&65535;HEAP32[p>>2]=HEAP16[(k+10|0)>>1]&65535;g=5;break;case 5:l=1;g=6;break;case 6:return b=l,STACKTOP=h,b;default:assert(0,
"bad label: "+g)}}
function _TableDelete(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e,f;e=b;f=c;e=HEAP32[(e+4|0)>>2]+(((f>>>0)%(HEAP16[(e|0)>>1]<<16>>16>>>0)&-1)<<2)|0;a=2;break;case 2:a=0!=(HEAP32[e>>2]|0)?3:7;break;case 3:a=(HEAP32[(HEAP32[e>>2]+12|0)>>2]|0)==(f|0)?4:5;break;case 4:d=HEAP32[e>>2];a=HEAP32[((d+12|0)+4|0)>>2];HEAP32[e>>2]=HEAP32[(d|0)>>2];_HeapFreeMem(d);d=a;a=8;break;case 5:a=6;break;case 6:e=HEAP32[e>>2]|0;a=2;break;case 7:d=0;a=8;break;case 8:return d;default:assert(0,"bad label: "+a)}}
function _TableSetIdentifier(b,c,a){var d=0,e=0,f=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l,k,m=f,n,q;h=b;l=c;k=a;n=_TableSearchIdentifier(h,l,k,m);d=0!=(n|0)?2:3;break;case 2:g=n+12|0;d=6;break;case 3:q=_HeapAllocMem((k+12|0)+1|0);d=0==(q|0)?4:5;break;case 4:_ProgramFail(0,10312,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=5;break;case 5:_strncpy(q+12|0,
l,k);HEAP8[(q+12|0)+k|0]=0;HEAP32[(q|0)>>2]=HEAP32[(HEAP32[(h+4|0)>>2]+(HEAP32[m>>2]<<2)|0)>>2];HEAP32[(HEAP32[(h+4|0)>>2]+(HEAP32[m>>2]<<2)|0)>>2]=q;g=q+12|0;d=6;break;case 6:return b=g,STACKTOP=f,b;default:assert(0,"bad label: "+d)}}
function _TableSearchIdentifier(b,c,a,d){for(var e=0,e=1;;)switch(e){case 1:var f,g,h,l,k,m,e=b;g=c;h=a;l=d;m=(_TableHash(g,h)>>>0)%(HEAP16[(e|0)>>1]<<16>>16>>>0)&-1;k=HEAP32[(HEAP32[(e+4|0)>>2]+(m<<2)|0)>>2];e=2;break;case 2:e=0!=(k|0)?3:8;break;case 3:e=0==(_strncmp(k+12|0,g,h)|0)?4:6;break;case 4:e=0==(HEAP8[(k+12|0)+h|0]<<24>>24|0)?5:6;break;case 5:f=k;e=9;break;case 6:e=7;break;case 7:k=HEAP32[(k|0)>>2];e=2;break;case 8:HEAP32[l>>2]=m;f=0;e=9;break;case 9:return f;default:assert(0,"bad label: "+
e)}}function _TableStrRegister2(b,c){return _TableSetIdentifier(17168,b,c)}function _TableHash(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e,f,g,h;d=b;f=e=c;h=0;g=8;a=2;break;case 2:a=(h|0)<(e|0)?3:7;break;case 3:a=25<g>>>0?4:5;break;case 4:g=g-26|0;a=5;break;case 5:a=d;d=a+1|0;f^=HEAP8[a]<<24>>24<<g;a=6;break;case 6:h=h+1|0;g=g+7|0;a=2;break;case 7:return f;default:assert(0,"bad label: "+a)}}
function _LexInit(){for(var b=0,b=1;;)switch(b){case 1:var c;c=0;b=2;break;case 2:b=39>c>>>0?3:5;break;case 3:b=_TableStrRegister(HEAP32[(14368+(12*c&-1)|0)>>2]);HEAP32[((14368+(12*c&-1)|0)+8|0)>>2]=b;b=4;break;case 4:c=c+1|0;b=2;break;case 5:return;default:assert(0,"bad label: "+b)}}
function _LexCheckReservedWord(b){for(var c=0,c=1;;)switch(c){case 1:var a,d,e;d=b;e=0;c=2;break;case 2:c=39>e>>>0?3:7;break;case 3:c=(d|0)==(HEAP32[((14368+(12*e&-1)|0)+8|0)>>2]|0)?4:5;break;case 4:a=HEAP32[((14368+(12*e&-1)|0)+4|0)>>2];c=8;break;case 5:c=6;break;case 6:e=e+1|0;c=2;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _LexGetNumber(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e,f,g,h,l,k,m,n;e=b;f=c;g=0;h=10;a=48==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?2:15;break;case 2:a=e|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=e+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=(HEAP32[(e|0)>>2]|0)!=(HEAP32[(e+4|0)>>2]|0)?3:14;break;case 3:a=120==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?5:4;break;case 4:a=88==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?5:6;break;case 5:h=16;a=e|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=e+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;
a=13;break;case 6:a=98==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?8:7;break;case 7:a=66==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?8:9;break;case 8:h=2;a=e|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=e+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=12;break;case 9:a=46!=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?10:11;break;case 10:h=8;a=11;break;case 11:a=12;break;case 12:a=13;break;case 13:a=14;break;case 14:a=15;break;case 15:a=16;break;case 16:if((HEAP32[(e|0)>>2]|0)!=(HEAP32[(e+4|0)>>2]|0))a=17;else var q=0,a=32;break;case 17:a=48<=
(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?18:22;break;case 18:var p=HEAP8[HEAP32[(e|0)>>2]]<<24>>24,a=10>(h|0)?19:20;break;case 19:var s=h,a=21;break;case 20:s=10;a=21;break;case 21:if((p|0)<(s+48|0))var t=1,a=31;else a=22;break;case 22:a=10<(h|0)?23:29;break;case 23:a=97<=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?24:25;break;case 24:if(102>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0))var r=1,a=28;else a=25;break;case 25:if(65<=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0))a=26;else var u=0,a=27;break;case 26:u=70>=(HEAP8[HEAP32[(e|
0)>>2]]<<24>>24|0);a=27;break;case 27:r=u;a=28;break;case 28:var w=r&1,a=30;break;case 29:w=0;a=30;break;case 30:t=0!=(w|0);a=31;break;case 31:q=t;a=32;break;case 32:a=q?33:41;break;case 33:var v=Math_imul(g,h)|0,a=57>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?34:35;break;case 34:var x=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24)-48|0,a=39;break;case 35:a=70>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?36:37;break;case 36:var y=((HEAP8[HEAP32[(e|0)>>2]]<<24>>24)-65|0)+10|0,a=38;break;case 37:y=((HEAP8[HEAP32[(e|0)>>2]]<<
24>>24)-97|0)+10|0;a=38;break;case 38:x=y;a=39;break;case 39:g=v+x|0;a=40;break;case 40:a=e|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=e+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=16;break;case 41:a=0<=(g|0)?42:44;break;case 42:a=255>=(g|0)?43:44;break;case 43:HEAP32[(f|0)>>2]=19088;HEAP8[HEAP32[(f+4|0)>>2]]=g&255;l=49;a=45;break;case 44:HEAP32[(f|0)>>2]=18408;HEAP32[HEAP32[(f+4|0)>>2]>>2]=g;l=46;a=45;break;case 45:a=(HEAP32[(e|0)>>2]|0)==(HEAP32[(e+4|0)>>2]|0)?46:47;break;case 46:d=l;a=113;break;case 47:a=108==
(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?49:48;break;case 48:a=76==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?49:50;break;case 49:d=e|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=e+16|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=l;a=113;break;case 50:a=(HEAP32[(e|0)>>2]|0)==(HEAP32[(e+4|0)>>2]|0)?52:51;break;case 51:a=46!=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?52:53;break;case 52:d=l;a=113;break;case 53:HEAP32[(f|0)>>2]=19032;k=e|0;HEAP32[k>>2]=HEAP32[k>>2]+1|0;k=e+16|0;HEAP32[k>>2]=HEAP32[k>>2]+1|0;m=1/(h|0);k=g|0;a=54;break;case 54:if((HEAP32[(e|
0)>>2]|0)!=(HEAP32[(e+4|0)>>2]|0))a=55;else var z=0,a=70;break;case 55:a=48<=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?56:60;break;case 56:var B=HEAP8[HEAP32[(e|0)>>2]]<<24>>24,a=10>(h|0)?57:58;break;case 57:var E=h,a=59;break;case 58:E=10;a=59;break;case 59:if((B|0)<(E+48|0))var N=1,a=69;else a=60;break;case 60:a=10<(h|0)?61:67;break;case 61:a=97<=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?62:63;break;case 62:if(102>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0))var C=1,a=66;else a=63;break;case 63:if(65<=(HEAP8[HEAP32[(e|
0)>>2]]<<24>>24|0))a=64;else var K=0,a=65;break;case 64:K=70>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0);a=65;break;case 65:C=K;a=66;break;case 66:var H=C&1,a=68;break;case 67:H=0;a=68;break;case 68:N=0!=(H|0);a=69;break;case 69:z=N;a=70;break;case 70:a=z?71:79;break;case 71:a=57>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?72:73;break;case 72:var D=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24)-48|0,a=77;break;case 73:a=70>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?74:75;break;case 74:var M=((HEAP8[HEAP32[(e|0)>>2]]<<24>>24)-65|
0)+10|0,a=76;break;case 75:M=((HEAP8[HEAP32[(e|0)>>2]]<<24>>24)-97|0)+10|0;a=76;break;case 76:D=M;a=77;break;case 77:k+=(D|0)*m;a=78;break;case 78:a=e|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=e+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;m/=h|0;a=54;break;case 79:a=(HEAP32[(e|0)>>2]|0)!=(HEAP32[(e+4|0)>>2]|0)?80:112;break;case 80:a=101==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?82:81;break;case 81:a=69==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?82:112;break;case 82:n=1;a=e|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=e+16|0;HEAP32[a>>
2]=HEAP32[a>>2]+1|0;a=(HEAP32[(e|0)>>2]|0)!=(HEAP32[(e+4|0)>>2]|0)?83:85;break;case 83:a=45==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?84:85;break;case 84:n=-1;a=e|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=e+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=85;break;case 85:g=0;a=86;break;case 86:if((HEAP32[(e|0)>>2]|0)!=(HEAP32[(e+4|0)>>2]|0))a=87;else var P=0,a=102;break;case 87:a=48<=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?88:92;break;case 88:var Q=HEAP8[HEAP32[(e|0)>>2]]<<24>>24,a=10>(h|0)?89:90;break;case 89:var F=h,a=91;
break;case 90:F=10;a=91;break;case 91:if((Q|0)<(F+48|0))var J=1,a=101;else a=92;break;case 92:a=10<(h|0)?93:99;break;case 93:a=97<=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?94:95;break;case 94:if(102>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0))var T=1,a=98;else a=95;break;case 95:if(65<=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0))a=96;else var R=0,a=97;break;case 96:R=70>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0);a=97;break;case 97:T=R;a=98;break;case 98:var ja=T&1,a=100;break;case 99:ja=0;a=100;break;case 100:J=0!=(ja|0);
a=101;break;case 101:P=J;a=102;break;case 102:a=P?103:111;break;case 103:var da=(g|0)*(h|0),a=57>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?104:105;break;case 104:var W=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24)-48|0,a=109;break;case 105:a=70>=(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0)?106:107;break;case 106:var U=((HEAP8[HEAP32[(e|0)>>2]]<<24>>24)-65|0)+10|0,a=108;break;case 107:U=((HEAP8[HEAP32[(e|0)>>2]]<<24>>24)-97|0)+10|0;a=108;break;case 108:W=U;a=109;break;case 109:g=da+(W|0)&-1;a=110;break;case 110:a=e|0;HEAP32[a>>
2]=HEAP32[a>>2]+1|0;a=e+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=86;break;case 111:a=Math_pow(h|0,(g|0)*n);k*=a;a=112;break;case 112:HEAPF64[HEAP32[(f+4|0)>>2]>>3]=k;d=47;a=113;break;case 113:return d;default:assert(0,"bad label: "+a)}}
function _LexGetWord(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e,f,g,h;e=b;f=c;g=HEAP32[(e|0)>>2];a=2;break;case 2:a=e|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=e+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=3;break;case 3:if((HEAP32[(e|0)>>2]|0)!=(HEAP32[(e+4|0)>>2]|0))a=4;else var l=0,a=7;break;case 4:if(0!=(_isalnum(HEAP8[HEAP32[(e|0)>>2]]<<24>>24)|0))var k=1,a=6;else a=5;break;case 5:k=95==(HEAP8[HEAP32[(e|0)>>2]]<<24>>24|0);a=6;break;case 6:l=k;a=7;break;case 7:a=l?2:8;break;case 8:HEAP32[(f|0)>>2]=0;h=
_TableStrRegister2(g,HEAP32[(e|0)>>2]-g|0);HEAP32[HEAP32[(f+4|0)>>2]>>2]=h;a=h=_LexCheckReservedWord(HEAP32[HEAP32[(f+4|0)>>2]>>2]);a=83==(a|0)?10:84==(a|0)?9:11;break;case 9:HEAP32[(e+24|0)>>2]=1;a=12;break;case 10:HEAP32[(e+24|0)>>2]=2;a=12;break;case 11:a=12;break;case 12:a=0!=(h|0)?13:14;break;case 13:d=h;a=17;break;case 14:a=3==(HEAP32[(e+24|0)>>2]|0)?15:16;break;case 15:HEAP32[(e+24|0)>>2]=4;a=16;break;case 16:d=45;a=17;break;case 17:return d;default:assert(0,"bad label: "+a)}}
function _LexUnEscapeCharacterConstant(b,c,a,d){c=0;for(c=1;;)switch(c){case 1:var e,f,g,h,l;e=b;f=a;g=d;c=57>=(f&255|0)?2:3;break;case 2:var k=(f&255)-48|0;c=7;break;case 3:c=70>=(f&255|0)?4:5;break;case 4:var m=((f&255)-65|0)+10|0;c=6;break;case 5:m=((f&255)-97|0)+10|0;c=6;break;case 6:k=m;c=7;break;case 7:h=k&255;l=0;c=8;break;case 8:c=48<=(HEAP8[HEAP32[e>>2]]<<24>>24|0)?9:13;break;case 9:var n=HEAP8[HEAP32[e>>2]]<<24>>24;c=10>(g|0)?10:11;break;case 10:var q=g;c=12;break;case 11:q=10;c=12;break;
case 12:c=(n|0)<(q+48|0)?19:13;break;case 13:c=10<(g|0)?14:18;break;case 14:c=97<=(HEAP8[HEAP32[e>>2]]<<24>>24|0)?15:16;break;case 15:c=102>=(HEAP8[HEAP32[e>>2]]<<24>>24|0)?19:16;break;case 16:if(65<=(HEAP8[HEAP32[e>>2]]<<24>>24|0))c=17;else{var p=0;c=20}break;case 17:70>=(HEAP8[HEAP32[e>>2]]<<24>>24|0)?c=19:(p=0,c=20);break;case 18:p=0;c=20;break;case 19:p=2>(l|0);c=20;break;case 20:c=p?21:29;break;case 21:var s=Math_imul(h&255,g)|0;c=57>=(HEAP8[HEAP32[e>>2]]<<24>>24|0)?22:23;break;case 22:var t=
(HEAP8[HEAP32[e>>2]]<<24>>24)-48|0;c=27;break;case 23:c=70>=(HEAP8[HEAP32[e>>2]]<<24>>24|0)?24:25;break;case 24:var r=((HEAP8[HEAP32[e>>2]]<<24>>24)-65|0)+10|0;c=26;break;case 25:r=((HEAP8[HEAP32[e>>2]]<<24>>24)-97|0)+10|0;c=26;break;case 26:t=r;c=27;break;case 27:h=(s+t|0)&255;c=28;break;case 28:l=l+1|0;c=e;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=8;break;case 29:return h;default:assert(0,"bad label: "+c)}}
function _LexUnEscapeCharacter(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e,f,g;e=b;f=c;a=2;break;case 2:if((HEAP32[e>>2]|0)!=(f|0))a=3;else var h=0,a=6;break;case 3:92==(HEAP8[HEAP32[e>>2]]<<24>>24|0)?a=4:(h=0,a=6);break;case 4:(HEAP32[e>>2]+1|0)!=(f|0)?a=5:(h=0,a=6);break;case 5:h=10==(HEAP8[HEAP32[e>>2]+1|0]<<24>>24|0);a=6;break;case 6:a=h?7:8;break;case 7:a=e;HEAP32[a>>2]=HEAP32[a>>2]+2|0;a=2;break;case 8:a=9;break;case 9:if((HEAP32[e>>2]|0)!=(f|0))a=10;else var l=0,a=15;break;case 10:92==
(HEAP8[HEAP32[e>>2]]<<24>>24|0)?a=11:(l=0,a=15);break;case 11:(HEAP32[e>>2]+1|0)!=(f|0)?a=12:(l=0,a=15);break;case 12:(HEAP32[e>>2]+2|0)!=(f|0)?a=13:(l=0,a=15);break;case 13:13==(HEAP8[HEAP32[e>>2]+1|0]<<24>>24|0)?a=14:(l=0,a=15);break;case 14:l=10==(HEAP8[HEAP32[e>>2]+2|0]<<24>>24|0);a=15;break;case 15:a=l?16:17;break;case 16:a=e;HEAP32[a>>2]=HEAP32[a>>2]+3|0;a=9;break;case 17:a=(HEAP32[e>>2]|0)==(f|0)?18:19;break;case 18:d=92;a=37;break;case 19:a=92==(HEAP8[HEAP32[e>>2]]<<24>>24|0)?20:36;break;
case 20:a=e;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=(HEAP32[e>>2]|0)==(f|0)?21:22;break;case 21:d=92;a=37;break;case 22:g=e;a=HEAP32[g>>2];HEAP32[g>>2]=a+1|0;g=HEAP8[a];switch(g&255|0){case 92:a=23;break;case 39:a=24;break;case 34:a=25;break;case 97:a=26;break;case 98:a=27;break;case 102:a=28;break;case 110:a=29;break;case 114:a=30;break;case 116:a=31;break;case 118:a=32;break;case 48:case 49:case 50:case 51:a=33;break;case 120:a=34;break;default:a=35}break;case 23:d=92;a=37;break;case 24:d=39;a=37;break;
case 25:d=34;a=37;break;case 26:d=7;a=37;break;case 27:d=8;a=37;break;case 28:d=12;a=37;break;case 29:d=10;a=37;break;case 30:d=13;a=37;break;case 31:d=9;a=37;break;case 32:d=11;a=37;break;case 33:d=_LexUnEscapeCharacterConstant(e,f,g,8);a=37;break;case 34:d=_LexUnEscapeCharacterConstant(e,f,48,16);a=37;break;case 35:d=g;a=37;break;case 36:d=e;a=HEAP32[d>>2];HEAP32[d>>2]=a+1|0;d=HEAP8[a];a=37;break;case 37:return d;default:assert(0,"bad label: "+a)}}
function _LexGetStringConstant(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l,k,m,n,q,p,s;g=b;h=c;l=a;k=0;m=HEAP32[(g|0)>>2];d=2;break;case 2:if((HEAP32[(g|0)>>2]|0)!=(HEAP32[(g+4|0)>>2]|0))d=3;else var t=0,d=6;break;case 3:if((HEAP8[HEAP32[(g|0)>>2]]<<24>>24|0)!=(l<<24>>24|0))var r=1,d=5;else d=4;break;case 4:r=0!=(k|0);d=5;break;case 5:t=r;d=6;break;case 6:d=t?7:19;break;case 7:d=0!=(k|0)?8:15;break;case 8:d=13==(HEAP8[HEAP32[(g|0)>>2]]<<
24>>24|0)?9:11;break;case 9:d=(HEAP32[(g|0)>>2]+1|0)!=(HEAP32[(g+4|0)>>2]|0)?10:11;break;case 10:d=g|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=11;break;case 11:d=10==(HEAP8[HEAP32[(g|0)>>2]]<<24>>24|0)?12:14;break;case 12:d=(HEAP32[(g|0)>>2]+1|0)!=(HEAP32[(g+4|0)>>2]|0)?13:14;break;case 13:d=g+12|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=g|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;HEAP32[(g+16|0)>>2]=0;d=g+28|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=14;break;case 14:k=0;d=18;break;case 15:d=92==(HEAP8[HEAP32[(g|0)>>2]]<<24>>24|0)?
16:17;break;case 16:k=1;d=17;break;case 17:d=18;break;case 18:d=g|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=g+16|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=2;break;case 19:n=HEAP32[(g|0)>>2];q=_HeapAllocStack(n-m|0);d=0==(q|0)?20:21;break;case 20:_LexFail(g,2504,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=21;break;case 21:p=q;HEAP32[(g|0)>>2]=m;d=22;break;case 22:d=(HEAP32[(g|0)>>2]|0)!=(n|0)?23:24;break;case 23:var d=_LexUnEscapeCharacter(g|
0,n),u=p;p=u+1|0;HEAP8[u]=d;d=22;break;case 24:s=_TableStrRegister2(q,p-q|0);_HeapPopStack(q,n-m|0);d=_VariableStringLiteralGet(s);d=0==(d|0)?25:26;break;case 25:d=_VariableAllocValueAndData(0,0,0,0,1);HEAP32[(d|0)>>2]=HEAP32[4788];HEAP32[(d+4|0)>>2]=s;_VariableStringLiteralDefine(s,d);d=26;break;case 26:HEAP32[(h|0)>>2]=HEAP32[4784];HEAP32[HEAP32[(h+4|0)>>2]>>2]=s;d=(HEAP8[HEAP32[(g|0)>>2]]<<24>>24|0)==(l<<24>>24|0)?27:28;break;case 27:d=g|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=g+16|0;HEAP32[d>>2]=HEAP32[d>>
2]+1|0;d=28;break;case 28:return STACKTOP=f,48;default:assert(0,"bad label: "+d)}}
function _LexGetCharacterConstant(b,c){var a=0,d=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f;f=b;a=c;HEAP32[(a|0)>>2]=19088;var g=_LexUnEscapeCharacter(f|0,HEAP32[(f+4|0)>>2]);HEAP8[HEAP32[(a+4|0)>>2]]=g;a=(HEAP32[(f|0)>>2]|0)!=(HEAP32[(f+4|0)>>2]|0)?2:4;break;case 2:a=39!=(HEAP8[HEAP32[(f|0)>>2]]<<24>>24|0)?3:4;break;case 3:_LexFail(f,9576,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=
d;a=4;break;case 4:return d=f|0,HEAP32[d>>2]=HEAP32[d>>2]+1|0,f=f+16|0,HEAP32[f>>2]=HEAP32[f>>2]+1|0,STACKTOP=e,49;default:assert(0,"bad label: "+a)}}
function _LexSkipComment(b,c,a){a=0;for(a=1;;)switch(a){case 1:var d;d=b;a=42==(c<<24>>24|0)?2:14;break;case 2:a=3;break;case 3:if((HEAP32[(d|0)>>2]|0)!=(HEAP32[(d+4|0)>>2]|0))a=4;else{var e=0;a=7}break;case 4:if(42!=(HEAP8[HEAP32[(d|0)>>2]-1|0]<<24>>24|0)){var f=1;a=6}else a=5;break;case 5:f=47!=(HEAP8[HEAP32[(d|0)>>2]]<<24>>24|0);a=6;break;case 6:e=f;a=7;break;case 7:a=e?8:11;break;case 8:a=10==(HEAP8[HEAP32[(d|0)>>2]]<<24>>24|0)?9:10;break;case 9:a=d+28|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=10;break;
case 10:a=d|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=d+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=3;break;case 11:a=(HEAP32[(d|0)>>2]|0)!=(HEAP32[(d+4|0)>>2]|0)?12:13;break;case 12:a=d|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=d+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=13;break;case 13:HEAP32[(d+24|0)>>2]=0;a=20;break;case 14:a=15;break;case 15:if((HEAP32[(d|0)>>2]|0)!=(HEAP32[(d+4|0)>>2]|0))a=16;else{var g=0;a=17}break;case 16:g=10!=(HEAP8[HEAP32[(d|0)>>2]]<<24>>24|0);a=17;break;case 17:a=g?18:19;break;case 18:a=d|0;HEAP32[a>>
2]=HEAP32[a>>2]+1|0;a=d+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=15;break;case 19:a=20;break;case 20:return;default:assert(0,"bad label: "+a)}}
function _LexScanGetToken(b,c){var a=0,d=0,e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f,g,h,l,k,m=e;g=b;h=c;HEAP32[m>>2]=0;a=0<(HEAP32[(g+28|0)>>2]|0)?2:3;break;case 2:f=g+28|0;HEAP32[f>>2]=HEAP32[f>>2]-1|0;f=94;a=138;break;case 3:a=4;break;case 4:HEAP32[h>>2]=15504;a=5;break;case 5:if((HEAP32[(g|0)>>2]|0)!=(HEAP32[(g+4|0)>>2]|0))a=6;else var n=0,a=7;break;case 6:n=0!=(_isspace(HEAP8[HEAP32[(g|0)>>2]]<<24>>24)|0);a=7;break;case 7:a=n?8:18;
break;case 8:a=10==(HEAP8[HEAP32[(g|0)>>2]]<<24>>24|0)?9:10;break;case 9:f=g+12|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=g|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;HEAP32[(g+24|0)>>2]=0;HEAP32[(g+16|0)>>2]=0;f=94;a=138;break;case 10:a=2==(HEAP32[(g+24|0)>>2]|0)?12:11;break;case 11:a=3==(HEAP32[(g+24|0)>>2]|0)?12:13;break;case 12:HEAP32[(g+24|0)>>2]=3;a=16;break;case 13:a=4==(HEAP32[(g+24|0)>>2]|0)?14:15;break;case 14:HEAP32[(g+24|0)>>2]=0;a=15;break;case 15:a=16;break;case 16:a=17;break;case 17:a=g|0;HEAP32[a>>2]=
HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=5;break;case 18:a=(HEAP32[(g|0)>>2]|0)==(HEAP32[(g+4|0)>>2]|0)?20:19;break;case 19:a=0==(HEAP8[HEAP32[(g|0)>>2]]<<24>>24|0)?20:21;break;case 20:f=93;a=138;break;case 21:l=HEAP8[HEAP32[(g|0)>>2]];a=26>((l<<24>>24|32)-97|0)>>>0?24:22;break;case 22:a=95==(l<<24>>24|0)?24:23;break;case 23:a=35==(l<<24>>24|0)?24:25;break;case 24:f=_LexGetWord(g,HEAP32[h>>2]);a=138;break;case 25:a=10>((l<<24>>24)-48|0)>>>0?26:27;break;case 26:f=_LexGetNumber(g,HEAP32[h>>
2]);a=138;break;case 27:a=(HEAP32[(g|0)>>2]+1|0)!=(HEAP32[(g+4|0)>>2]|0)?28:29;break;case 28:var q=HEAP8[HEAP32[(g|0)>>2]+1|0]<<24>>24,a=30;break;case 29:q=0;a=30;break;case 30:k=q&255;a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;switch(l<<24>>24|0){case 124:a=106;break;case 123:a=113;break;case 125:a=114;break;case 91:a=115;break;case 93:a=116;break;case 33:a=117;break;case 94:a=121;break;case 126:a=125;break;case 44:a=126;break;case 46:a=127;break;case 63:a=132;break;
case 58:a=133;break;case 34:a=31;break;case 39:a=32;break;case 40:a=33;break;case 41:a=37;break;case 61:a=38;break;case 43:a=42;break;case 45:a=49;break;case 42:a=59;break;case 47:a=63;break;case 37:a=71;break;case 60:a=75;break;case 62:a=88;break;case 59:a=98;break;case 38:a=99;break;default:a=134}break;case 31:a=_LexGetStringConstant(g,HEAP32[h>>2],34);HEAP32[m>>2]=a;a=135;break;case 32:a=_LexGetCharacterConstant(g,HEAP32[h>>2]);HEAP32[m>>2]=a;a=135;break;case 33:a=4==(HEAP32[(g+24|0)>>2]|0)?34:
35;break;case 34:HEAP32[m>>2]=92;a=36;break;case 35:HEAP32[m>>2]=43;a=36;break;case 36:HEAP32[(g+24|0)>>2]=0;a=135;break;case 37:HEAP32[m>>2]=44;a=135;break;case 38:a=61==(k<<24>>24|0)?39:40;break;case 39:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=20;a=41;break;case 40:HEAP32[m>>2]=2;a=41;break;case 41:a=135;break;case 42:a=61==(k<<24>>24|0)?43:44;break;case 43:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=3;a=
48;break;case 44:a=43==(k<<24>>24|0)?45:46;break;case 45:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=33;a=47;break;case 46:HEAP32[m>>2]=28;a=47;break;case 47:a=48;break;case 48:a=135;break;case 49:a=61==(k<<24>>24|0)?50:51;break;case 50:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=4;a=58;break;case 51:a=62==(k<<24>>24|0)?52:53;break;case 52:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+
1|0;HEAP32[m>>2]=42;a=57;break;case 53:a=45==(k<<24>>24|0)?54:55;break;case 54:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=34;a=56;break;case 55:HEAP32[m>>2]=29;a=56;break;case 56:a=57;break;case 57:a=58;break;case 58:a=135;break;case 59:a=61==(k<<24>>24|0)?60:61;break;case 60:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=5;a=62;break;case 61:HEAP32[m>>2]=30;a=62;break;case 62:a=135;break;case 63:a=47==(k<<24>>24|
0)?65:64;break;case 64:a=42==(k<<24>>24|0)?65:66;break;case 65:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_LexSkipComment(g,k,m);a=70;break;case 66:a=61==(k<<24>>24|0)?67:68;break;case 67:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=6;a=69;break;case 68:HEAP32[m>>2]=31;a=69;break;case 69:a=70;break;case 70:a=135;break;case 71:a=61==(k<<24>>24|0)?72:73;break;case 72:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=
HEAP32[a>>2]+1|0;HEAP32[m>>2]=7;a=74;break;case 73:HEAP32[m>>2]=32;a=74;break;case 74:a=135;break;case 75:a=1==(HEAP32[(g+24|0)>>2]|0)?76:77;break;case 76:a=_LexGetStringConstant(g,HEAP32[h>>2],62);HEAP32[m>>2]=a;a=87;break;case 77:a=61==(k<<24>>24|0)?78:79;break;case 78:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=24;a=86;break;case 79:a=60==(k<<24>>24|0)?80:84;break;case 80:a=61==(HEAP8[HEAP32[(g|0)>>2]+1|0]<<24>>24|0)?81:82;break;case 81:a=g|0;HEAP32[a>>
2]=HEAP32[a>>2]+2|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+2|0;HEAP32[m>>2]=8;a=83;break;case 82:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=26;a=83;break;case 83:a=85;break;case 84:HEAP32[m>>2]=22;a=85;break;case 85:a=86;break;case 86:a=87;break;case 87:a=135;break;case 88:a=61==(k<<24>>24|0)?89:90;break;case 89:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=25;a=97;break;case 90:a=62==(k<<24>>24|0)?91:95;break;case 91:a=
61==(HEAP8[HEAP32[(g|0)>>2]+1|0]<<24>>24|0)?92:93;break;case 92:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+2|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+2|0;HEAP32[m>>2]=9;a=94;break;case 93:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=27;a=94;break;case 94:a=96;break;case 95:HEAP32[m>>2]=23;a=96;break;case 96:a=97;break;case 97:a=135;break;case 98:HEAP32[m>>2]=50;a=135;break;case 99:a=61==(k<<24>>24|0)?100:101;break;case 100:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>
2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=10;a=105;break;case 101:a=38==(k<<24>>24|0)?102:103;break;case 102:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=16;a=104;break;case 103:HEAP32[m>>2]=19;a=104;break;case 104:a=105;break;case 105:a=135;break;case 106:a=61==(k<<24>>24|0)?107:108;break;case 107:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=11;a=112;break;case 108:a=124==(k<<24>>24|0)?109:110;break;case 109:a=g|0;HEAP32[a>>
2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=15;a=111;break;case 110:HEAP32[m>>2]=17;a=111;break;case 111:a=112;break;case 112:a=135;break;case 113:HEAP32[m>>2]=52;a=135;break;case 114:HEAP32[m>>2]=53;a=135;break;case 115:HEAP32[m>>2]=39;a=135;break;case 116:HEAP32[m>>2]=40;a=135;break;case 117:a=61==(k<<24>>24|0)?118:119;break;case 118:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=21;a=120;break;case 119:HEAP32[m>>2]=35;a=120;break;
case 120:a=135;break;case 121:a=61==(k<<24>>24|0)?122:123;break;case 122:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[m>>2]=12;a=124;break;case 123:HEAP32[m>>2]=18;a=124;break;case 124:a=135;break;case 125:HEAP32[m>>2]=36;a=135;break;case 126:HEAP32[m>>2]=1;a=135;break;case 127:a=46==(k<<24>>24|0)?128:130;break;case 128:a=46==(HEAP8[HEAP32[(g|0)>>2]+1|0]<<24>>24|0)?129:130;break;case 129:a=g|0;HEAP32[a>>2]=HEAP32[a>>2]+2|0;a=g+16|0;HEAP32[a>>2]=HEAP32[a>>2]+2|
0;HEAP32[m>>2]=51;a=131;break;case 130:HEAP32[m>>2]=41;a=131;break;case 131:a=135;break;case 132:HEAP32[m>>2]=13;a=135;break;case 133:HEAP32[m>>2]=14;a=135;break;case 134:a=l<<24>>24;_LexFail(g,7160,(d=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=a,d));STACKTOP=d;a=135;break;case 135:a=136;break;case 136:a=0==(HEAP32[m>>2]|0)?4:137;break;case 137:f=HEAP32[m>>2];a=138;break;case 138:return d=f,STACKTOP=e,d;default:assert(0,"bad label: "+a)}}
function _LexTokenSize(b){for(var c=0,c=1;;)switch(c){case 1:var a;switch(b|0){case 45:case 48:c=2;break;case 46:c=3;break;case 49:c=4;break;case 47:c=5;break;default:c=6}break;case 2:a=4;c=7;break;case 3:a=4;c=7;break;case 4:a=1;c=7;break;case 5:a=8;c=7;break;case 6:a=0;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _LexTokenise(b,c){var a=0,d=0,e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f,g,h,l,k=e,m,n,q,p,s,t;f=b;g=c;m=0;q=((HEAP32[(f+4|0)>>2]-HEAP32[(f|0)>>2]|0)<<2)+16|0;s=p=_HeapAllocStack(q);t=0;a=0==(p|0)?2:3;break;case 2:_LexFail(f,2504,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=3;break;case 3:a=4;break;case 4:h=_LexScanGetToken(f,k);HEAP8[s]=h&255;s=s+1|
0;m=m+1|0;HEAP8[s]=t&255;s=s+1|0;m=m+1|0;n=_LexTokenSize(h);a=0<(n|0)?5:6;break;case 5:var a=s,r=HEAP32[(HEAP32[k>>2]+4|0)>>2],u=n;assert(0===u%1);_memcpy(a,r,u)|0;s=s+n|0;m=m+n|0;a=6;break;case 6:t=HEAP32[(f+16|0)>>2];a=7;break;case 7:a=93!=(h|0)?4:8;break;case 8:l=_HeapAllocMem(m);a=0==(l|0)?9:10;break;case 9:_LexFail(f,2504,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=10;break;case 10:a=(q|0)>=(m|0)?12:11;break;case 11:throw ___assert_fail(5440,
5208,550,12376),"Reached an unreachable!";case 12:a=l;r=p;u=m;assert(0===u%1);_memcpy(a,r,u)|0;_HeapPopStack(p,q);a=0!=(g|0)?13:14;break;case 13:HEAP32[g>>2]=m;a=14;break;case 14:return d=l,STACKTOP=e,d;default:assert(0,"bad label: "+a)}}
function _LexAnalyse(b,c,a,d){var e=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(e|0)>>2]=c;HEAP32[(e+4|0)>>2]=c+a|0;HEAP32[(e+12|0)>>2]=1;HEAP32[(e+8|0)>>2]=b;HEAP32[(e+24|0)>>2]=0;HEAP32[(e+28|0)>>2]=0;HEAP32[(e+16|0)>>2]=1;HEAP32[(e+20|0)>>2]=c;b=_LexTokenise(e,d);STACKTOP=e;return b}
function _LexInitParser(b,c,a,d,e){HEAP32[(b|0)>>2]=a;HEAP16[(b+8|0)>>1]=1;HEAP32[(b+4|0)>>2]=d;HEAP32[(b+12|0)>>2]=0!=(e|0)?0:1;HEAP32[(b+16|0)>>2]=0;HEAP16[(b+24|0)>>1]=0;HEAP16[(b+26|0)>>1]=0;HEAP16[(b+10|0)>>1]=0;HEAP32[(b+28|0)>>2]=c}
function _LexGetRawToken(b,c,a){var d=0,e=STACKTOP;STACKTOP=STACKTOP+264|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var f,g,h,l,k,m,n,q=e,p,s=e+256,t;g=b;h=c;l=a;n=k=0;d=2;break;case 2:d=0==(HEAP32[(g|0)>>2]|0)?3:5;break;case 3:d=0!=(HEAP32[4598]|0)?4:5;break;case 4:HEAP32[(g|0)>>2]=HEAP32[(HEAP32[4598]+4|0)>>2];d=5;break;case 5:d=(HEAP32[(g+4|0)>>2]|0)!=(HEAP32[4492]|0)?7:6;break;case 6:d=0!=(HEAP32[4598]|0)?7:11;break;case 7:d=8;break;case 8:k=d=HEAP8[HEAP32[(g|0)>>2]]&255;
d=94==(d|0)?9:10;break;case 9:d=g+8|0;HEAP16[d>>1]=HEAP16[d>>1]+1&65535;d=g|0;HEAP32[d>>2]=HEAP32[d>>2]+2|0;d=8;break;case 10:d=11;break;case 11:d=(HEAP32[(g+4|0)>>2]|0)==(HEAP32[4492]|0)?12:39;break;case 12:d=0==(HEAP32[4598]|0)?14:13;break;case 13:d=93==(k|0)?14:39;break;case 14:d=0==(HEAP32[4598]|0)?16:15;break;case 15:d=(HEAP32[(g|0)>>2]|0)==(HEAP32[(HEAP32[4596]+4|0)>>2]+(HEAP32[(HEAP32[4596]+8|0)>>2]-2|0)|0)?16:25;break;case 16:d=0!=(HEAP32[4580]|0)?17:18;break;case 17:n=3672;HEAP32[4580]=0;
d=19;break;case 18:n=2424;d=19;break;case 19:d=0==(_PlatformGetLine(q|0,256,n)|0)?20:21;break;case 20:f=93;d=65;break;case 21:p=HEAP32[4492];t=q|0;d=_strlen(q|0);p=_LexAnalyse(p,t,d,s);t=_VariableAlloc(g,12,1);HEAP32[(t+4|0)>>2]=p;HEAP32[(t+8|0)>>2]=HEAP32[s>>2];d=0==(HEAP32[4598]|0)?22:23;break;case 22:HEAP32[4598]=t;HEAP16[(g+8|0)>>1]=1;HEAP16[(g+10|0)>>1]=0;d=24;break;case 23:HEAP32[(HEAP32[4596]|0)>>2]=t;d=24;break;case 24:HEAP32[4596]=t;HEAP32[4600]=t;HEAP32[(g|0)>>2]=p;d=38;break;case 25:d=
(HEAP32[(g|0)>>2]|0)!=(HEAP32[(HEAP32[4600]+4|0)>>2]+(HEAP32[(HEAP32[4600]+8|0)>>2]-2|0)|0)?26:33;break;case 26:HEAP32[4600]=HEAP32[4598];d=27;break;case 27:d=(HEAP32[(g|0)>>2]|0)!=(HEAP32[(HEAP32[4600]+4|0)>>2]+(HEAP32[(HEAP32[4600]+8|0)>>2]-2|0)|0)?28:32;break;case 28:d=0!=(HEAP32[(HEAP32[4600]|0)>>2]|0)?30:29;break;case 29:throw ___assert_fail(1488,5208,670,12392),"Reached an unreachable!";case 30:d=31;break;case 31:HEAP32[4600]=HEAP32[(HEAP32[4600]|0)>>2];d=27;break;case 32:d=33;break;case 33:d=
0!=(HEAP32[4600]|0)?35:34;break;case 34:throw ___assert_fail(920,5208,673,12392),"Reached an unreachable!";case 35:HEAP32[4600]=HEAP32[(HEAP32[4600]|0)>>2];d=0!=(HEAP32[4600]|0)?37:36;break;case 36:throw ___assert_fail(920,5208,675,12392),"Reached an unreachable!";case 37:HEAP32[(g|0)>>2]=HEAP32[(HEAP32[4600]+4|0)>>2];d=38;break;case 38:k=HEAP8[HEAP32[(g|0)>>2]]&255;d=39;break;case 39:d=40;break;case 40:d=(HEAP32[(g+4|0)>>2]|0)==(HEAP32[4492]|0)?41:42;break;case 41:if(93==(k|0))var r=1,d=43;else d=
42;break;case 42:r=94==(k|0);d=43;break;case 43:d=r?2:44;break;case 44:HEAP16[(g+10|0)>>1]=HEAP8[HEAP32[(g|0)>>2]+1|0]&255;m=_LexTokenSize(k);d=0<(m|0)?45:57;break;case 45:d=0!=(h|0)?46:54;break;case 46:switch(k|0){case 48:d=47;break;case 45:d=48;break;case 46:d=49;break;case 49:d=50;break;case 47:d=51;break;default:d=52}break;case 47:HEAP32[3876]=HEAP32[4784];d=53;break;case 48:HEAP32[3876]=0;d=53;break;case 49:HEAP32[3876]=18408;d=53;break;case 50:HEAP32[3876]=19088;d=53;break;case 51:HEAP32[3876]=
19032;d=53;break;case 52:d=53;break;case 53:var d=HEAP32[3877],u=HEAP32[(g|0)>>2]+2|0,w=m;assert(0===w%1);_memcpy(d,u,w)|0;HEAP8[15516]=0;HEAP8[15517]=0;HEAP8[15518]=0;HEAP32[3878]=0;HEAP32[h>>2]=15504;d=54;break;case 54:d=0!=(l|0)?55:56;break;case 55:d=g|0;HEAP32[d>>2]=HEAP32[d>>2]+(m+2|0)|0;d=56;break;case 56:d=61;break;case 57:d=0!=(l|0)?58:60;break;case 58:d=93!=(k|0)?59:60;break;case 59:d=g|0;HEAP32[d>>2]=HEAP32[d>>2]+2|0;d=60;break;case 60:d=61;break;case 61:d=0<=k>>>0?62:63;break;case 62:d=
95>=k>>>0?64:63;break;case 63:throw ___assert_fail(456,5208,722,12392),"Reached an unreachable!";case 64:f=k;d=65;break;case 65:return b=f,STACKTOP=e,b;default:assert(0,"bad label: "+d)}}function _LexHashIncPos(b,c){for(var a=0,a=1;;)switch(a){case 1:var d;d=b;a=0!=(c|0)?3:2;break;case 2:_LexGetRawToken(d,0,1);a=3;break;case 3:return;default:assert(0,"bad label: "+a)}}
function _LexHashIfdef(b,c){var a=0,d=0,e=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f,g,h=e,l=e+8,k;f=b;g=c;a=45!=(_LexGetRawToken(f,h,1)|0)?2:3;break;case 2:_ProgramFail(f,12064,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=3;break;case 3:k=_TableGet(18544,HEAP32[HEAP32[(HEAP32[h>>2]+4|0)>>2]>>2],l,0,0,0);a=(HEAP16[(f+26|0)>>1]<<16>>16|0)==(HEAP16[(f+24|0)>>1]<<
16>>16|0)?4:9;break;case 4:a=0!=(k|0)?5:6;break;case 5:a=0!=(g|0)?6:8;break;case 6:a=0!=(k|0)?9:7;break;case 7:a=0!=(g|0)?8:9;break;case 8:a=f+26|0;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;a=9;break;case 9:d=f+24|0;HEAP16[d>>1]=HEAP16[d>>1]+1&65535;STACKTOP=e;return;default:assert(0,"bad label: "+a)}}
function _LexHashIf(b){var c=0,a=0,d=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var e,f=d,g=d+8,h=d+16,l;e=b;l=_LexGetRawToken(e,f,1);c=45==(l|0)?2:7;break;case 2:c=0!=(_TableGet(18544,HEAP32[HEAP32[(HEAP32[f>>2]+4|0)>>2]>>2],g,0,0,0)|0)?4:3;break;case 3:c=HEAP32[HEAP32[(HEAP32[f>>2]+4|0)>>2]>>2];_ProgramFail(e,11712,(a=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=c,a));STACKTOP=a;c=4;break;case 4:c=10!=(HEAP32[(HEAP32[(HEAP32[g>>
2]|0)>>2]|0)>>2]|0)?5:6;break;case 5:_ProgramFail(e,11352,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=6;break;case 6:_ParserCopy(h,HEAP32[(HEAP32[g>>2]+4|0)>>2]+8|0);l=_LexGetRawToken(h,f,1);c=7;break;case 7:c=49!=(l|0)?8:9;break;case 8:_ProgramFail(e,11352,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=9;break;case 9:c=(HEAP16[(e+26|0)>>
1]<<16>>16|0)==(HEAP16[(e+24|0)>>1]<<16>>16|0)?10:12;break;case 10:c=0!=(HEAP8[HEAP32[(HEAP32[f>>2]+4|0)>>2]]&255|0)?11:12;break;case 11:c=e+26|0;HEAP16[c>>1]=HEAP16[c>>1]+1&65535;c=12;break;case 12:b=e+24|0;HEAP16[b>>1]=HEAP16[b>>1]+1&65535;STACKTOP=d;return;default:assert(0,"bad label: "+c)}}
function _LexHashElse(b){var c=0,a=0,d=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var e;e=b;c=(HEAP16[(e+26|0)>>1]<<16>>16|0)==((HEAP16[(e+24|0)>>1]<<16>>16)-1|0)?2:3;break;case 2:c=e+26|0;HEAP16[c>>1]=HEAP16[c>>1]+1&65535;c=8;break;case 3:c=(HEAP16[(e+26|0)>>1]<<16>>16|0)==(HEAP16[(e+24|0)>>1]<<16>>16|0)?4:7;break;case 4:c=0==(HEAP16[(e+24|0)>>1]<<16>>16|0)?5:6;break;case 5:_ProgramFail(e,11008,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=6;break;case 6:c=e+26|0;HEAP16[c>>1]=HEAP16[c>>1]-1&65535;c=7;break;case 7:c=8;break;case 8:STACKTOP=d;return;default:assert(0,"bad label: "+c)}}
function _LexHashEndif(b){var c=0,a=0,d=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var e;e=b;c=0==(HEAP16[(e+24|0)>>1]<<16>>16|0)?2:3;break;case 2:_ProgramFail(e,10616,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=3;break;case 3:c=e+24|0;HEAP16[c>>1]=HEAP16[c>>1]-1&65535;c=(HEAP16[(e+26|0)>>1]<<16>>16|0)>(HEAP16[(e+24|0)>>1]<<16>>16|0)?4:5;break;case 4:HEAP16[(e+26|0)>>1]=HEAP16[(e+24|0)>>
1];c=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+c)}}
function _LexGetToken(b,c,a){for(var d=0,d=1;;)switch(d){case 1:var e,f,g,h,l,k;e=b;f=c;g=a;d=2;break;case 2:k=1;h=_LexGetRawToken(e,f,g);switch(h|0){case 86:d=3;break;case 87:d=4;break;case 85:d=5;break;case 88:d=6;break;case 89:d=7;break;default:d=8}break;case 3:_LexHashIncPos(e,g);_LexHashIfdef(e,0);d=9;break;case 4:_LexHashIncPos(e,g);_LexHashIfdef(e,1);d=9;break;case 5:_LexHashIncPos(e,g);_LexHashIf(e);d=9;break;case 6:_LexHashIncPos(e,g);_LexHashElse(e);d=9;break;case 7:_LexHashIncPos(e,g);
_LexHashEndif(e);d=9;break;case 8:k=0;d=9;break;case 9:d=(HEAP16[(e+26|0)>>1]<<16>>16|0)<(HEAP16[(e+24|0)>>1]<<16>>16|0)?10:11;break;case 10:if(93!=(h|0))var m=1,d=12;else d=11;break;case 11:m=0!=(k|0);d=12;break;case 12:l=m&1;d=0!=(g|0)?15:13;break;case 13:d=0!=(l|0)?14:15;break;case 14:_LexGetRawToken(e,0,1);d=15;break;case 15:d=16;break;case 16:d=0!=(l|0)?2:17;break;case 17:return h;default:assert(0,"bad label: "+d)}}function _LexRawPeekToken(b){return HEAP8[HEAP32[(b|0)>>2]]&255}
function _LexToEndOfLine(b){for(var c=0,c=1;;)switch(c){case 1:var a,d;a=b;c=2;break;case 2:d=HEAP8[HEAP32[(a|0)>>2]]&255;c=94==(d|0)?4:3;break;case 3:c=93==(d|0)?4:5;break;case 4:return;case 5:_LexGetRawToken(a,0,1);c=6;break;case 6:c=2;break;default:assert(0,"bad label: "+c)}}
function _LexCopyTokens(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e,f,g,h,l,k;d=b;e=c;f=0;h=HEAP32[(d|0)>>2];a=0==(HEAP32[4598]|0)?2:3;break;case 2:f=HEAP32[(e|0)>>2]-HEAP32[(d|0)>>2]|0;var a=l=_VariableAlloc(d,f+2|0,1),m=HEAP32[(d|0)>>2],n=f;assert(0===n%1);_memcpy(a,m,n)|0;a=36;break;case 3:HEAP32[4600]=HEAP32[4598];a=4;break;case 4:if(0!=(HEAP32[4600]|0))a=5;else var q=0,a=8;break;case 5:if(h>>>0<(HEAP32[(HEAP32[4600]+4|0)>>2]|0)>>>0)var p=1,a=7;else a=6;break;case 6:p=h>>>0>=(HEAP32[(HEAP32[4600]+
4|0)>>2]+HEAP32[(HEAP32[4600]+8|0)>>2]|0)>>>0;a=7;break;case 7:q=p;a=8;break;case 8:a=q?9:11;break;case 9:a=10;break;case 10:HEAP32[4600]=HEAP32[(HEAP32[4600]|0)>>2];a=4;break;case 11:a=HEAP32[(e|0)>>2]>>>0>=HEAP32[(d|0)>>2]>>>0?12:14;break;case 12:a=HEAP32[(e|0)>>2]>>>0<(HEAP32[(HEAP32[4600]+4|0)>>2]+HEAP32[(HEAP32[4600]+8|0)>>2]|0)>>>0?13:14;break;case 13:f=HEAP32[(e|0)>>2]-HEAP32[(d|0)>>2]|0;a=l=_VariableAlloc(d,f+2|0,1);m=HEAP32[(d|0)>>2];n=f;assert(0===n%1);_memcpy(a,m,n)|0;a=35;break;case 14:f=
(HEAP32[(HEAP32[4600]+4|0)>>2]+(HEAP32[(HEAP32[4600]+8|0)>>2]-2|0)|0)-h|0;k=HEAP32[(HEAP32[4600]|0)>>2];a=15;break;case 15:if(0!=(k|0))a=16;else var s=0,a=19;break;case 16:if(HEAP32[(e|0)>>2]>>>0<(HEAP32[(k+4|0)>>2]|0)>>>0)var t=1,a=18;else a=17;break;case 17:t=HEAP32[(e|0)>>2]>>>0>=(HEAP32[(k+4|0)>>2]+HEAP32[(k+8|0)>>2]|0)>>>0;a=18;break;case 18:s=t;a=19;break;case 19:a=s?20:22;break;case 20:f=f+(HEAP32[(k+8|0)>>2]-2|0)|0;a=21;break;case 21:k=HEAP32[(k|0)>>2];a=15;break;case 22:a=0!=(k|0)?24:23;
break;case 23:throw ___assert_fail(10240,5208,907,12408),"Reached an unreachable!";case 24:f=f+(HEAP32[(e|0)>>2]-(HEAP32[(k+4|0)>>2]|0)|0)|0;l=_VariableAlloc(d,f+2|0,1);g=(HEAP32[(HEAP32[4600]+4|0)>>2]+(HEAP32[(HEAP32[4600]+8|0)>>2]-2|0)|0)-h|0;k=l;a=h;m=g;assert(0===m%1);_memcpy(k,a,m)|0;g=l+g|0;k=HEAP32[(HEAP32[4600]|0)>>2];a=25;break;case 25:if(0!=(k|0))a=26;else var r=0,a=29;break;case 26:if(HEAP32[(e|0)>>2]>>>0<(HEAP32[(k+4|0)>>2]|0)>>>0)var u=1,a=28;else a=27;break;case 27:u=HEAP32[(e|0)>>2]>>>
0>=(HEAP32[(k+4|0)>>2]+HEAP32[(k+8|0)>>2]|0)>>>0;a=28;break;case 28:r=u;a=29;break;case 29:a=r?30:32;break;case 30:a=g;m=HEAP32[(k+4|0)>>2]|0;n=HEAP32[(k+8|0)>>2]-2|0;assert(0===n%1);_memcpy(a,m,n)|0;g=g+(HEAP32[(k+8|0)>>2]-2|0)|0;a=31;break;case 31:k=HEAP32[(k|0)>>2];a=25;break;case 32:a=0!=(k|0)?34:33;break;case 33:throw ___assert_fail(10240,5208,919,12408),"Reached an unreachable!";case 34:a=g;m=HEAP32[(k+4|0)>>2]|0;n=HEAP32[(e|0)>>2]-(HEAP32[(k+4|0)>>2]|0)|0;assert(0===n%1);_memcpy(a,m,n)|0;a=
35;break;case 35:a=36;break;case 36:return HEAP8[l+f|0]=95,l;default:assert(0,"bad label: "+a)}}function _ParseStatementMaybeRun(b,c,a){for(var d=0,d=1;;)switch(d){case 1:var e,f,g,h;f=b;g=c;h=a;d=1!=(HEAP32[(f+12|0)>>2]|0)?2:4;break;case 2:d=0!=(g|0)?4:3;break;case 3:d=HEAP32[(f+12|0)>>2];HEAP32[(f+12|0)>>2]=1;e=_ParseStatement(f,h);HEAP32[(f+12|0)>>2]=d;d=5;break;case 4:e=_ParseStatement(f,h);d=5;break;case 5:return e;default:assert(0,"bad label: "+d)}}
function _ParseStatement(b,c){var a=0,d=0,e=STACKTOP;STACKTOP=STACKTOP+120|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f,g,h,l=e,k=e+8,m=e+16,n,q=e+24,p,s=e+56,t,r=e+88,u,w,v;g=b;h=c;_ParserCopy(q,g);p=_LexGetToken(g,k,1);switch(p|0){case 70:a=110;break;case 75:a=111;break;case 91:a=116;break;case 30:case 19:case 33:case 34:case 43:a=14;break;case 52:a=17;break;case 76:a=18;break;case 93:a=2;break;case 77:a=29;break;case 45:a=3;break;case 72:a=45;break;case 74:a=63;break;
case 50:a=64;break;case 54:case 62:case 55:case 60:case 56:case 57:case 58:case 67:case 68:case 59:case 61:case 69:case 63:case 64:case 65:case 66:a=65;break;case 83:a=66;break;case 84:a=67;break;case 79:a=70;break;case 80:a=79;break;case 81:a=88;break;case 78:a=93;break;case 71:a=96;break;case 82:a=99;break;default:a=123}break;case 2:f=0;a=129;break;case 3:a=0!=(_VariableDefined(HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2])|0)?4:7;break;case 4:_VariableGet(g,HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2],
m);a=17==(HEAP32[(HEAP32[(HEAP32[m>>2]|0)>>2]|0)>>2]|0)?5:6;break;case 5:var a=g,x=q;assert(!0);_memcpy(a,x,32)|0;_ParseDeclaration(g,p);a=124;break;case 6:a=13;break;case 7:a=_LexGetToken(g,0,0);a=14==(a|0)?8:12;break;case 8:_LexGetToken(g,0,1);a=6==(HEAP32[(g+12|0)>>2]|0)?9:11;break;case 9:a=(HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2]|0)==(HEAP32[(g+20|0)>>2]|0)?10:11;break;case 10:HEAP32[(g+12|0)>>2]=0;a=11;break;case 11:h=0;a=124;break;case 12:a=13;break;case 13:a=14;break;case 14:a=g;x=q;assert(!0);
_memcpy(a,x,32)|0;_ExpressionParse(g,l);a=0==(HEAP32[(g+12|0)>>2]|0)?15:16;break;case 15:_VariableStackPop(g,HEAP32[l>>2]);a=16;break;case 16:a=124;break;case 17:_ParseBlock(g,0,1);h=0;a=124;break;case 18:a=43!=(_LexGetToken(g,0,1)|0)?19:20;break;case 19:_ProgramFail(g,9920,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=20;break;case 20:n=_ExpressionParseInt(g);a=44!=(_LexGetToken(g,0,1)|0)?21:22;break;case 21:_ProgramFail(g,
9192,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=22;break;case 22:a=2!=(_ParseStatementMaybeRun(g,n,1)|0)?23:24;break;case 23:_ProgramFail(g,9632,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=24;break;case 24:a=73==(_LexGetToken(g,0,0)|0)?25:28;break;case 25:_LexGetToken(g,0,1);a=2!=(_ParseStatementMaybeRun(g,(0!=(n|0)^1)&1,1)|0)?26:27;break;
case 26:_ProgramFail(g,9632,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=27;break;case 27:a=28;break;case 28:h=0;a=124;break;case 29:t=HEAP32[(g+12|0)>>2];a=43!=(_LexGetToken(g,0,1)|0)?30:31;break;case 30:_ProgramFail(g,9920,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=31;break;case 31:_ParserCopyPos(s,g);a=32;break;case 32:_ParserCopyPos(g,
s);n=_ExpressionParseInt(g);a=44!=(_LexGetToken(g,0,1)|0)?33:34;break;case 33:_ProgramFail(g,9192,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=34;break;case 34:a=2!=(_ParseStatementMaybeRun(g,n,1)|0)?35:36;break;case 35:_ProgramFail(g,9632,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=36;break;case 36:a=5==(HEAP32[(g+12|0)>>2]|0)?37:38;break;
case 37:HEAP32[(g+12|0)>>2]=t;a=38;break;case 38:a=39;break;case 39:if(0==(HEAP32[(g+12|0)>>2]|0))a=40;else var y=0,a=41;break;case 40:y=0!=(n|0);a=41;break;case 41:a=y?32:42;break;case 42:a=4==(HEAP32[(g+12|0)>>2]|0)?43:44;break;case 43:HEAP32[(g+12|0)>>2]=t;a=44;break;case 44:h=0;a=124;break;case 45:u=HEAP32[(g+12|0)>>2];_ParserCopyPos(r,g);a=46;break;case 46:_ParserCopyPos(g,r);a=2!=(_ParseStatement(g,1)|0)?47:48;break;case 47:_ProgramFail(g,9632,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+
7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=48;break;case 48:a=5==(HEAP32[(g+12|0)>>2]|0)?49:50;break;case 49:HEAP32[(g+12|0)>>2]=u;a=50;break;case 50:a=77!=(_LexGetToken(g,0,1)|0)?51:52;break;case 51:_ProgramFail(g,8776,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=52;break;case 52:a=43!=(_LexGetToken(g,0,1)|0)?53:54;break;case 53:_ProgramFail(g,9920,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=
STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=54;break;case 54:n=_ExpressionParseInt(g);a=44!=(_LexGetToken(g,0,1)|0)?55:56;break;case 55:_ProgramFail(g,9192,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=56;break;case 56:a=57;break;case 57:if(0!=(n|0))a=58;else var z=0,a=59;break;case 58:z=0==(HEAP32[(g+12|0)>>2]|0);a=59;break;case 59:a=z?46:60;break;case 60:a=4==(HEAP32[(g+12|0)>>
2]|0)?61:62;break;case 61:HEAP32[(g+12|0)>>2]=u;a=62;break;case 62:a=124;break;case 63:_ParseFor(g);h=0;a=124;break;case 64:h=0;a=124;break;case 65:h=g;a=q;assert(!0);_memcpy(h,a,32)|0;h=_ParseDeclaration(g,p);a=124;break;case 66:_ParseMacroDefinition(g);h=0;a=124;break;case 67:a=48!=(_LexGetToken(g,k,1)|0)?68:69;break;case 68:_ProgramFail(g,8584,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=69;break;case 69:_IncludeFile(HEAP32[HEAP32[(HEAP32[k>>
2]+4|0)>>2]>>2]);h=0;a=124;break;case 70:a=43!=(_LexGetToken(g,0,1)|0)?71:72;break;case 71:_ProgramFail(g,9920,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=72;break;case 72:n=_ExpressionParseInt(g);a=44!=(_LexGetToken(g,0,1)|0)?73:74;break;case 73:_ProgramFail(g,9192,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=74;break;case 74:a=52!=(_LexGetToken(g,
0,0)|0)?75:76;break;case 75:_ProgramFail(g,8968,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=76;break;case 76:w=HEAP32[(g+12|0)>>2];v=HEAP32[(g+16|0)>>2];HEAP32[(g+12|0)>>2]=3;HEAP32[(g+16|0)>>2]=n;_ParseBlock(g,1,1!=(w|0)&1);a=2!=(HEAP32[(g+12|0)>>2]|0)?77:78;break;case 77:HEAP32[(g+12|0)>>2]=w;a=78;break;case 78:HEAP32[(g+16|0)>>2]=v;h=0;a=124;break;case 79:a=3==(HEAP32[(g+12|0)>>2]|0)?80:81;break;case 80:HEAP32[(g+
12|0)>>2]=0;n=_ExpressionParseInt(g);HEAP32[(g+12|0)>>2]=3;a=82;break;case 81:n=_ExpressionParseInt(g);a=82;break;case 82:a=14!=(_LexGetToken(g,0,1)|0)?83:84;break;case 83:_ProgramFail(g,8320,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=84;break;case 84:a=3==(HEAP32[(g+12|0)>>2]|0)?85:87;break;case 85:a=(n|0)==(HEAP32[(g+16|0)>>2]|0)?86:87;break;case 86:HEAP32[(g+12|0)>>2]=0;a=87;break;case 87:h=0;a=124;break;case 88:a=
14!=(_LexGetToken(g,0,1)|0)?89:90;break;case 89:_ProgramFail(g,8320,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=90;break;case 90:a=3==(HEAP32[(g+12|0)>>2]|0)?91:92;break;case 91:HEAP32[(g+12|0)>>2]=0;a=92;break;case 92:h=0;a=124;break;case 93:a=0==(HEAP32[(g+12|0)>>2]|0)?94:95;break;case 94:HEAP32[(g+12|0)>>2]=4;a=95;break;case 95:a=124;break;case 96:a=0==(HEAP32[(g+12|0)>>2]|0)?97:98;break;case 97:HEAP32[(g+12|0)>>
2]=5;a=98;break;case 98:a=124;break;case 99:a=0==(HEAP32[(g+12|0)>>2]|0)?100:108;break;case 100:a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[4290]+36|0)>>2]|0)>>2]|0)>>2]|0)?101:104;break;case 101:a=0!=(_ExpressionParse(g,l)|0)?103:102;break;case 102:_ProgramFail(g,8024,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=103;break;case 103:_ExpressionAssign(g,HEAP32[(HEAP32[4290]+36|0)>>2],HEAP32[l>>2],1,0,0,0);_VariableStackPop(g,
HEAP32[l>>2]);a=107;break;case 104:a=0!=(_ExpressionParse(g,l)|0)?105:106;break;case 105:_ProgramFail(g,7824,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=106;break;case 106:a=107;break;case 107:HEAP32[(g+12|0)>>2]=2;a=109;break;case 108:_ExpressionParse(g,l);a=109;break;case 109:a=124;break;case 110:_ParseTypedef(g);a=124;break;case 111:a=45!=(_LexGetToken(g,k,1)|0)?112:113;break;case 112:_ProgramFail(g,11056,(d=STACKTOP,
STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=113;break;case 113:a=0==(HEAP32[(g+12|0)>>2]|0)?114:115;break;case 114:HEAP32[(g+20|0)>>2]=HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2];HEAP32[(g+12|0)>>2]=6;a=115;break;case 115:a=124;break;case 116:a=45!=(_LexGetToken(g,k,1)|0)?117:118;break;case 117:_ProgramFail(g,11056,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=
d;a=118;break;case 118:a=0==(HEAP32[(g+12|0)>>2]|0)?119:122;break;case 119:a=_TableDelete(18544,HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2]);HEAP32[l>>2]=a;a=0==(HEAP32[l>>2]|0)?120:121;break;case 120:a=HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2];_ProgramFail(g,7488,(d=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=a,d));STACKTOP=d;a=121;break;case 121:_VariableFree(HEAP32[l>>2]);a=122;break;case 122:a=124;break;case 123:f=g;a=q;assert(!0);_memcpy(f,a,32)|0;f=1;a=129;break;
case 124:a=0!=(h|0)?125:128;break;case 125:a=50!=(_LexGetToken(g,0,1)|0)?126:127;break;case 126:_ProgramFail(g,9384,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=127;break;case 127:a=128;break;case 128:f=2;a=129;break;case 129:return d=f,STACKTOP=e,d;default:assert(0,"bad label: "+a)}}
function _ParseCountParams(b){for(var c=0,c=1;;)switch(c){case 1:var a,d,e;a=b;d=0;e=_LexGetToken(a,0,1);c=44!=(e|0)?2:11;break;case 2:c=93!=(e|0)?3:11;break;case 3:d=d+1|0;c=4;break;case 4:e=c=_LexGetToken(a,0,1);if(44!=(c|0))c=5;else var f=0,c=6;break;case 5:f=93!=(e|0);c=6;break;case 6:c=f?7:10;break;case 7:c=1==(e|0)?8:9;break;case 8:d=d+1|0;c=9;break;case 9:c=4;break;case 10:c=11;break;case 11:return d;default:assert(0,"bad label: "+c)}}
function _ParseFunctionDefinition(b,c,a){var d=0,e=0,f=STACKTOP;STACKTOP=STACKTOP+88|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l,k=f,m=f+8,n,q=f+16,p,s=f+48,t=f+56,r;g=b;h=c;l=a;r=n=0;d=0!=(HEAP32[4290]|0)?2:3;break;case 2:_ProgramFail(g,3008,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=3;break;case 3:_LexGetToken(g,0,1);_ParserCopy(q,g);r=_ParseCountParams(g);d=16<(r|0)?4:5;break;case 4:_ProgramFail(g,
9992,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=5;break;case 5:p=_VariableAllocValueAndData(g,((r<<2)+56|0)+(r<<2)|0,0,0,1);HEAP32[(p|0)>>2]=18944;HEAP32[(HEAP32[(p+4|0)>>2]|0)>>2]=h;HEAP32[(HEAP32[(p+4|0)>>2]+4|0)>>2]=r;HEAP32[(HEAP32[(p+4|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(p+4|0)>>2]+12|0)>>2]=HEAP32[(p+4|0)>>2]+56|0;HEAP32[(HEAP32[(p+4|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(p+4|0)>>2]+12|0)>>2]+(r<<2)|0;r=0;d=6;break;case 6:d=
(r|0)<(HEAP32[(HEAP32[(p+4|0)>>2]+4|0)>>2]|0)?7:19;break;case 7:d=(r|0)==(HEAP32[(HEAP32[(p+4|0)>>2]+4|0)>>2]-1|0)?8:10;break;case 8:d=51==(_LexGetToken(q,0,0)|0)?9:10;break;case 9:d=HEAP32[(p+4|0)>>2]+4|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;HEAP32[(HEAP32[(p+4|0)>>2]+8|0)>>2]=1;d=19;break;case 10:_TypeParse(q,k,m,0);d=0==(HEAP32[(HEAP32[k>>2]|0)>>2]|0)?11:12;break;case 11:r=r-1|0;d=HEAP32[(p+4|0)>>2]+4|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=13;break;case 12:HEAP32[(HEAP32[(HEAP32[(p+4|0)>>2]+12|0)>>2]+(r<<
2)|0)>>2]=HEAP32[k>>2];HEAP32[(HEAP32[(HEAP32[(p+4|0)>>2]+16|0)>>2]+(r<<2)|0)>>2]=HEAP32[m>>2];d=13;break;case 13:d=14;break;case 14:n=_LexGetToken(q,0,1);d=1!=(n|0)?15:17;break;case 15:d=(r|0)<(HEAP32[(HEAP32[(p+4|0)>>2]+4|0)>>2]-1|0)?16:17;break;case 16:_ProgramFail(q,7512,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=17;break;case 17:d=18;break;case 18:r=r+1|0;d=6;break;case 19:d=0!=(HEAP32[(HEAP32[(p+4|0)>>2]+4|0)>>
2]|0)?20:24;break;case 20:d=44!=(n|0)?21:24;break;case 21:d=1!=(n|0)?22:24;break;case 22:d=51!=(n|0)?23:24;break;case 23:_ProgramFail(q,5864,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=24;break;case 24:d=0==(_strcmp(l,4312)|0)?25:33;break;case 25:d=18408!=(HEAP32[(HEAP32[(p+4|0)>>2]|0)>>2]|0)?26:28;break;case 26:d=16856!=(HEAP32[(HEAP32[(p+4|0)>>2]|0)>>2]|0)?27:28;break;case 27:_ProgramFail(g,2800,(e=STACKTOP,STACKTOP=
STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=28;break;case 28:d=0!=(HEAP32[(HEAP32[(p+4|0)>>2]+4|0)>>2]|0)?29:32;break;case 29:d=2!=(HEAP32[(HEAP32[(p+4|0)>>2]+4|0)>>2]|0)?31:30;break;case 30:d=18408!=(HEAP32[(HEAP32[(HEAP32[(p+4|0)>>2]+12|0)>>2]|0)>>2]|0)?31:32;break;case 31:_ProgramFail(g,1800,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=32;break;case 32:d=
33;break;case 33:n=_LexGetToken(g,0,0);d=50==(n|0)?34:35;break;case 34:_LexGetToken(g,0,1);d=45;break;case 35:d=52!=(n|0)?36:37;break;case 36:_ProgramFail(g,1104,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=37;break;case 37:_ParserCopy(t,g);d=2!=(_ParseStatementMaybeRun(g,0,1)|0)?38:39;break;case 38:_ProgramFail(g,632,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>
2]=0,e));STACKTOP=e;d=39;break;case 39:var d=HEAP32[(p+4|0)>>2]+24|0,u=t;assert(!0);_memcpy(d,u,32)|0;d=_LexCopyTokens(t,g);HEAP32[(HEAP32[(p+4|0)>>2]+24|0)>>2]=d;d=0!=(_TableGet(18544,l,s,0,0,0)|0)?40:44;break;case 40:d=0==(HEAP32[(HEAP32[(HEAP32[s>>2]+4|0)>>2]+24|0)>>2]|0)?41:42;break;case 41:d=_TableDelete(18544,l);_VariableFree(d);d=43;break;case 42:d=l;_ProgramFail(g,192,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;d=43;break;case 43:d=
44;break;case 44:d=45;break;case 45:d=0!=(_TableSet(18544,l,p,HEAP32[(g+4|0)>>2],HEAP16[(g+8|0)>>1]<<16>>16,HEAP16[(g+10|0)>>1]<<16>>16)|0)?47:46;break;case 46:d=l;_ProgramFail(g,192,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;d=47;break;case 47:return b=p,STACKTOP=f,b;default:assert(0,"bad label: "+d)}}function _ParserCopy(b,c){assert(!0);_memcpy(b,c,32)|0}
function _ParseDeclarationAssignment(b,c,a){var d=0,e=0,f=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l,k=f,m,n,q;g=b;h=c;l=a;n=1;d=52==(_LexGetToken(g,0,0)|0)?2:25;break;case 2:_LexGetToken(g,0,1);m=0;d=3;break;case 3:d=0!=(HEAP32[(g+12|0)>>2]|0)?4:5;break;case 4:if(1==(n|0))var p=1,d=8;else d=5;break;case 5:if(0==(HEAP32[(g+12|0)>>2]|0))d=6;else var s=0,d=7;break;case 6:s=(m|0)<(HEAP32[(HEAP32[(h|0)>>2]+4|0)>>2]|0);d=7;break;case 7:p=s;
d=8;break;case 8:d=p?9:20;break;case 9:q=0;d=1!=(n|0)?10:11;break;case 10:_ProgramFail(g,7512,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=11;break;case 11:d=0==(HEAP32[(g+12|0)>>2]|0)?12:13;break;case 12:d=g;q=HEAP32[(HEAP32[(h|0)>>2]+20|0)>>2];var t=HEAP32[(h+4|0)>>2]|0,r=_TypeSize(HEAP32[(HEAP32[(h|0)>>2]+20|0)>>2],0,1),r=Math_imul(r,m)|0;q=_VariableAllocValueFromExistingData(d,q,t+r|0,1,h);d=13;break;case 13:d=0!=
(_ExpressionParse(g,k)|0)?15:14;break;case 14:_ProgramFail(g,11792,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=15;break;case 15:d=0==(HEAP32[(g+12|0)>>2]|0)?16:18;break;case 16:d=0!=(l|0)?17:18;break;case 17:_ExpressionAssign(g,q,HEAP32[k>>2],0,0,0,0);_VariableStackPop(g,HEAP32[k>>2]);_VariableStackPop(g,q);d=18;break;case 18:n=_LexGetToken(g,0,1);d=19;break;case 19:m=m+1|0;d=3;break;case 20:d=1==(n|0)?21:22;break;case 21:n=
_LexGetToken(g,0,1);d=22;break;case 22:d=53!=(n|0)?23:24;break;case 23:_ProgramFail(g,11432,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=24;break;case 24:d=31;break;case 25:d=0!=(_ExpressionParse(g,k)|0)?27:26;break;case 26:_ProgramFail(g,11792,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=27;break;case 27:d=0==(HEAP32[(g+12|0)>>2]|0)?28:
30;break;case 28:d=0!=(l|0)?29:30;break;case 29:_ExpressionAssign(g,h,HEAP32[k>>2],0,0,0,0);_VariableStackPop(g,HEAP32[k>>2]);d=30;break;case 30:d=31;break;case 31:STACKTOP=f;return;default:assert(0,"bad label: "+d)}}
function _ParseDeclaration(b,c){var a=0,d=0,e=STACKTOP;STACKTOP=STACKTOP+40|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f,g,h,l=e,k=e+8,m=e+16,n,q=e+24,p=e+32;g=b;h=c;n=0;HEAP32[q>>2]=0;HEAP32[p>>2]=0;_TypeParseFront(g,k,q);a=2;break;case 2:_TypeParseIdentPart(g,HEAP32[k>>2],m,l);a=58!=(h|0)?3:8;break;case 3:a=67!=(h|0)?4:8;break;case 4:a=68!=(h|0)?5:8;break;case 5:a=59!=(h|0)?6:8;break;case 6:a=(HEAP32[l>>2]|0)==(HEAP32[4492]|0)?7:8;break;case 7:_ProgramFail(g,11056,(d=
STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=8;break;case 8:a=(HEAP32[l>>2]|0)!=(HEAP32[4492]|0)?9:23;break;case 9:a=43==(_LexGetToken(g,0,0)|0)?10:11;break;case 10:_ParseFunctionDefinition(g,HEAP32[m>>2],HEAP32[l>>2]);f=0;a=28;break;case 11:a=16856==(HEAP32[m>>2]|0)?12:14;break;case 12:a=(HEAP32[l>>2]|0)!=(HEAP32[4492]|0)?13:14;break;case 13:_ProgramFail(g,10640,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,
assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=14;break;case 14:a=0==(HEAP32[(g+12|0)>>2]|0)?16:15;break;case 15:a=6==(HEAP32[(g+12|0)>>2]|0)?16:17;break;case 16:n=_VariableDefineButIgnoreIdentical(g,HEAP32[l>>2],HEAP32[m>>2],HEAP32[q>>2],p);a=17;break;case 17:a=2==(_LexGetToken(g,0,0)|0)?18:21;break;case 18:_LexGetToken(g,0,1);var s=g,t=n;if(0!=(HEAP32[q>>2]|0))a=19;else var r=1,a=20;break;case 19:r=0!=(HEAP32[p>>2]|0);a=20;break;case 20:_ParseDeclarationAssignment(s,t,r&1);
a=21;break;case 21:a=22;break;case 22:a=23;break;case 23:h=_LexGetToken(g,0,0);a=1==(h|0)?24:25;break;case 24:_LexGetToken(g,0,1);a=25;break;case 25:a=26;break;case 26:a=1==(h|0)?2:27;break;case 27:f=1;a=28;break;case 28:return a=f,STACKTOP=e,a;default:assert(0,"bad label: "+a)}}
function _ParseMacroDefinition(b){var c=0,a=0,d=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var e,f=d,g,h=d+8,l,k,m=d+16,n;e=b;c=45!=(_LexGetToken(e,f,1)|0)?2:3;break;case 2:_ProgramFail(e,11056,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=3;break;case 3:g=HEAP32[HEAP32[(HEAP32[f>>2]+4|0)>>2]>>2];c=92==(_LexRawPeekToken(e)|0)?4:15;break;case 4:_LexGetToken(e,0,1);n=
0;_ParserCopy(m,e);k=_ParseCountParams(m);l=_VariableAllocValueAndData(e,(k<<2)+40|0,0,0,1);HEAP32[(HEAP32[(l+4|0)>>2]|0)>>2]=k;HEAP32[(HEAP32[(l+4|0)>>2]+4|0)>>2]=HEAP32[(l+4|0)>>2]+40|0;k=_LexGetToken(e,h,1);c=5;break;case 5:c=45==(k|0)?6:12;break;case 6:k=HEAP32[HEAP32[(HEAP32[h>>2]+4|0)>>2]>>2];c=n;n=c+1|0;HEAP32[(HEAP32[(HEAP32[(l+4|0)>>2]+4|0)>>2]+(c<<2)|0)>>2]=k;k=_LexGetToken(e,0,1);c=1==(k|0)?7:8;break;case 7:k=_LexGetToken(e,h,1);c=11;break;case 8:c=44!=(k|0)?9:10;break;case 9:_ProgramFail(e,
7512,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=10;break;case 10:c=11;break;case 11:c=5;break;case 12:c=44!=(k|0)?13:14;break;case 13:_ProgramFail(e,10360,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=14;break;case 14:c=16;break;case 15:l=_VariableAllocValueAndData(e,40,0,0,1);HEAP32[(HEAP32[(l+4|0)>>2]|0)>>2]=0;c=16;break;case 16:_ParserCopy(HEAP32[(l+
4|0)>>2]+8|0,e);HEAP32[(l|0)>>2]=18216;_LexToEndOfLine(e);c=_LexCopyTokens(HEAP32[(l+4|0)>>2]+8|0,e);HEAP32[(HEAP32[(l+4|0)>>2]+8|0)>>2]=c;c=0!=(_TableSet(18544,g,l,HEAP32[(e+4|0)>>2],HEAP16[(e+8|0)>>1]<<16>>16,HEAP16[(e+10|0)>>1]<<16>>16)|0)?18:17;break;case 17:c=g;_ProgramFail(e,192,(a=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=c,a));STACKTOP=a;c=18;break;case 18:STACKTOP=d;return;default:assert(0,"bad label: "+c)}}
function _ParserCopyPos(b,c){HEAP32[(b|0)>>2]=HEAP32[(c|0)>>2];HEAP16[(b+8|0)>>1]=HEAP16[(c+8|0)>>1];HEAP16[(b+24|0)>>1]=HEAP16[(c+24|0)>>1];HEAP16[(b+26|0)>>1]=HEAP16[(c+26|0)>>1];HEAP16[(b+10|0)>>1]=HEAP16[(c+10|0)>>1]}
function _ParseFor(b){var c=0,a=0,d=STACKTOP;STACKTOP=STACKTOP+128|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var e,f,g=d,h=d+32,l=d+64,k=d+96;e=b;c=43!=(_LexGetToken(e,0,1)|0)?2:3;break;case 2:_ProgramFail(e,9920,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=3;break;case 3:c=2!=(_ParseStatement(e,1)|0)?4:5;break;case 4:_ProgramFail(e,9632,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,
assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=5;break;case 5:_ParserCopyPos(g,e);c=50==(_LexGetToken(e,0,0)|0)?6:7;break;case 6:f=1;c=8;break;case 7:f=_ExpressionParseInt(e);c=8;break;case 8:c=50!=(_LexGetToken(e,0,1)|0)?9:10;break;case 9:_ProgramFail(e,9384,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=10;break;case 10:_ParserCopyPos(h,e);_ParseStatementMaybeRun(e,0,0);c=44!=(_LexGetToken(e,0,1)|
0)?11:12;break;case 11:_ProgramFail(e,9192,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=12;break;case 12:_ParserCopyPos(l,e);c=2!=(_ParseStatementMaybeRun(e,f,1)|0)?13:14;break;case 13:_ProgramFail(e,9632,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=14;break;case 14:c=5==(HEAP32[(e+12|0)>>2]|0)?15:16;break;case 15:HEAP32[(e+12|0)>>2]=0;c=
16;break;case 16:_ParserCopyPos(k,e);c=17;break;case 17:if(0!=(f|0))c=18;else var m=0,c=19;break;case 18:m=0==(HEAP32[(e+12|0)>>2]|0);c=19;break;case 19:c=m?20:28;break;case 20:_ParserCopyPos(e,h);_ParseStatement(e,0);_ParserCopyPos(e,g);c=50==(_LexGetToken(e,0,0)|0)?21:22;break;case 21:f=1;c=23;break;case 22:f=_ExpressionParseInt(e);c=23;break;case 23:c=0!=(f|0)?24:27;break;case 24:_ParserCopyPos(e,l);_ParseStatement(e,1);c=5==(HEAP32[(e+12|0)>>2]|0)?25:26;break;case 25:HEAP32[(e+12|0)>>2]=0;c=26;
break;case 26:c=27;break;case 27:c=17;break;case 28:c=4==(HEAP32[(e+12|0)>>2]|0)?29:30;break;case 29:HEAP32[(e+12|0)>>2]=0;c=30;break;case 30:_ParserCopyPos(e,k);STACKTOP=d;return;default:assert(0,"bad label: "+c)}}
function _ParseBlock(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l;g=b;d=c;h=a;d=0!=(d|0)?2:4;break;case 2:d=52!=(_LexGetToken(g,0,1)|0)?3:4;break;case 3:_ProgramFail(g,8968,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=4;break;case 4:d=1==(HEAP32[(g+12|0)>>2]|0)?6:5;break;case 5:d=0!=(h|0)?10:6;break;case 6:l=HEAP32[(g+12|0)>>2];HEAP32[(g+12|0)>>2]=1;d=7;break;
case 7:d=2==(_ParseStatement(g,1)|0)?8:9;break;case 8:d=7;break;case 9:HEAP32[(g+12|0)>>2]=l;d=14;break;case 10:d=11;break;case 11:d=2==(_ParseStatement(g,1)|0)?12:13;break;case 12:d=11;break;case 13:d=14;break;case 14:d=53!=(_LexGetToken(g,0,1)|0)?15:16;break;case 15:_ProgramFail(g,11432,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=16;break;case 16:return b=HEAP32[(g+12|0)>>2],STACKTOP=f,b;default:assert(0,"bad label: "+
d)}}function _ParseTypedef(b){var c=0,a=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var d,e=a,f=a+8,g=a+16;d=b;_TypeParse(d,e,f,0);c=0==(HEAP32[(d+12|0)>>2]|0)?2:3;break;case 2:c=e;HEAP32[(g|0)>>2]=17112;HEAP32[(g+4|0)>>2]=c;_VariableDefine(d,HEAP32[f>>2],g,0,0);c=3;break;case 3:STACKTOP=a;return;default:assert(0,"bad label: "+c)}}
function _PicocParse(b,c,a,d,e,f){var g=0,h=0,l=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,m,n,q,p,s=l,t,r,u;k=b;m=c;g=a;n=d;q=e;p=f;u=_LexAnalyse(k,m,g,0);g=0!=(q|0)?8:2;break;case 2:r=_HeapAllocMem(12);g=0==(r|0)?3:4;break;case 3:_ProgramFail(0,7296,(h=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[h>>2]=0,h));STACKTOP=h;g=4;break;case 4:HEAP32[(r|0)>>2]=u;g=0!=(p|0)?5:6;break;case 5:HEAP32[(r+
4|0)>>2]=m;g=7;break;case 6:HEAP32[(r+4|0)>>2]=0;g=7;break;case 7:HEAP32[(r+8|0)>>2]=HEAP32[4770];HEAP32[4770]=r;g=8;break;case 8:_LexInitParser(s,m,u,k,n);g=9;break;case 9:t=_ParseStatement(s,1);g=10;break;case 10:g=2==(t|0)?9:11;break;case 11:g=1==(t|0)?12:13;break;case 12:_ProgramFail(s,7184,(h=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[h>>2]=0,h));STACKTOP=h;g=13;break;case 13:g=0!=(q|0)?14:15;break;case 14:_HeapFreeMem(u);g=15;break;case 15:STACKTOP=
l;return;default:assert(0,"bad label: "+g)}}function _debugf(b,c){}
function _ExpressionCoerceInteger(b){for(var c=0,c=1;;)switch(c){case 1:var a,d;d=b;switch(HEAP32[(HEAP32[(d|0)>>2]|0)>>2]|0){case 8:c=10;break;case 1:c=2;break;case 3:c=3;break;case 2:c=4;break;case 4:c=5;break;case 5:c=6;break;case 6:c=7;break;case 7:c=8;break;case 11:c=9;break;default:c=11}break;case 2:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=12;break;case 3:a=HEAP8[HEAP32[(d+4|0)>>2]]&255;c=12;break;case 4:a=HEAP16[HEAP32[(d+4|0)>>2]>>1]<<16>>16;c=12;break;case 5:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=12;
break;case 6:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=12;break;case 7:a=HEAP16[HEAP32[(d+4|0)>>2]>>1]&65535;c=12;break;case 8:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=12;break;case 9:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=12;break;case 10:a=HEAPF64[HEAP32[(d+4|0)>>2]>>3]&-1;c=12;break;case 11:a=0;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}
function _ExpressionCoerceUnsignedInteger(b){for(var c=0,c=1;;)switch(c){case 1:var a,d;d=b;switch(HEAP32[(HEAP32[(d|0)>>2]|0)>>2]|0){case 8:c=10;break;case 1:c=2;break;case 3:c=3;break;case 2:c=4;break;case 4:c=5;break;case 5:c=6;break;case 6:c=7;break;case 7:c=8;break;case 11:c=9;break;default:c=11}break;case 2:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=12;break;case 3:a=HEAP8[HEAP32[(d+4|0)>>2]]&255;c=12;break;case 4:a=HEAP16[HEAP32[(d+4|0)>>2]>>1]<<16>>16;c=12;break;case 5:a=HEAP32[HEAP32[(d+4|0)>>2]>>
2];c=12;break;case 6:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=12;break;case 7:a=HEAP16[HEAP32[(d+4|0)>>2]>>1]&65535;c=12;break;case 8:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=12;break;case 9:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=12;break;case 10:c=HEAPF64[HEAP32[(d+4|0)>>2]>>3];a=0<=c?Math_floor(c):Math_ceil(c);c=12;break;case 11:a=0;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}
function _ExpressionCoerceFP(b){for(var c=0,c=1;;)switch(c){case 1:var a,d;d=b;switch(HEAP32[(HEAP32[(d|0)>>2]|0)>>2]|0){case 1:c=2;break;case 3:c=3;break;case 2:c=4;break;case 4:c=5;break;case 5:c=6;break;case 6:c=7;break;case 7:c=8;break;case 8:c=9;break;default:c=10}break;case 2:c=HEAP32[HEAP32[(d+4|0)>>2]>>2];a=c|0;c=11;break;case 3:c=HEAP8[HEAP32[(d+4|0)>>2]]&255;a=c|0;c=11;break;case 4:c=HEAP16[HEAP32[(d+4|0)>>2]>>1]<<16>>16;a=c|0;c=11;break;case 5:c=HEAP32[HEAP32[(d+4|0)>>2]>>2];a=c|0;c=11;
break;case 6:c=HEAP32[HEAP32[(d+4|0)>>2]>>2];a=c>>>0;c=11;break;case 7:c=HEAP16[HEAP32[(d+4|0)>>2]>>1]&65535;a=c>>>0;c=11;break;case 8:c=HEAP32[HEAP32[(d+4|0)>>2]>>2];a=c>>>0;c=11;break;case 9:a=HEAPF64[HEAP32[(d+4|0)>>2]>>3];c=11;break;case 10:a=0;c=11;break;case 11:return a;default:assert(0,"bad label: "+c)}}
function _ExpressionAssignInt(b,c,a,d){var e=0,f=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var h,l,k,m,n;h=b;l=c;k=a;m=d;e=0!=HEAP8[l+14|0]<<24>>24?3:2;break;case 2:_ProgramFail(h,552,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=3;break;case 3:e=0!=(m|0)?4:5;break;case 4:n=_ExpressionCoerceInteger(l);e=6;break;case 5:n=k;e=6;break;case 6:switch(HEAP32[(HEAP32[(l|0)>>2]|0)>>2]|0){case 4:e=
10;break;case 5:e=11;break;case 6:e=12;break;case 7:e=13;break;case 1:e=7;break;case 2:e=8;break;case 3:e=9;break;default:e=14}break;case 7:HEAP32[HEAP32[(l+4|0)>>2]>>2]=k;e=15;break;case 8:HEAP16[HEAP32[(l+4|0)>>2]>>1]=k&65535;e=15;break;case 9:HEAP8[HEAP32[(l+4|0)>>2]]=k&255;e=15;break;case 10:HEAP32[HEAP32[(l+4|0)>>2]>>2]=k;e=15;break;case 11:HEAP32[HEAP32[(l+4|0)>>2]>>2]=k;e=15;break;case 12:HEAP16[HEAP32[(l+4|0)>>2]>>1]=k&65535;e=15;break;case 13:HEAP32[HEAP32[(l+4|0)>>2]>>2]=k;e=15;break;case 14:e=
15;break;case 15:return b=n,STACKTOP=g,b;default:assert(0,"bad label: "+e)}}
function _ExpressionAssignFP(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l;g=b;h=c;l=a;d=0!=HEAP8[h+14|0]<<24>>24?3:2;break;case 2:_ProgramFail(g,552,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=3;break;case 3:return b=HEAPF64[HEAP32[(h+4|0)>>2]>>3]=l,STACKTOP=f,b;default:assert(0,"bad label: "+d)}}
function _ExpressionStackPushValueNode(b,c,a){b=_VariableAlloc(b,16,0);HEAP32[(b|0)>>2]=HEAP32[c>>2];HEAP32[(b+4|0)>>2]=a;HEAP32[c>>2]=b}function _ExpressionStackPushValueByType(b,c,a){a=_VariableAllocValueFromType(b,a,0,0,0);_ExpressionStackPushValueNode(b,c,a);return a}function _ExpressionStackPushValue(b,c,a){a=_VariableAllocValueAndCopy(b,a,0);_ExpressionStackPushValueNode(b,c,a)}
function _ExpressionStackPushLValue(b,c,a,d){a=_VariableAllocValueShared(b,a);HEAP32[(a+4|0)>>2]=HEAP32[(a+4|0)>>2]+d|0;_ExpressionStackPushValueNode(b,c,a)}
function _ExpressionStackPushDereference(b,c,a){var d=0,e=0,f=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l=f,d=f+8,k=f+16,m=f+24,n;g=b;h=c;n=_VariableDereferencePointer(g,a,l,d,k,m);d=0==(n|0)?2:3;break;case 2:_ProgramFail(g,9152,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=3;break;case 3:b=_VariableAllocValueFromExistingData(g,HEAP32[k>>2],n,HEAP32[m>>2],HEAP32[l>>
2]);_ExpressionStackPushValueNode(g,h,b);STACKTOP=f;return;default:assert(0,"bad label: "+d)}}function _ExpressionPushInt(b,c,a){var d;d=_VariableAllocValueFromType(b,18408,0,0,0);HEAP32[HEAP32[(d+4|0)>>2]>>2]=a;_ExpressionStackPushValueNode(b,c,d)}function _ExpressionPushFP(b,c,a){var d;d=_VariableAllocValueFromType(b,19032,0,0,0);HEAPF64[HEAP32[(d+4|0)>>2]>>3]=a;_ExpressionStackPushValueNode(b,c,d)}
function _ExpressionAssignToPointer(b,c,a,d,e,f){for(var g=0,g=1;;)switch(g){case 1:var h,l,k,m,n,q,p;h=b;l=c;k=a;m=d;n=e;q=f;p=HEAP32[(HEAP32[(l|0)>>2]+20|0)>>2];g=(HEAP32[(k|0)>>2]|0)==(HEAP32[(l|0)>>2]|0)?5:2;break;case 2:g=(HEAP32[(k|0)>>2]|0)==(HEAP32[4226]|0)?5:3;break;case 3:g=(HEAP32[(l|0)>>2]|0)==(HEAP32[4226]|0)?4:6;break;case 4:g=11==(HEAP32[(HEAP32[(k|0)>>2]|0)>>2]|0)?5:6;break;case 5:HEAP32[HEAP32[(l+4|0)>>2]>>2]=HEAP32[HEAP32[(k+4|0)>>2]>>2];g=34;break;case 6:g=12==(HEAP32[(HEAP32[(k|
0)>>2]|0)>>2]|0)?7:10;break;case 7:g=(p|0)==(HEAP32[(HEAP32[(k|0)>>2]+20|0)>>2]|0)?9:8;break;case 8:g=(HEAP32[(l|0)>>2]|0)==(HEAP32[4226]|0)?9:10;break;case 9:HEAP32[HEAP32[(l+4|0)>>2]>>2]=HEAP32[(k+4|0)>>2]|0;g=33;break;case 10:g=11==(HEAP32[(HEAP32[(k|0)>>2]|0)>>2]|0)?11:15;break;case 11:g=12==(HEAP32[(HEAP32[(HEAP32[(k|0)>>2]+20|0)>>2]|0)>>2]|0)?12:15;break;case 12:g=(p|0)==(HEAP32[(HEAP32[(HEAP32[(k|0)>>2]+20|0)>>2]+20|0)>>2]|0)?14:13;break;case 13:g=(HEAP32[(l|0)>>2]|0)==(HEAP32[4226]|0)?14:
15;break;case 14:g=_VariableDereferencePointer(h,k,0,0,0,0);HEAP32[HEAP32[(l+4|0)>>2]>>2]=g;g=32;break;case 15:g=1<=HEAP32[(HEAP32[(k|0)>>2]|0)>>2]>>>0?16:17;break;case 16:g=7>=HEAP32[(HEAP32[(k|0)>>2]|0)>>2]>>>0?18:17;break;case 17:g=8==(HEAP32[(HEAP32[(k|0)>>2]|0)>>2]|0)?18:20;break;case 18:g=0==(_ExpressionCoerceInteger(k)|0)?19:20;break;case 19:HEAP32[HEAP32[(l+4|0)>>2]>>2]=0;g=31;break;case 20:g=0!=(q|0)?21:25;break;case 21:g=1<=HEAP32[(HEAP32[(k|0)>>2]|0)>>2]>>>0?22:23;break;case 22:g=7>=HEAP32[(HEAP32[(k|
0)>>2]|0)>>2]>>>0?24:23;break;case 23:g=8==(HEAP32[(HEAP32[(k|0)>>2]|0)>>2]|0)?24:25;break;case 24:g=_ExpressionCoerceUnsignedInteger(k);HEAP32[HEAP32[(l+4|0)>>2]>>2]=g;g=30;break;case 25:g=0!=(q|0)?26:28;break;case 26:g=11==(HEAP32[(HEAP32[(k|0)>>2]|0)>>2]|0)?27:28;break;case 27:HEAP32[HEAP32[(l+4|0)>>2]>>2]=HEAP32[HEAP32[(k+4|0)>>2]>>2];g=29;break;case 28:_AssignFail(h,6992,HEAP32[(l|0)>>2],HEAP32[(k|0)>>2],0,0,m,n);g=29;break;case 29:g=30;break;case 30:g=31;break;case 31:g=32;break;case 32:g=33;
break;case 33:g=34;break;case 34:return;default:assert(0,"bad label: "+g)}}
function _ExpressionAssign(b,c,a,d,e,f,g){for(var h=0,h=1;;)switch(h){case 1:var l,k,m,n,q,p,s;l=b;k=c;m=a;n=d;q=e;p=f;s=g;h=0!=HEAP8[k+14|0]<<24>>24?4:2;break;case 2:h=0!=(n|0)?4:3;break;case 3:_AssignFail(l,5392,0,0,0,0,q,p);h=4;break;case 4:h=1<=HEAP32[(HEAP32[(k|0)>>2]|0)>>2]>>>0?5:6;break;case 5:h=7>=HEAP32[(HEAP32[(k|0)>>2]|0)>>2]>>>0?7:6;break;case 6:h=8==(HEAP32[(HEAP32[(k|0)>>2]|0)>>2]|0)?7:14;break;case 7:h=1<=HEAP32[(HEAP32[(m|0)>>2]|0)>>2]>>>0?8:9;break;case 8:h=7>=HEAP32[(HEAP32[(m|0)>>
2]|0)>>2]>>>0?14:9;break;case 9:h=8==(HEAP32[(HEAP32[(m|0)>>2]|0)>>2]|0)?14:10;break;case 10:h=0!=(s|0)?11:12;break;case 11:h=11==(HEAP32[(HEAP32[(m|0)>>2]|0)>>2]|0)?14:13;break;case 12:h=13;break;case 13:_AssignFail(l,6992,HEAP32[(k|0)>>2],HEAP32[(m|0)>>2],0,0,q,p);h=14;break;case 14:switch(HEAP32[(HEAP32[(k|0)>>2]|0)>>2]|0){case 1:h=15;break;case 2:h=16;break;case 3:h=17;break;case 4:h=18;break;case 5:h=19;break;case 6:h=20;break;case 7:h=21;break;case 8:h=22;break;case 11:h=30;break;case 12:h=
31;break;case 13:case 14:h=36;break;default:h=39}break;case 15:h=_ExpressionCoerceInteger(m);HEAP32[HEAP32[(k+4|0)>>2]>>2]=h;h=40;break;case 16:h=_ExpressionCoerceInteger(m)&65535;HEAP16[HEAP32[(k+4|0)>>2]>>1]=h;h=40;break;case 17:h=_ExpressionCoerceUnsignedInteger(m)&255;HEAP8[HEAP32[(k+4|0)>>2]]=h;h=40;break;case 18:h=_ExpressionCoerceInteger(m);HEAP32[HEAP32[(k+4|0)>>2]>>2]=h;h=40;break;case 19:h=_ExpressionCoerceUnsignedInteger(m);HEAP32[HEAP32[(k+4|0)>>2]>>2]=h;h=40;break;case 20:h=_ExpressionCoerceUnsignedInteger(m)&
65535;HEAP16[HEAP32[(k+4|0)>>2]>>1]=h;h=40;break;case 21:h=_ExpressionCoerceUnsignedInteger(m);HEAP32[HEAP32[(k+4|0)>>2]>>2]=h;h=40;break;case 22:h=1<=HEAP32[(HEAP32[(m|0)>>2]|0)>>2]>>>0?23:24;break;case 23:h=7>=HEAP32[(HEAP32[(m|0)>>2]|0)>>2]>>>0?29:24;break;case 24:h=8==(HEAP32[(HEAP32[(m|0)>>2]|0)>>2]|0)?29:25;break;case 25:h=0!=(s|0)?26:27;break;case 26:h=11==(HEAP32[(HEAP32[(m|0)>>2]|0)>>2]|0)?29:28;break;case 27:h=28;break;case 28:_AssignFail(l,6992,HEAP32[(k|0)>>2],HEAP32[(m|0)>>2],0,0,q,p);
h=29;break;case 29:h=_ExpressionCoerceFP(m);HEAPF64[HEAP32[(k+4|0)>>2]>>3]=h;h=40;break;case 30:_ExpressionAssignToPointer(l,k,m,q,p,s);h=40;break;case 31:h=(HEAP32[(k|0)>>2]|0)!=(HEAP32[(m|0)>>2]|0)?32:33;break;case 32:_AssignFail(l,6992,HEAP32[(k|0)>>2],HEAP32[(m|0)>>2],0,0,q,p);h=33;break;case 33:h=(HEAP32[(HEAP32[(k|0)>>2]+4|0)>>2]|0)!=(HEAP32[(HEAP32[(m|0)>>2]+4|0)>>2]|0)?34:35;break;case 34:_AssignFail(l,3768,0,0,HEAP32[(HEAP32[(k|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(m|0)>>2]+4|0)>>2],q,p);h=35;
break;case 35:var h=HEAP32[(k+4|0)>>2],t=HEAP32[(m+4|0)>>2],r=_TypeSizeValue(k,0);assert(0===r%1);_memcpy(h,t,r)|0;h=40;break;case 36:h=(HEAP32[(k|0)>>2]|0)!=(HEAP32[(m|0)>>2]|0)?37:38;break;case 37:_AssignFail(l,6992,HEAP32[(k|0)>>2],HEAP32[(m|0)>>2],0,0,q,p);h=38;break;case 38:h=HEAP32[(k+4|0)>>2];t=HEAP32[(m+4|0)>>2];r=_TypeSizeValue(m,0);assert(0===r%1);_memcpy(h,t,r)|0;h=40;break;case 39:_AssignFail(l,2560,HEAP32[(k|0)>>2],0,0,0,q,p);h=40;break;case 40:return;default:assert(0,"bad label: "+h)}}
function _ExpressionQuestionMarkOperator(b,c,a,d){var e=0,f=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var h,l,k,m;h=b;l=c;k=a;m=d;e=1<=HEAP32[(HEAP32[(m|0)>>2]|0)>>2]>>>0?2:3;break;case 2:e=7>=HEAP32[(HEAP32[(m|0)>>2]|0)>>2]>>>0?5:3;break;case 3:e=8==(HEAP32[(HEAP32[(m|0)>>2]|0)>>2]|0)?5:4;break;case 4:_ProgramFail(h,1552,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=5;break;case 5:e=
0!=(_ExpressionCoerceInteger(m)|0)?6:7;break;case 6:_ExpressionStackPushValue(h,l,k);e=8;break;case 7:_ExpressionStackPushValueByType(h,l,16856);e=8;break;case 8:STACKTOP=g;return;default:assert(0,"bad label: "+e)}}
function _ExpressionColonOperator(b,c,a,d){for(var e=0,e=1;;)switch(e){case 1:var f,g,h,l;f=b;g=c;h=a;l=d;e=0==(HEAP32[(HEAP32[(l|0)>>2]|0)>>2]|0)?2:3;break;case 2:_ExpressionStackPushValue(f,g,h);e=4;break;case 3:_ExpressionStackPushValue(f,g,l);e=4;break;case 4:return;default:assert(0,"bad label: "+e)}}
function _ExpressionPrefixOperator(b,c,a,d){var e=0,f=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var h,l,k,m,n,q,p,s,t;h=b;l=c;k=a;m=d;_debugf(960,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=k;e=19==(e|0)?2:30==(e|0)?5:37==(e|0)?6:10;break;case 2:e=0!=HEAP8[m+14|0]<<24>>24?4:3;break;case 3:_ProgramFail(h,512,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<
(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=4;break;case 4:e=HEAP32[(m+4|0)>>2];n=h;var r=_TypeGetMatching(h,HEAP32[(m|0)>>2],11,0,HEAP32[4492],1);n=_VariableAllocValueFromType(n,r,0,0,0);HEAP32[HEAP32[(n+4|0)>>2]>>2]=e;_ExpressionStackPushValueNode(h,l,n);e=42;break;case 5:_ExpressionStackPushDereference(h,l,m);e=42;break;case 6:e=17112==(HEAP32[(m|0)>>2]|0)?7:8;break;case 7:e=h;n=l;r=_TypeSize(HEAP32[HEAP32[(m+4|0)>>2]>>2],HEAP32[(HEAP32[HEAP32[(m+4|0)>>2]>>2]+4|0)>>2],1);_ExpressionPushInt(e,
n,r);e=9;break;case 8:e=h;n=l;r=_TypeSize(HEAP32[(m|0)>>2],HEAP32[(HEAP32[(m|0)>>2]+4|0)>>2],1);_ExpressionPushInt(e,n,r);e=9;break;case 9:e=42;break;case 10:e=19032==(HEAP32[(m|0)>>2]|0)?11:16;break;case 11:q=0;e=k;e=28==(e|0)?12:29==(e|0)?13:14;break;case 12:q=HEAPF64[HEAP32[(m+4|0)>>2]>>3];e=15;break;case 13:q=-0-HEAPF64[HEAP32[(m+4|0)>>2]>>3];e=15;break;case 14:_ProgramFail(h,120,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=
f;e=15;break;case 15:_ExpressionPushFP(h,l,q);e=41;break;case 16:e=1<=HEAP32[(HEAP32[(m|0)>>2]|0)>>2]>>>0?17:18;break;case 17:e=7>=HEAP32[(HEAP32[(m|0)>>2]|0)>>2]>>>0?19:18;break;case 18:e=8==(HEAP32[(HEAP32[(m|0)>>2]|0)>>2]|0)?19:28;break;case 19:p=0;s=_ExpressionCoerceInteger(m);switch(k|0){case 28:e=20;break;case 29:e=21;break;case 33:e=22;break;case 34:e=23;break;case 35:e=24;break;case 36:e=25;break;default:e=26}break;case 20:p=s;e=27;break;case 21:p=-s|0;e=27;break;case 22:p=_ExpressionAssignInt(h,
m,s+1|0,0);e=27;break;case 23:p=_ExpressionAssignInt(h,m,s-1|0,0);e=27;break;case 24:p=(0!=(s|0)^1)&1;e=27;break;case 25:p=s^-1;e=27;break;case 26:_ProgramFail(h,120,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=27;break;case 27:_ExpressionPushInt(h,l,p);e=40;break;case 28:e=11==(HEAP32[(HEAP32[(m|0)>>2]|0)>>2]|0)?29:38;break;case 29:t=_TypeSize(HEAP32[(HEAP32[(m|0)>>2]+20|0)>>2],0,1);e=0==(HEAP32[HEAP32[(m+4|0)>>2]>>
2]|0)?30:31;break;case 30:_ProgramFail(h,11736,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=31;break;case 31:e=0!=HEAP8[m+14|0]<<24>>24?33:32;break;case 32:_ProgramFail(h,552,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=33;break;case 33:e=k;e=33==(e|0)?34:34==(e|0)?35:36;break;case 34:HEAP32[HEAP32[(m+4|0)>>2]>>2]=HEAP32[HEAP32[(m+4|0)>>
2]>>2]+t|0;e=37;break;case 35:HEAP32[HEAP32[(m+4|0)>>2]>>2]=HEAP32[HEAP32[(m+4|0)>>2]>>2]+(-t|0)|0;e=37;break;case 36:_ProgramFail(h,120,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=37;break;case 37:n=HEAP32[HEAP32[(m+4|0)>>2]>>2];e=_ExpressionStackPushValueByType(h,l,HEAP32[(m|0)>>2]);HEAP32[HEAP32[(e+4|0)>>2]>>2]=n;e=39;break;case 38:_ProgramFail(h,120,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=39;break;case 39:e=40;break;case 40:e=41;break;case 41:e=42;break;case 42:STACKTOP=g;return;default:assert(0,"bad label: "+e)}}
function _ExpressionPostfixOperator(b,c,a,d){var e=0,f=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var h,l,k,m,n,q,p,s;h=b;l=c;k=a;m=d;_debugf(11680,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=1<=HEAP32[(HEAP32[(m|0)>>2]|0)>>2]>>>0?2:3;break;case 2:e=7>=HEAP32[(HEAP32[(m|0)>>2]|0)>>2]>>>0?4:3;break;case 3:e=8==(HEAP32[(HEAP32[(m|0)>>2]|0)>>2]|0)?4:11;break;case 4:n=0;q=_ExpressionCoerceInteger(m);
e=k;e=33==(e|0)?5:34==(e|0)?6:40==(e|0)?7:44==(e|0)?8:9;break;case 5:n=_ExpressionAssignInt(h,m,q+1|0,1);e=10;break;case 6:n=_ExpressionAssignInt(h,m,q-1|0,1);e=10;break;case 7:_ProgramFail(h,11336,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=10;break;case 8:_ProgramFail(h,11336,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=10;break;case 9:_ProgramFail(h,
120,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=10;break;case 10:_ExpressionPushInt(h,l,n);e=23;break;case 11:e=11==(HEAP32[(HEAP32[(m|0)>>2]|0)>>2]|0)?12:21;break;case 12:p=_TypeSize(HEAP32[(HEAP32[(m|0)>>2]+20|0)>>2],0,1);s=HEAP32[HEAP32[(m+4|0)>>2]>>2];e=0==(HEAP32[HEAP32[(m+4|0)>>2]>>2]|0)?13:14;break;case 13:_ProgramFail(h,11736,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=14;break;case 14:e=0!=HEAP8[m+14|0]<<24>>24?16:15;break;case 15:_ProgramFail(h,552,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=16;break;case 16:e=k;e=33==(e|0)?17:34==(e|0)?18:19;break;case 17:HEAP32[HEAP32[(m+4|0)>>2]>>2]=HEAP32[HEAP32[(m+4|0)>>2]>>2]+p|0;e=20;break;case 18:HEAP32[HEAP32[(m+4|0)>>2]>>2]=HEAP32[HEAP32[(m+4|0)>>2]>>2]+(-p|0)|0;e=20;break;case 19:_ProgramFail(h,120,
(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=20;break;case 20:e=_ExpressionStackPushValueByType(h,l,HEAP32[(m|0)>>2]);HEAP32[HEAP32[(e+4|0)>>2]>>2]=s;e=22;break;case 21:_ProgramFail(h,120,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=22;break;case 22:e=23;break;case 23:STACKTOP=g;return;default:assert(0,"bad label: "+e)}}
function _ExpressionInfixOperator(b,c,a,d,e){var f=0,g=0,h=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(f=1;;)switch(f){case 1:var l,k,m,n,q,p,s,t,r,u,w,v,x,y,z,B,E,N,C,K;l=b;k=c;m=a;n=d;q=e;p=0;_debugf(10976,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=0==(n|0)?3:2;break;case 2:f=0==(q|0)?3:4;break;case 3:_ProgramFail(l,10592,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=4;break;case 4:f=39==(m|0)?5:14;break;case 5:r=0;f=1<=HEAP32[(HEAP32[(q|0)>>2]|0)>>2]>>>0?6:7;break;case 6:f=7>=HEAP32[(HEAP32[(q|0)>>2]|0)>>2]>>>0?9:7;break;case 7:f=8==(HEAP32[(HEAP32[(q|0)>>2]|0)>>2]|0)?9:8;break;case 8:_ProgramFail(l,10280,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=9;break;case 9:t=_ExpressionCoerceInteger(q);f=HEAP32[(HEAP32[(n|0)>>2]|0)>>2];f=12==(f|0)?10:
11==(f|0)?11:12;break;case 10:r=l;var f=HEAP32[(HEAP32[(n|0)>>2]+20|0)>>2],H=HEAP32[(n+4|0)>>2]|0,D=_TypeSize(HEAP32[(n|0)>>2],t,1);r=_VariableAllocValueFromExistingData(r,f,H+D|0,HEAP8[n+14|0]<<24>>24,HEAP32[(n+8|0)>>2]);f=13;break;case 11:r=l;f=HEAP32[(HEAP32[(n|0)>>2]+20|0)>>2];H=HEAP32[HEAP32[(n+4|0)>>2]>>2];D=_TypeSize(HEAP32[(HEAP32[(n|0)>>2]+20|0)>>2],0,1);D=Math_imul(D,t)|0;r=_VariableAllocValueFromExistingData(r,f,H+D|0,HEAP8[n+14|0]<<24>>24,HEAP32[(n+8|0)>>2]);f=13;break;case 12:f=HEAP32[(n|
0)>>2];_ProgramFail(l,9888,(g=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=f,g));STACKTOP=g;f=13;break;case 13:_ExpressionStackPushValueNode(l,k,r);f=155;break;case 14:f=13==(m|0)?15:16;break;case 15:_ExpressionQuestionMarkOperator(l,k,q,n);f=154;break;case 16:f=14==(m|0)?17:18;break;case 17:_ExpressionColonOperator(l,k,q,n);f=153;break;case 18:f=19032==(HEAP32[(q|0)>>2]|0)?19:20;break;case 19:f=19032==(HEAP32[(n|0)>>2]|0)?28:20;break;case 20:f=19032==(HEAP32[(q|
0)>>2]|0)?21:24;break;case 21:f=1<=HEAP32[(HEAP32[(n|0)>>2]|0)>>2]>>>0?22:23;break;case 22:f=7>=HEAP32[(HEAP32[(n|0)>>2]|0)>>2]>>>0?28:23;break;case 23:f=8==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?28:24;break;case 24:f=1<=HEAP32[(HEAP32[(q|0)>>2]|0)>>2]>>>0?25:26;break;case 25:f=7>=HEAP32[(HEAP32[(q|0)>>2]|0)>>2]>>>0?27:26;break;case 26:f=8==(HEAP32[(HEAP32[(q|0)>>2]|0)>>2]|0)?27:55;break;case 27:f=19032==(HEAP32[(n|0)>>2]|0)?28:55;break;case 28:w=u=0;f=19032==(HEAP32[(q|0)>>2]|0)?29:30;break;case 29:var M=
HEAPF64[HEAP32[(q+4|0)>>2]>>3],f=31;break;case 30:M=_ExpressionCoerceInteger(q)|0;f=31;break;case 31:v=M;f=19032==(HEAP32[(n|0)>>2]|0)?32:33;break;case 32:var P=HEAPF64[HEAP32[(n+4|0)>>2]>>3],f=34;break;case 33:P=_ExpressionCoerceInteger(n)|0;f=34;break;case 34:x=P;switch(m|0){case 2:f=35;break;case 3:f=36;break;case 4:f=37;break;case 5:f=38;break;case 6:f=39;break;case 20:f=40;break;case 21:f=41;break;case 22:f=42;break;case 23:f=43;break;case 24:f=44;break;case 25:f=45;break;case 28:f=46;break;
case 29:f=47;break;case 30:f=48;break;case 31:f=49;break;default:f=50}break;case 35:w=_ExpressionAssignFP(l,n,v);f=51;break;case 36:w=_ExpressionAssignFP(l,n,x+v);f=51;break;case 37:w=_ExpressionAssignFP(l,n,x-v);f=51;break;case 38:w=_ExpressionAssignFP(l,n,x*v);f=51;break;case 39:w=_ExpressionAssignFP(l,n,x/v);f=51;break;case 40:p=x==v&1;u=1;f=51;break;case 41:p=x!=v&1;u=1;f=51;break;case 42:p=x<v&1;u=1;f=51;break;case 43:p=x>v&1;u=1;f=51;break;case 44:p=x<=v&1;u=1;f=51;break;case 45:p=x>=v&1;u=
1;f=51;break;case 46:w=x+v;f=51;break;case 47:w=x-v;f=51;break;case 48:w=x*v;f=51;break;case 49:w=x/v;f=51;break;case 50:_ProgramFail(l,120,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=51;break;case 51:f=0!=(u|0)?52:53;break;case 52:_ExpressionPushInt(l,k,p);f=54;break;case 53:_ExpressionPushFP(l,k,w);f=54;break;case 54:f=152;break;case 55:f=1<=HEAP32[(HEAP32[(q|0)>>2]|0)>>2]>>>0?56:57;break;case 56:f=7>=HEAP32[(HEAP32[(q|
0)>>2]|0)>>2]>>>0?58:57;break;case 57:f=8==(HEAP32[(HEAP32[(q|0)>>2]|0)>>2]|0)?58:97;break;case 58:f=1<=HEAP32[(HEAP32[(n|0)>>2]|0)>>2]>>>0?59:60;break;case 59:f=7>=HEAP32[(HEAP32[(n|0)>>2]|0)>>2]>>>0?61:60;break;case 60:f=8==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?61:97;break;case 61:y=_ExpressionCoerceInteger(q);z=_ExpressionCoerceInteger(n);switch(m|0){case 2:f=62;break;case 3:f=63;break;case 4:f=64;break;case 5:f=65;break;case 6:f=66;break;case 7:f=67;break;case 8:f=68;break;case 9:f=69;break;case 10:f=
70;break;case 11:f=71;break;case 12:f=72;break;case 15:f=73;break;case 16:f=76;break;case 17:f=79;break;case 18:f=80;break;case 19:f=81;break;case 20:f=82;break;case 21:f=83;break;case 22:f=84;break;case 23:f=85;break;case 24:f=86;break;case 25:f=87;break;case 26:f=88;break;case 27:f=89;break;case 28:f=90;break;case 29:f=91;break;case 30:f=92;break;case 31:f=93;break;case 32:f=94;break;default:f=95}break;case 62:p=_ExpressionAssignInt(l,n,y,0);f=96;break;case 63:p=_ExpressionAssignInt(l,n,z+y|0,0);
f=96;break;case 64:p=_ExpressionAssignInt(l,n,z-y|0,0);f=96;break;case 65:p=l;f=n;H=Math_imul(z,y)|0;p=_ExpressionAssignInt(p,f,H,0);f=96;break;case 66:p=_ExpressionAssignInt(l,n,(z|0)/(y|0)&-1,0);f=96;break;case 67:p=_ExpressionAssignInt(l,n,(z|0)%(y|0)&-1,0);f=96;break;case 68:p=_ExpressionAssignInt(l,n,z<<y,0);f=96;break;case 69:p=_ExpressionAssignInt(l,n,z>>(y|0),0);f=96;break;case 70:p=_ExpressionAssignInt(l,n,z&y,0);f=96;break;case 71:p=_ExpressionAssignInt(l,n,z|y,0);f=96;break;case 72:p=_ExpressionAssignInt(l,
n,z^y,0);f=96;break;case 73:if(0!=(z|0))var Q=1,f=75;else f=74;break;case 74:Q=0!=(y|0);f=75;break;case 75:p=Q&1;f=96;break;case 76:if(0!=(z|0))f=77;else var F=0,f=78;break;case 77:F=0!=(y|0);f=78;break;case 78:p=F&1;f=96;break;case 79:p=z|y;f=96;break;case 80:p=z^y;f=96;break;case 81:p=z&y;f=96;break;case 82:p=(z|0)==(y|0)&1;f=96;break;case 83:p=(z|0)!=(y|0)&1;f=96;break;case 84:p=(z|0)<(y|0)&1;f=96;break;case 85:p=(z|0)>(y|0)&1;f=96;break;case 86:p=(z|0)<=(y|0)&1;f=96;break;case 87:p=(z|0)>=(y|
0)&1;f=96;break;case 88:p=z<<y;f=96;break;case 89:p=z>>(y|0);f=96;break;case 90:p=z+y|0;f=96;break;case 91:p=z-y|0;f=96;break;case 92:p=Math_imul(z,y)|0;f=96;break;case 93:p=(z|0)/(y|0)&-1;f=96;break;case 94:p=(z|0)%(y|0)&-1;f=96;break;case 95:_ProgramFail(l,120,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=96;break;case 96:_ExpressionPushInt(l,k,p);f=151;break;case 97:f=11==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?98:133;
break;case 98:f=1<=HEAP32[(HEAP32[(q|0)>>2]|0)>>2]>>>0?99:100;break;case 99:f=7>=HEAP32[(HEAP32[(q|0)>>2]|0)>>2]>>>0?101:100;break;case 100:f=8==(HEAP32[(HEAP32[(q|0)>>2]|0)>>2]|0)?101:133;break;case 101:B=_ExpressionCoerceInteger(q);f=20==(m|0)?103:102;break;case 102:f=21==(m|0)?103:109;break;case 103:f=0!=(B|0)?104:105;break;case 104:_ProgramFail(l,120,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=105;break;case 105:f=
20==(m|0)?106:107;break;case 106:_ExpressionPushInt(l,k,0==(HEAP32[HEAP32[(n+4|0)>>2]>>2]|0)&1);f=108;break;case 107:_ExpressionPushInt(l,k,0!=(HEAP32[HEAP32[(n+4|0)>>2]>>2]|0)&1);f=108;break;case 108:f=132;break;case 109:f=28==(m|0)?111:110;break;case 110:f=29==(m|0)?111:117;break;case 111:E=_TypeSize(HEAP32[(HEAP32[(n|0)>>2]+20|0)>>2],0,1);s=HEAP32[HEAP32[(n+4|0)>>2]>>2];f=0==(s|0)?112:113;break;case 112:_ProgramFail(l,11736,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=113;break;case 113:f=28==(m|0)?114:115;break;case 114:f=Math_imul(B,E)|0;s=s+f|0;f=116;break;case 115:f=-(Math_imul(B,E)|0)|0;s=s+f|0;f=116;break;case 116:f=_ExpressionStackPushValueByType(l,k,HEAP32[(n|0)>>2]);HEAP32[HEAP32[(f+4|0)>>2]>>2]=s;f=131;break;case 117:f=2==(m|0)?118:120;break;case 118:f=0==(B|0)?119:120;break;case 119:_HeapUnpopStack(16);_ExpressionAssign(l,n,q,0,0,0,0);_ExpressionStackPushValueNode(l,k,n);f=130;break;case 120:f=3==(m|
0)?122:121;break;case 121:f=4==(m|0)?122:128;break;case 122:N=_TypeSize(HEAP32[(HEAP32[(n|0)>>2]+20|0)>>2],0,1);s=HEAP32[HEAP32[(n+4|0)>>2]>>2];f=0==(s|0)?123:124;break;case 123:_ProgramFail(l,11736,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=124;break;case 124:f=3==(m|0)?125:126;break;case 125:f=Math_imul(B,N)|0;s=s+f|0;f=127;break;case 126:f=-(Math_imul(B,N)|0)|0;s=s+f|0;f=127;break;case 127:_HeapUnpopStack(16);HEAP32[HEAP32[(n+
4|0)>>2]>>2]=s;_ExpressionStackPushValueNode(l,k,n);f=129;break;case 128:_ProgramFail(l,120,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=129;break;case 129:f=130;break;case 130:f=131;break;case 131:f=132;break;case 132:f=150;break;case 133:f=11==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?134:142;break;case 134:f=11==(HEAP32[(HEAP32[(q|0)>>2]|0)>>2]|0)?135:142;break;case 135:f=2!=(m|0)?136:142;break;case 136:C=HEAP32[HEAP32[(q+
4|0)>>2]>>2];K=HEAP32[HEAP32[(n+4|0)>>2]>>2];f=m;f=20==(f|0)?137:21==(f|0)?138:29==(f|0)?139:140;break;case 137:_ExpressionPushInt(l,k,(K|0)==(C|0)&1);f=141;break;case 138:_ExpressionPushInt(l,k,(K|0)!=(C|0)&1);f=141;break;case 139:_ExpressionPushInt(l,k,K-C|0);f=141;break;case 140:_ProgramFail(l,120,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=141;break;case 141:f=149;break;case 142:f=2==(m|0)?143:144;break;case 143:_HeapUnpopStack(16);
_ExpressionAssign(l,n,q,0,0,0,0);_ExpressionStackPushValueNode(l,k,n);f=148;break;case 144:f=38==(m|0)?145:146;break;case 145:f=_ExpressionStackPushValueByType(l,k,HEAP32[HEAP32[(n+4|0)>>2]>>2]);_ExpressionAssign(l,f,q,1,0,0,1);f=147;break;case 146:_ProgramFail(l,120,(g=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=0,g));STACKTOP=g;f=147;break;case 147:f=148;break;case 148:f=149;break;case 149:f=150;break;case 150:f=151;break;case 151:f=152;
break;case 152:f=153;break;case 153:f=154;break;case 154:f=155;break;case 155:STACKTOP=h;return;default:assert(0,"bad label: "+f)}}
function _ExpressionStackCollapse(b,c,a,d){var e=0,f=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var h,l,k,m,n,q,p,s,t;h=b;l=c;k=a;m=d;n=k;s=HEAP32[l>>2];e=k;_debugf(9544,(f=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=2;break;case 2:if(0!=(s|0))e=3;else var r=0,e=5;break;case 3:0!=(HEAP32[(s|0)>>2]|0)?e=4:(r=0,e=5);break;case 4:r=(n|0)>=(k|0);e=5;break;case 5:e=r?6:37;break;case 6:e=0==(HEAP8[s+14|0]&255|0)?7:
8;break;case 7:t=HEAP32[(s|0)>>2];e=9;break;case 8:t=s;e=9;break;case 9:n=HEAP16[(t+12|0)>>1]&65535;e=(n|0)>=(k|0)?10:36;break;case 10:e=0!=(t|0)?11:36;break;case 11:e=HEAP8[t+14|0]&255;e=1==(e|0)?12:3==(e|0)?17:2==(e|0)?22:0==(e|0)?30:33;break;case 12:_debugf(9352,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;q=HEAP32[(s+4|0)>>2];e=_TypeStackSizeValue(q)+32|0;_HeapPopStack(0,e);_HeapPopStack(t,16);HEAP32[l>>2]=HEAP32[(t|
0)>>2];e=0==(HEAP32[(h+12|0)>>2]|0)?13:15;break;case 13:e=(n|0)<(HEAP32[m>>2]|0)?14:15;break;case 14:_ExpressionPrefixOperator(h,l,HEAP32[(t+8|0)>>2],q);e=16;break;case 15:_ExpressionPushInt(h,l,0);e=16;break;case 16:e=33;break;case 17:_debugf(9128,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;q=HEAP32[(HEAP32[(s|0)>>2]+4|0)>>2];_HeapPopStack(0,16);var e=q,u=_TypeStackSizeValue(q)+32|0;_HeapPopStack(e,u);HEAP32[l>>2]=HEAP32[(HEAP32[(s|
0)>>2]|0)>>2];e=0==(HEAP32[(h+12|0)>>2]|0)?18:20;break;case 18:e=(n|0)<(HEAP32[m>>2]|0)?19:20;break;case 19:_ExpressionPostfixOperator(h,l,HEAP32[(t+8|0)>>2],q);e=21;break;case 20:_ExpressionPushInt(h,l,0);e=21;break;case 21:e=33;break;case 22:_debugf(8920,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;q=HEAP32[(s+4|0)>>2];e=0!=(q|0)?23:28;break;case 23:p=HEAP32[(HEAP32[(t|0)>>2]+4|0)>>2];e=_TypeStackSizeValue(q)+32|0;_HeapPopStack(0,
e);_HeapPopStack(0,16);e=p;u=_TypeStackSizeValue(p)+32|0;_HeapPopStack(e,u);HEAP32[l>>2]=HEAP32[(HEAP32[(t|0)>>2]|0)>>2];e=0==(HEAP32[(h+12|0)>>2]|0)?24:26;break;case 24:e=(n|0)<=(HEAP32[m>>2]|0)?25:26;break;case 25:_ExpressionInfixOperator(h,l,HEAP32[(t+8|0)>>2],p,q);e=27;break;case 26:_ExpressionPushInt(h,l,0);e=27;break;case 27:e=29;break;case 28:n=-1;e=29;break;case 29:e=33;break;case 30:e=0!=(HEAP8[t+14|0]&255|0)?32:31;break;case 31:throw ___assert_fail(8728,8488,910,12440),"Reached an unreachable!";
case 32:e=33;break;case 33:e=(n|0)<=(HEAP32[m>>2]|0)?34:35;break;case 34:HEAP32[m>>2]=2E4;e=35;break;case 35:e=36;break;case 36:s=HEAP32[l>>2];e=2;break;case 37:_debugf(8272,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;STACKTOP=g;return;default:assert(0,"bad label: "+e)}}
function _ExpressionStackPushOperator(b,c,a,d,e){var f=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;b=_VariableAlloc(b,16,0);HEAP32[(b|0)>>2]=HEAP32[c>>2];HEAP8[b+14|0]=a&255;HEAP32[(b+8|0)>>2]=d;HEAP16[(b+12|0)>>1]=e&65535;HEAP32[c>>2]=b;_debugf(7984,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;STACKTOP=g}
function _ExpressionGetStructElement(b,c,a){var d=0,e=0,f=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l,k=f,m,n=f+8,q=f+16,p,s=f+24;g=b;h=c;l=a;d=45!=(_LexGetToken(g,k,1)|0)?2:3;break;case 2:d=41==(l|0)?7472:7272;_ProgramFail(g,7728,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;d=3;break;case 3:d=0==(HEAP32[(g+12|0)>>2]|0)?4:15;break;case 4:m=HEAP32[(HEAP32[h>>2]+4|0)>>2];HEAP32[n>>2]=
m;HEAP32[q>>2]=HEAP32[(m|0)>>2];p=HEAP32[(m+4|0)>>2];d=42==(l|0)?5:6;break;case 5:p=_VariableDereferencePointer(g,m,n,0,q,0);d=6;break;case 6:d=13!=(HEAP32[(HEAP32[q>>2]|0)>>2]|0)?7:9;break;case 7:d=14!=(HEAP32[(HEAP32[q>>2]|0)>>2]|0)?8:9;break;case 8:var d=41==(l|0)?7472:7272,t=42==(l|0)?6984:16328,r=HEAP32[(m|0)>>2];_ProgramFail(g,7088,(e=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,HEAP32[e+8>>2]=t,HEAP32[e+16>>2]=r,e));STACKTOP=e;d=9;break;case 9:d=0!=(_TableGet(HEAP32[(HEAP32[q>>
2]+32|0)>>2],HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2],s,0,0,0)|0)?11:10;break;case 10:d=HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2];_ProgramFail(g,6776,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;d=11;break;case 11:var u=m,w=_TypeStackSizeValue(HEAP32[n>>2])+32|0;_HeapPopStack(u,w);HEAP32[h>>2]=HEAP32[(HEAP32[h>>2]|0)>>2];var u=g,w=HEAP32[(HEAP32[s>>2]|0)>>2],v=p+HEAP32[HEAP32[(HEAP32[s>>2]+4|0)>>2]>>2]|0,d=0!=(HEAP32[n>>2]|0)?12:13;break;case 12:var x=
HEAP32[(HEAP32[n>>2]+8|0)>>2],d=14;break;case 13:x=0;d=14;break;case 14:d=_VariableAllocValueFromExistingData(u,w,v,1,x);_ExpressionStackPushValueNode(g,h,d);d=15;break;case 15:STACKTOP=f;return;default:assert(0,"bad label: "+d)}}
function _ExpressionParse(b,c){var a=0,d=0,e=STACKTOP;STACKTOP=STACKTOP+136|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f,g,h=e,l,k,m,n,q=e+8,p=e+16,s,t=e+24,r,u,w=e+56,v=e+64,x,y=e+72,z=e+80,B=e+112,E=e+120,N=e+128;f=b;g=c;l=1;n=m=k=0;HEAP32[q>>2]=2E4;s=HEAP32[p>>2]=0;_debugf(6632,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=2;break;case 2:_ParserCopy(t,f);r=_LexGetToken(f,h,1);a=1<(r|0)?3:
4;break;case 3:a=43>=(r|0)?6:4;break;case 4:a=44==(r|0)?5:63;break;case 5:a=0!=(m|0)?6:63;break;case 6:a=14!=(r|0)?8:7;break;case 7:a=0<(s|0)?8:63;break;case 8:a=0!=(l|0)?9:23;break;case 9:a=0==(HEAP32[(14848+(r<<3)|0)>>2]&15|0)?10:11;break;case 10:_ProgramFail(f,6464,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=11;break;case 11:n=HEAP32[(14848+(r<<3)|0)>>2]&15;n=m+n|0;a=43==(r|0)?12:21;break;case 12:u=_LexGetToken(f,
h,0);a=54<=u>>>0?13:19;break;case 13:a=69>=u>>>0?14:19;break;case 14:a=0==(HEAP32[p>>2]|0)?16:15;break;case 15:a=37!=(HEAP32[(HEAP32[p>>2]+8|0)>>2]|0)?16:19;break;case 16:_TypeParse(f,w,v,0);a=44!=(_LexGetToken(f,h,1)|0)?17:18;break;case 17:_ProgramFail(f,6272,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=18;break;case 18:n=m+(HEAP32[3788]&15)|0;_ExpressionStackCollapse(f,p,n+1|0,q);a=_VariableAllocValueFromType(f,17112,
0,0,0);HEAP32[HEAP32[(a+4|0)>>2]>>2]=HEAP32[w>>2];_ExpressionStackPushValueNode(f,p,a);_ExpressionStackPushOperator(f,p,2,38,n);a=20;break;case 19:m=m+20|0;a=20;break;case 20:a=22;break;case 21:_ExpressionStackCollapse(f,p,n,q);_ExpressionStackPushOperator(f,p,1,r,n);a=22;break;case 22:a=62;break;case 23:a=0!=(HEAP32[(14848+(r<<3)|0)>>2]>>>4&15|0)?24:31;break;case 24:a=r;a=44==(a|0)|40==(a|0)?25:29;break;case 25:a=0==(m|0)?26:27;break;case 26:_ParserCopy(f,t);k=1;a=28;break;case 27:_ExpressionStackCollapse(f,
p,m,q);m=m-20|0;a=28;break;case 28:a=30;break;case 29:n=m+(HEAP32[(14848+(r<<3)|0)>>2]>>>4&15)|0;_ExpressionStackCollapse(f,p,n,q);_ExpressionStackPushOperator(f,p,3,r,n);a=30;break;case 30:a=61;break;case 31:a=0!=(HEAP32[(14848+(r<<3)|0)>>2]>>>8&15|0)?32:59;break;case 32:n=m+(HEAP32[(14848+(r<<3)|0)>>2]>>>8&15)|0;a=2!=(HEAP32[(14848+(r<<3)|0)>>2]>>>8&15|0)?33:35;break;case 33:a=14!=(HEAP32[(14848+(r<<3)|0)>>2]>>>8&15|0)?34:35;break;case 34:_ExpressionStackCollapse(f,p,n,q);a=36;break;case 35:_ExpressionStackCollapse(f,
p,n+1|0,q);a=36;break;case 36:a=41==(r|0)?38:37;break;case 37:a=42==(r|0)?38:39;break;case 38:_ExpressionGetStructElement(f,p,r);a=56;break;case 39:a=15==(r|0)?41:40;break;case 40:a=16==(r|0)?41:51;break;case 41:a=1<=HEAP32[(HEAP32[(HEAP32[(HEAP32[p>>2]+4|0)>>2]|0)>>2]|0)>>2]>>>0?42:43;break;case 42:a=7>=HEAP32[(HEAP32[(HEAP32[(HEAP32[p>>2]+4|0)>>2]|0)>>2]|0)>>2]>>>0?44:43;break;case 43:a=8==(HEAP32[(HEAP32[(HEAP32[(HEAP32[p>>2]+4|0)>>2]|0)>>2]|0)>>2]|0)?44:51;break;case 44:x=_ExpressionCoerceInteger(HEAP32[(HEAP32[p>>
2]+4|0)>>2]);a=15==(r|0)?45:46;break;case 45:a=0!=(x|0)?48:46;break;case 46:a=16==(r|0)?47:50;break;case 47:a=0!=(x|0)?50:48;break;case 48:a=(HEAP32[q>>2]|0)>(n|0)?49:50;break;case 49:HEAP32[q>>2]=n;a=50;break;case 50:a=51;break;case 51:_ExpressionStackPushOperator(f,p,2,r,n);l=1;a=r;a=13==(a|0)?52:14==(a|0)?53:54;break;case 52:s=s+1|0;a=55;break;case 53:s=s-1|0;a=55;break;case 54:a=55;break;case 55:a=56;break;case 56:a=39==(r|0)?57:58;break;case 57:m=m+20|0;a=58;break;case 58:a=60;break;case 59:_ProgramFail(f,
6464,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=60;break;case 60:a=61;break;case 61:a=62;break;case 62:a=103;break;case 63:a=45==(r|0)?64:89;break;case 64:a=0!=(l|0)?66:65;break;case 65:_ProgramFail(f,6040,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=66;break;case 66:a=43==(_LexGetToken(f,0,0)|0)?67:70;break;case 67:var C=f,K=HEAP32[HEAP32[(HEAP32[h>>
2]+4|0)>>2]>>2];if(0==(HEAP32[(f+12|0)>>2]|0))a=68;else var H=0,a=69;break;case 68:H=(n|0)<(HEAP32[q>>2]|0);a=69;break;case 69:_ExpressionParseFunctionCall(C,p,K,H&1);a=86;break;case 70:a=0==(HEAP32[(f+12|0)>>2]|0)?71:84;break;case 71:a=(n|0)<(HEAP32[q>>2]|0)?72:84;break;case 72:HEAP32[y>>2]=0;_VariableGet(f,HEAP32[HEAP32[(HEAP32[h>>2]+4|0)>>2]>>2],y);a=10==(HEAP32[(HEAP32[(HEAP32[y>>2]|0)>>2]|0)>>2]|0)?73:79;break;case 73:_ParserCopy(z,HEAP32[(HEAP32[y>>2]+4|0)>>2]+8|0);a=0!=(HEAP32[(HEAP32[(HEAP32[y>>
2]+4|0)>>2]|0)>>2]|0)?74:75;break;case 74:_ProgramFail(z,5832,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=75;break;case 75:a=0!=(_ExpressionParse(z,B)|0)?76:77;break;case 76:a=95!=(_LexGetToken(z,0,0)|0)?77:78;break;case 77:_ProgramFail(z,5672,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=78;break;case 78:_ExpressionStackPushValueNode(f,
p,HEAP32[B>>2]);a=83;break;case 79:a=0==(HEAP32[(HEAP32[y>>2]|0)>>2]|0)?80:81;break;case 80:_ProgramFail(f,5536,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=82;break;case 81:_ExpressionStackPushLValue(f,p,HEAP32[y>>2],0);a=82;break;case 82:a=83;break;case 83:a=85;break;case 84:_ExpressionPushInt(f,p,0);a=85;break;case 85:a=86;break;case 86:a=(n|0)<=(HEAP32[q>>2]|0)?87:88;break;case 87:HEAP32[q>>2]=2E4;a=88;break;case 88:l=
0;a=102;break;case 89:a=44<(r|0)?90:94;break;case 90:a=49>=(r|0)?91:94;break;case 91:a=0!=(l|0)?93:92;break;case 92:_ProgramFail(f,5416,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=93;break;case 93:l=0;_ExpressionStackPushValue(f,p,HEAP32[h>>2]);a=101;break;case 94:a=54<=r>>>0?95:99;break;case 95:a=69>=r>>>0?96:99;break;case 96:a=0!=(l|0)?98:97;break;case 97:_ProgramFail(f,5280,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=
STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=98;break;case 98:l=0;_ParserCopy(f,t);_TypeParse(f,E,N,0);a=_VariableAllocValueFromType(f,17112,0,0,0);HEAP32[HEAP32[(a+4|0)>>2]>>2]=HEAP32[E>>2];_ExpressionStackPushValueNode(f,p,a);a=100;break;case 99:_ParserCopy(f,t);k=1;a=100;break;case 100:a=101;break;case 101:a=102;break;case 102:a=103;break;case 103:a=104;break;case 104:a=0!=(k|0)^1?2:105;break;case 105:a=0<(m|0)?106:107;break;case 106:_ProgramFail(f,6272,(d=
STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=107;break;case 107:_ExpressionStackCollapse(f,p,0,q);a=0!=(HEAP32[p>>2]|0)?108:115;break;case 108:a=0==(HEAP32[(f+12|0)>>2]|0)?109:113;break;case 109:a=0!=(HEAP8[HEAP32[p>>2]+14|0]&255|0)?111:110;break;case 110:a=0!=(HEAP32[(HEAP32[p>>2]|0)>>2]|0)?111:112;break;case 111:_ProgramFail(f,10592,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=112;break;case 112:HEAP32[g>>2]=HEAP32[(HEAP32[p>>2]+4|0)>>2];_HeapPopStack(HEAP32[p>>2],16);a=114;break;case 113:var a=HEAP32[(HEAP32[p>>2]+4|0)>>2],D=_TypeStackSizeValue(HEAP32[(HEAP32[p>>2]+4|0)>>2])+32|0;_HeapPopStack(a,D);a=114;break;case 114:a=115;break;case 115:return _debugf(5176,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d)),STACKTOP=d,d=0!=(HEAP32[p>>2]|0)&1,STACKTOP=e,d;default:assert(0,
"bad label: "+a)}}
function _ExpressionParseFunctionCall(b,c,a,d){var e=0,f=0,g=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var h,l,k,m,n,q=g,p=g+8,s,t,r,u,w=g+16,v;h=b;l=c;k=a;m=d;s=n=0;r=_LexGetToken(h,0,1);u=HEAP32[(h+12|0)>>2];e=0!=(m|0)?2:9;break;case 2:_VariableGet(h,k,q);e=10==(HEAP32[(HEAP32[(HEAP32[q>>2]|0)>>2]|0)>>2]|0)?3:4;break;case 3:_ExpressionParseMacroCall(h,l,k,HEAP32[(HEAP32[q>>2]+4|0)>>2]);e=56;break;case 4:e=9!=(HEAP32[(HEAP32[(HEAP32[q>>2]|0)>>
2]|0)>>2]|0)?5:6;break;case 5:e=HEAP32[(HEAP32[q>>2]|0)>>2];_ProgramFail(h,4080,(f=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=6;break;case 6:_ExpressionStackPushValueByType(h,l,HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]|0)>>2]);n=HEAP32[(HEAP32[l>>2]+4|0)>>2];_HeapPushStackFrame();s=_HeapAllocStack(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+4|0)>>2]<<2);e=0==(s|0)?7:8;break;case 7:_ProgramFail(h,5024,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+
7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=8;break;case 8:e=10;break;case 9:_ExpressionPushInt(h,l,0);HEAP32[(h+12|0)>>2]=1;e=10;break;case 10:t=0;e=11;break;case 11:e=0!=(m|0)?12:14;break;case 12:e=(t|0)<(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+4|0)>>2]|0)?13:14;break;case 13:e=_VariableAllocValueFromType(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+12|0)>>2]+(t<<2)|0)>>2],0,0,0);HEAP32[(s+(t<<2)|0)>>2]=e;e=14;break;case 14:e=0!=(_ExpressionParse(h,p)|0)?15:26;break;
case 15:e=0!=(m|0)?16:22;break;case 16:e=(t|0)<(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+4|0)>>2]|0)?17:18;break;case 17:_ExpressionAssign(h,HEAP32[(s+(t<<2)|0)>>2],HEAP32[p>>2],1,k,t+1|0,0);_VariableStackPop(h,HEAP32[p>>2]);e=21;break;case 18:e=0!=(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+8|0)>>2]|0)?20:19;break;case 19:e=k;_ProgramFail(h,4856,(f=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=20;break;case 20:e=21;break;case 21:e=22;break;case 22:t=
t+1|0;r=_LexGetToken(h,0,1);e=1!=(r|0)?23:25;break;case 23:e=44!=(r|0)?24:25;break;case 24:_ProgramFail(h,4624,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=25;break;case 25:e=27;break;case 26:r=_LexGetToken(h,0,1);e=27;break;case 27:e=28;break;case 28:e=44!=(r|0)?11:29;break;case 29:e=0!=(m|0)?30:55;break;case 30:e=(t|0)<(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+4|0)>>2]|0)?31:32;break;case 31:e=k;_ProgramFail(h,4456,(f=
STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=32;break;case 32:e=0==(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+20|0)>>2]|0)?33:53;break;case 33:e=0==(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+24|0)>>2]|0)?34:35;break;case 34:e=k;_ProgramFail(h,4280,(f=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=35;break;case 35:_ParserCopy(w,HEAP32[(HEAP32[q>>2]+4|0)>>2]+24|0);var x=h,y=k,e=0!=(HEAP32[(HEAP32[(HEAP32[q>>
2]+4|0)>>2]+20|0)>>2]|0)?36:37;break;case 36:var z=HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+4|0)>>2],e=38;break;case 37:z=0;e=38;break;case 38:_VariableStackFrameAdd(x,y,z);HEAP32[(HEAP32[4290]+44|0)>>2]=t;HEAP32[(HEAP32[4290]+36|0)>>2]=n;v=0;e=39;break;case 39:e=(v|0)<(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+4|0)>>2]|0)?40:42;break;case 40:_VariableDefine(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+16|0)>>2]+(v<<2)|0)>>2],HEAP32[(s+(v<<2)|0)>>2],0,1);e=41;break;case 41:v=v+1|0;e=39;break;case 42:e=
2!=(_ParseStatement(w,1)|0)?43:44;break;case 43:_ProgramFail(w,3952,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=44;break;case 44:e=0!=(m|0)?45:52;break;case 45:e=0==(HEAP32[(w+12|0)>>2]|0)?46:48;break;case 46:e=16856!=(HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]|0)>>2]|0)?47:48;break;case 47:e=HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]|0)>>2];_ProgramFail(w,3816,(f=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=51;break;case 48:e=6==(HEAP32[(w+12|0)>>2]|0)?49:50;break;case 49:e=HEAP32[(w+20|0)>>2];_ProgramFail(w,3632,(f=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=50;break;case 50:e=51;break;case 51:e=52;break;case 52:_VariableStackFramePop(h);e=54;break;case 53:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[q>>2]+4|0)>>2]+20|0)>>2]](h,n,s,t);e=54;break;case 54:_HeapPopStackFrame();e=55;break;case 55:HEAP32[(h+12|0)>>2]=
u;e=56;break;case 56:STACKTOP=g;return;default:assert(0,"bad label: "+e)}}
function _ExpressionParseMacroCall(b,c,a,d){var e=0,f=0,g=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var h,l,k,m,n,q=g,p,s,t,r=g+8,u,w=g+40;h=b;l=c;k=a;m=d;p=n=0;e=0==(HEAP32[(h+12|0)>>2]|0)?2:5;break;case 2:_ExpressionStackPushValueByType(h,l,19032);n=HEAP32[(HEAP32[l>>2]+4|0)>>2];_HeapPushStackFrame();p=_HeapAllocStack(HEAP32[(m|0)>>2]<<2);e=0==(p|0)?3:4;break;case 3:_ProgramFail(h,5024,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,
assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=4;break;case 4:e=6;break;case 5:_ExpressionPushInt(h,l,0);e=6;break;case 6:s=0;e=7;break;case 7:e=0!=(_ExpressionParse(h,q)|0)?8:17;break;case 8:e=0==(HEAP32[(h+12|0)>>2]|0)?9:13;break;case 9:e=(s|0)<(HEAP32[(m|0)>>2]|0)?10:11;break;case 10:HEAP32[(p+(s<<2)|0)>>2]=HEAP32[q>>2];e=12;break;case 11:e=k;_ProgramFail(h,4856,(f=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=12;break;
case 12:e=13;break;case 13:s=s+1|0;t=_LexGetToken(h,0,1);e=1!=(t|0)?14:16;break;case 14:e=44!=(t|0)?15:16;break;case 15:_ProgramFail(h,4624,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=16;break;case 16:e=18;break;case 17:t=_LexGetToken(h,0,1);e=18;break;case 18:e=19;break;case 19:e=44!=(t|0)?7:20;break;case 20:e=0==(HEAP32[(h+12|0)>>2]|0)?21:30;break;case 21:e=(s|0)<(HEAP32[(m|0)>>2]|0)?22:23;break;case 22:e=k;_ProgramFail(h,
4456,(f=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=23;break;case 23:e=0==(HEAP32[(m+8|0)>>2]|0)?24:25;break;case 24:e=k;_ProgramFail(h,4280,(f=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=e,f));STACKTOP=f;e=25;break;case 25:_ParserCopy(r,m+8|0);_VariableStackFrameAdd(h,k,0);HEAP32[(HEAP32[4290]+44|0)>>2]=s;HEAP32[(HEAP32[4290]+36|0)>>2]=n;u=0;e=26;break;case 26:e=(u|0)<(HEAP32[(m|0)>>2]|0)?27:29;break;case 27:_VariableDefine(h,
HEAP32[(HEAP32[(m+4|0)>>2]+(u<<2)|0)>>2],HEAP32[(p+(u<<2)|0)>>2],0,1);e=28;break;case 28:u=u+1|0;e=26;break;case 29:_ExpressionParse(r,w);_ExpressionAssign(h,n,HEAP32[w>>2],1,k,0,0);_VariableStackFramePop(h);_HeapPopStackFrame();e=30;break;case 30:STACKTOP=g;return;default:assert(0,"bad label: "+e)}}
function _ExpressionParseInt(b){var c=0,a=0,d=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var e,f=d,g;e=b;g=0;c=0!=(_ExpressionParse(e,f)|0)?3:2;break;case 2:_ProgramFail(e,5672,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=3;break;case 3:c=0==(HEAP32[(e+12|0)>>2]|0)?4:9;break;case 4:c=1<=HEAP32[(HEAP32[(HEAP32[f>>2]|0)>>2]|0)>>2]>>>0?5:6;break;case 5:c=7>=HEAP32[(HEAP32[(HEAP32[f>>
2]|0)>>2]|0)>>2]>>>0?8:6;break;case 6:c=8==(HEAP32[(HEAP32[(HEAP32[f>>2]|0)>>2]|0)>>2]|0)?8:7;break;case 7:c=HEAP32[(HEAP32[f>>2]|0)>>2];_ProgramFail(e,3528,(a=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=c,a));STACKTOP=a;c=8;break;case 8:g=_ExpressionCoerceInteger(HEAP32[f>>2]);_VariableStackPop(e,HEAP32[f>>2]);c=9;break;case 9:return b=g,STACKTOP=d,b;default:assert(0,"bad label: "+c)}}
function _HeapInit(b){for(var c=0,c=1;;)switch(c){case 1:var a,d,e;a=b;e=0;c=_malloc(a);HEAP32[4620]=c;c=2;break;case 2:c=0!=((HEAP32[4620]+e|0)&3|0)?3:4;break;case 3:e=e+1|0;c=2;break;case 4:HEAP32[4494]=HEAP32[4620]+e|0;HEAP32[4618]=HEAP32[4620]+e|0;HEAP32[HEAP32[4494]>>2]=0;HEAP32[4622]=HEAP32[4620]+((a-4|0)+e|0)|0;d=HEAP32[4756]=0;c=5;break;case 5:c=8>(d|0)?6:8;break;case 6:HEAP32[(18992+(d<<2)|0)>>2]=0;c=7;break;case 7:d=d+1|0;c=5;break;case 8:return;default:assert(0,"bad label: "+c)}}
function _HeapAllocStack(b){for(var c=0,c=1;;)switch(c){case 1:var a,d,e,f;d=b;e=HEAP32[4618];f=HEAP32[4618]+(((d+4|0)-1|0)&-4)|0;c=f>>>0>HEAP32[4622]>>>0?2:3;break;case 2:a=0;c=4;break;case 3:HEAP32[4618]=f;_memset(e,0,d);a=e;c=4;break;case 4:return a;default:assert(0,"bad label: "+c)}}function _HeapUnpopStack(b){HEAP32[4618]=HEAP32[4618]+(((b+4|0)-1|0)&-4)|0}
function _HeapPopStack(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e,f;e=b;f=((c+4|0)-1|0)&-4;a=(f|0)>(HEAP32[4618]-(HEAP32[4620]|0)|0)?2:3;break;case 2:d=0;a=7;break;case 3:HEAP32[4618]=HEAP32[4618]+(-f|0)|0;a=0==(e|0)?6:4;break;case 4:a=(HEAP32[4618]|0)==(e|0)?6:5;break;case 5:throw ___assert_fail(10200,11520,109,12424),"Reached an unreachable!";case 6:d=1;a=7;break;case 7:return d;default:assert(0,"bad label: "+a)}}
function _HeapPushStackFrame(){HEAP32[HEAP32[4618]>>2]=HEAP32[4494];HEAP32[4494]=HEAP32[4618];HEAP32[4618]=HEAP32[4618]+4|0}function _HeapPopStackFrame(){for(var b=0,b=1;;)switch(b){case 1:var c,b=0!=(HEAP32[HEAP32[4494]>>2]|0)?2:3;break;case 2:HEAP32[4618]=HEAP32[4494];HEAP32[4494]=HEAP32[HEAP32[4494]>>2];c=1;b=4;break;case 3:c=0;b=4;break;case 4:return c;default:assert(0,"bad label: "+b)}}function _HeapAllocMem(b){return _calloc(b,1)}function _HeapFreeMem(b){_free(b)}
function _TypeAdd(b,c,a,d,e,f,g){b=_VariableAlloc(b,44,1);HEAP32[(b|0)>>2]=a;HEAP32[(b+4|0)>>2]=d;HEAP32[(b+8|0)>>2]=f;HEAP32[(b+12|0)>>2]=g;HEAP32[(b+16|0)>>2]=e;HEAP32[(b+32|0)>>2]=0;HEAP32[(b+20|0)>>2]=c;HEAP32[(b+24|0)>>2]=0;HEAP32[(b+36|0)>>2]=1;HEAP32[(b+28|0)>>2]=HEAP32[(c+24|0)>>2];return HEAP32[(c+24|0)>>2]=b}
function _TypeGetMatching(b,c,a,d,e,f){var g=0,h=0,l=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,m,n,q,p,s,t,r,u,w;m=b;n=c;q=a;p=d;s=e;t=f;w=HEAP32[(n+24|0)>>2];g=2;break;case 2:if(0!=(w|0))g=3;else var v=0,g=7;break;case 3:if((HEAP32[(w|0)>>2]|0)!=(q|0))var x=1,g=6;else g=4;break;case 4:(HEAP32[(w+4|0)>>2]|0)!=(p|0)?(x=1,g=6):g=5;break;case 5:x=(HEAP32[(w+16|0)>>2]|0)!=(s|0);g=6;break;case 6:v=x;g=7;break;case 7:g=v?8:9;break;case 8:w=HEAP32[(w+28|0)>>2];g=2;break;
case 9:g=0!=(w|0)?10:14;break;case 10:g=0!=(t|0)?11:12;break;case 11:k=w;g=20;break;case 12:g=s;_ProgramFail(m,9592,(h=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[h>>2]=g,h));STACKTOP=h;g=13;break;case 13:g=14;break;case 14:g=q;g=11==(g|0)?15:12==(g|0)?16:15==(g|0)?17:18;break;case 15:r=4;u=HEAP32[4510];g=19;break;case 16:r=Math_imul(p,HEAP32[(n+8|0)>>2])|0;u=HEAP32[(n+12|0)>>2];g=19;break;case 17:r=4;u=HEAP32[4614];g=19;break;case 18:u=r=0;g=19;break;case 19:k=_TypeAdd(m,
n,q,p,s,r,u);g=20;break;case 20:return b=k,STACKTOP=l,b;default:assert(0,"bad label: "+g)}}function _TypeStackSizeValue(b){for(var c=0,c=1;;)switch(c){case 1:var a,d;d=b;c=0!=(d|0)?2:4;break;case 2:c=0!=(HEAP8[d+13|0]<<24>>24|0)?3:4;break;case 3:a=_TypeSizeValue(d,0);c=5;break;case 4:a=0;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _TypeSizeValue(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e,f;e=b;f=c;a=1<=HEAP32[(HEAP32[(e|0)>>2]|0)>>2]>>>0?2:5;break;case 2:a=7>=HEAP32[(HEAP32[(e|0)>>2]|0)>>2]>>>0?3:5;break;case 3:a=0!=(f|0)?5:4;break;case 4:d=4;a=8;break;case 5:a=12!=(HEAP32[(HEAP32[(e|0)>>2]|0)>>2]|0)?6:7;break;case 6:d=HEAP32[(HEAP32[(e|0)>>2]+8|0)>>2];a=8;break;case 7:d=Math_imul(HEAP32[(HEAP32[(HEAP32[(e|0)>>2]+20|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(e|0)>>2]+4|0)>>2])|0;a=8;break;case 8:return d;default:assert(0,
"bad label: "+a)}}function _TypeSize(b,c,a){for(var d=0,d=1;;)switch(d){case 1:var e,f,g,h;f=b;g=c;h=a;d=1<=HEAP32[(f|0)>>2]>>>0?2:5;break;case 2:d=7>=HEAP32[(f|0)>>2]>>>0?3:5;break;case 3:d=0!=(h|0)?5:4;break;case 4:e=4;d=8;break;case 5:d=12!=(HEAP32[(f|0)>>2]|0)?6:7;break;case 6:e=HEAP32[(f+8|0)>>2];d=8;break;case 7:e=Math_imul(HEAP32[(HEAP32[(f+20|0)>>2]+8|0)>>2],g)|0;d=8;break;case 8:return e;default:assert(0,"bad label: "+d)}}
function _TypeAddBaseType(b,c,a,d){HEAP32[(b|0)>>2]=c;HEAP32[(b+4|0)>>2]=0;HEAP32[(b+8|0)>>2]=a;HEAP32[(b+12|0)>>2]=d;HEAP32[(b+16|0)>>2]=HEAP32[4492];HEAP32[(b+32|0)>>2]=0;HEAP32[(b+20|0)>>2]=0;HEAP32[(b+24|0)>>2]=0;HEAP32[(b+36|0)>>2]=0;HEAP32[(b+28|0)>>2]=HEAP32[4272];HEAP32[4272]=b}
function _TypeInit(){var b=STACKTOP;STACKTOP=STACKTOP+56|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;var c=b+8,a=b+16,d=b+24,e=b+32,f=b+48;HEAP32[4614]=(b+4|0)-(b|0)|0;HEAP32[4510]=(f+4|0)-(f|0)|0;HEAP32[4272]=0;_TypeAddBaseType(18408,1,4,HEAP32[4614]);_TypeAddBaseType(17984,2,2,(c+2|0)-(c|0)|0);_TypeAddBaseType(19088,3,1,(a+1|0)-(a|0)|0);_TypeAddBaseType(18264,4,4,(d+4|0)-(d|0)|0);_TypeAddBaseType(17016,5,4,HEAP32[4614]);_TypeAddBaseType(16920,6,2,(c+2|0)-(c|0)|0);_TypeAddBaseType(16968,7,4,(d+4|0)-(d|
0)|0);_TypeAddBaseType(16856,0,0,1);_TypeAddBaseType(18944,9,4,HEAP32[4614]);_TypeAddBaseType(18216,10,4,HEAP32[4614]);_TypeAddBaseType(18496,16,0,1);_TypeAddBaseType(19032,8,8,(e+8|0)-(e|0)|0);_TypeAddBaseType(17112,17,8,(e+8|0)-(e|0)|0);c=_TypeAdd(0,19088,12,0,HEAP32[4492],1,(a+1|0)-(a|0)|0);HEAP32[4788]=c;c=_TypeAdd(0,19088,11,0,HEAP32[4492],4,HEAP32[4510]);HEAP32[4784]=c;c=_TypeAdd(0,HEAP32[4784],11,0,HEAP32[4492],4,HEAP32[4510]);HEAP32[4786]=c;c=_TypeAdd(0,16856,11,0,HEAP32[4492],4,HEAP32[4510]);
HEAP32[4226]=c;STACKTOP=b}
function _TypeParseStruct(b,c,a){var d=0,e=0,f=STACKTOP;STACKTOP=STACKTOP+24|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l,k=f,m=f+8,n=f+16,q,p,s,t;g=b;h=c;l=a;s=_LexGetToken(g,k,0);d=45==(s|0)?2:3;break;case 2:_LexGetToken(g,k,1);q=HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2];s=_LexGetToken(g,0,0);d=4;break;case 3:q=_PlatformMakeTempName(13192);d=4;break;case 4:s=_TypeGetMatching(g,17064,0!=(l|0)?13:14,0,q,52!=(s|0)&1);HEAP32[h>>2]=s;s=_LexGetToken(g,0,0);d=52!=(s|0)?5:
8;break;case 5:d=0==(HEAP32[(HEAP32[h>>2]+32|0)>>2]|0)?6:7;break;case 6:d=HEAP32[HEAP32[(HEAP32[k>>2]+4|0)>>2]>>2];_ProgramFail(g,11368,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;d=7;break;case 7:d=32;break;case 8:d=0!=(HEAP32[4290]|0)?9:10;break;case 9:_ProgramFail(g,8520,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=10;break;case 10:_LexGetToken(g,0,1);d=_VariableAlloc(g,
228,1);HEAP32[(HEAP32[h>>2]+32|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[h>>2]+32|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[h>>2]+32|0)>>2]+8|0;_TableInitTable(HEAP32[(HEAP32[h>>2]+32|0)>>2],HEAP32[(HEAP32[h>>2]+32|0)>>2]+8|0,11,1);d=11;break;case 11:_TypeParse(g,m,n,0);d=0==(HEAP32[m>>2]|0)?13:12;break;case 12:d=0==(HEAP32[n>>2]|0)?13:14;break;case 13:_ProgramFail(g,6664,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=14;break;case 14:p=_VariableAllocValueAndData(g,
4,0,0,1);HEAP32[(p|0)>>2]=HEAP32[m>>2];d=0!=(l|0)?15:18;break;case 15:t=HEAP32[(HEAP32[(p|0)>>2]+12|0)>>2];d=0!=(HEAP32[(HEAP32[h>>2]+8|0)>>2]&(t-1|0)|0)?16:17;break;case 16:d=HEAP32[h>>2]+8|0;HEAP32[d>>2]=HEAP32[d>>2]+(t-(HEAP32[(HEAP32[h>>2]+8|0)>>2]&(t-1|0))|0)|0;d=17;break;case 17:HEAP32[HEAP32[(p+4|0)>>2]>>2]=HEAP32[(HEAP32[h>>2]+8|0)>>2];var d=_TypeSizeValue(p,1),r=HEAP32[h>>2]+8|0;HEAP32[r>>2]=HEAP32[r>>2]+d|0;d=21;break;case 18:HEAP32[HEAP32[(p+4|0)>>2]>>2]=0;d=(HEAP32[(HEAP32[(p|0)>>2]+8|
0)>>2]|0)>(HEAP32[(HEAP32[h>>2]+8|0)>>2]|0)?19:20;break;case 19:d=_TypeSizeValue(p,1);HEAP32[(HEAP32[h>>2]+8|0)>>2]=d;d=20;break;case 20:d=21;break;case 21:d=(HEAP32[(HEAP32[h>>2]+12|0)>>2]|0)<(HEAP32[(HEAP32[(p|0)>>2]+12|0)>>2]|0)?22:23;break;case 22:HEAP32[(HEAP32[h>>2]+12|0)>>2]=HEAP32[(HEAP32[(p|0)>>2]+12|0)>>2];d=23;break;case 23:d=0!=(_TableSet(HEAP32[(HEAP32[h>>2]+32|0)>>2],HEAP32[n>>2],p,HEAP32[(g+4|0)>>2],HEAP16[(g+8|0)>>1]<<16>>16,HEAP16[(g+10|0)>>1]<<16>>16)|0)?25:24;break;case 24:_ProgramFail(g,
5056,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=n,e));STACKTOP=e;d=25;break;case 25:d=50!=(_LexGetToken(g,0,1)|0)?26:27;break;case 26:_ProgramFail(g,3456,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=27;break;case 27:d=28;break;case 28:d=53!=(_LexGetToken(g,0,0)|0)?11:29;break;case 29:t=HEAP32[(HEAP32[h>>2]+12|0)>>2];d=0!=(HEAP32[(HEAP32[h>>2]+8|0)>>2]&(t-1|0)|0)?30:31;break;case 30:d=
HEAP32[h>>2]+8|0;HEAP32[d>>2]=HEAP32[d>>2]+(t-(HEAP32[(HEAP32[h>>2]+8|0)>>2]&(t-1|0))|0)|0;d=31;break;case 31:_LexGetToken(g,0,1);d=32;break;case 32:STACKTOP=f;return;default:assert(0,"bad label: "+d)}}function _TypeParse(b,c,a,d){var e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;_TypeParseFront(b,e,d);_TypeParseIdentPart(b,HEAP32[e>>2],c,a);STACKTOP=e}
function _TypeCreateOpaqueStruct(b,c,a){c=_TypeGetMatching(b,17064,13,0,c,0);b=_VariableAlloc(b,228,1);HEAP32[(c+32|0)>>2]=b;HEAP32[(HEAP32[(c+32|0)>>2]+4|0)>>2]=HEAP32[(c+32|0)>>2]+8|0;_TableInitTable(HEAP32[(c+32|0)>>2],HEAP32[(c+32|0)>>2]+8|0,11,1);HEAP32[(c+8|0)>>2]=a;return c}
function _TypeParseEnum(b,c){var a=0,d=0,e=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f,g,h=e,l=e+8,k,m=e+24,n;f=b;g=c;HEAP32[m>>2]=0;k=_LexGetToken(f,h,0);a=45==(k|0)?2:3;break;case 2:_LexGetToken(f,h,1);n=HEAP32[HEAP32[(HEAP32[h>>2]+4|0)>>2]>>2];k=_LexGetToken(f,0,0);a=4;break;case 3:n=_PlatformMakeTempName(13200);a=4;break;case 4:_TypeGetMatching(f,17064,15,0,n,52!=(k|0)&1);HEAP32[g>>2]=18408;a=52!=(k|0)?5:8;break;case 5:a=0==(HEAP32[(HEAP32[g>>
2]+32|0)>>2]|0)?6:7;break;case 6:a=n;_ProgramFail(f,2328,(d=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=a,d));STACKTOP=d;a=7;break;case 7:a=20;break;case 8:a=0!=(HEAP32[4290]|0)?9:10;break;case 9:_ProgramFail(f,1408,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=10;break;case 10:_LexGetToken(f,0,1);HEAP32[(HEAP32[g>>2]+32|0)>>2]=18544;_memset(l,0,16);HEAP32[(l|0)>>2]=18408;HEAP32[(l+
4|0)>>2]=m;a=11;break;case 11:a=45!=(_LexGetToken(f,h,1)|0)?12:13;break;case 12:_ProgramFail(f,872,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=13;break;case 13:n=HEAP32[HEAP32[(HEAP32[h>>2]+4|0)>>2]>>2];a=2==(_LexGetToken(f,0,0)|0)?14:15;break;case 14:_LexGetToken(f,0,1);a=_ExpressionParseInt(f);HEAP32[m>>2]=a;a=15;break;case 15:_VariableDefine(f,n,l,0,0);k=_LexGetToken(f,0,1);a=1!=(k|0)?16:18;break;case 16:a=53!=(k|
0)?17:18;break;case 17:_ProgramFail(f,424,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=18;break;case 18:HEAP32[m>>2]=HEAP32[m>>2]+1|0;a=19;break;case 19:a=1==(k|0)?11:20;break;case 20:STACKTOP=e;return;default:assert(0,"bad label: "+a)}}
function _TypeParseFront(b,c,a){var d=0,e=0,f=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l,k,m=f,n=f+32,q,p,s=f+40,t,r;h=b;l=c;k=a;t=p=0;HEAP32[l>>2]=0;_ParserCopy(m,h);q=_LexGetToken(h,n,1);d=2;break;case 2:if(63==(q|0))var u=1,d=6;else d=3;break;case 3:64==(q|0)?(u=1,d=6):d=4;break;case 4:65==(q|0)?(u=1,d=6):d=5;break;case 5:u=66==(q|0);d=6;break;case 6:d=u?7:10;break;case 7:d=63==(q|0)?8:9;break;case 8:t=1;d=9;break;case 9:q=_LexGetToken(h,
n,1);d=2;break;case 10:d=0!=(k|0)?11:12;break;case 11:HEAP32[k>>2]=t;d=12;break;case 12:d=61==(q|0)?14:13;break;case 13:d=69==(q|0)?14:23;break;case 14:r=_LexGetToken(h,n,0);p=69==(q|0)&1;d=54!=(r|0)?15:22;break;case 15:d=60!=(r|0)?16:22;break;case 16:d=62!=(r|0)?17:22;break;case 17:d=55!=(r|0)?18:22;break;case 18:d=69==(q|0)?19:20;break;case 19:HEAP32[l>>2]=17016;d=21;break;case 20:HEAP32[l>>2]=18408;d=21;break;case 21:g=1;d=39;break;case 22:q=_LexGetToken(h,n,1);d=23;break;case 23:switch(q|0){case 54:d=
24;break;case 62:d=25;break;case 55:d=26;break;case 60:d=27;break;case 56:case 57:d=28;break;case 58:d=29;break;case 67:case 68:d=30;break;case 59:d=33;break;case 45:d=36;break;default:d=37}break;case 24:HEAP32[l>>2]=0!=(p|0)?17016:18408;d=38;break;case 25:HEAP32[l>>2]=0!=(p|0)?16920:17984;d=38;break;case 26:HEAP32[l>>2]=19088;d=38;break;case 27:HEAP32[l>>2]=0!=(p|0)?16968:18264;d=38;break;case 28:HEAP32[l>>2]=19032;d=38;break;case 29:HEAP32[l>>2]=16856;d=38;break;case 30:d=0!=(HEAP32[l>>2]|0)?31:
32;break;case 31:_ProgramFail(h,12040,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=32;break;case 32:_TypeParseStruct(h,l,67==(q|0)&1);d=38;break;case 33:d=0!=(HEAP32[l>>2]|0)?34:35;break;case 34:_ProgramFail(h,12040,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=35;break;case 35:_TypeParseEnum(h,l);d=38;break;case 36:_VariableGet(h,HEAP32[HEAP32[(HEAP32[n>>
2]+4|0)>>2]>>2],s);HEAP32[l>>2]=HEAP32[HEAP32[(HEAP32[s>>2]+4|0)>>2]>>2];d=38;break;case 37:_ParserCopy(h,m);g=0;d=39;break;case 38:g=1;d=39;break;case 39:return b=g,STACKTOP=f,b;default:assert(0,"bad label: "+d)}}
function _TypeParseBack(b,c){var a=0,d=0,e=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f,g,h,l=e,k;g=b;h=c;_ParserCopy(l,g);a=39==(_LexGetToken(g,0,1)|0)?2:5;break;case 2:a=HEAP32[(g+12|0)>>2];HEAP32[(g+12|0)>>2]=0;k=_ExpressionParseInt(g);HEAP32[(g+12|0)>>2]=a;a=40!=(_LexGetToken(g,0,1)|0)?3:4;break;case 3:_ProgramFail(g,11664,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=
d;a=4;break;case 4:f=g;a=_TypeParseBack(g,h);f=_TypeGetMatching(f,a,12,k,HEAP32[4492],1);a=6;break;case 5:_ParserCopy(g,l);f=h;a=6;break;case 6:return d=f,STACKTOP=e,d;default:assert(0,"bad label: "+a)}}
function _TypeParseIdentPart(b,c,a,d){var e=0,f=0,g=STACKTOP;STACKTOP=STACKTOP+40|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var h,l,k,m=g,n=g+32,q;h=b;e=c;l=a;k=d;q=0;HEAP32[l>>2]=e;HEAP32[k>>2]=HEAP32[4492];e=2;break;case 2:e=0!=(q|0)^1?3:18;break;case 3:_ParserCopy(m,h);e=_LexGetToken(h,n,1);e=45==(e|0)?12:43==(e|0)?4:30==(e|0)?9:16;break;case 4:e=0!=(HEAP32[l>>2]|0)?5:6;break;case 5:_ProgramFail(h,12040,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=6;break;case 6:_TypeParse(h,l,k,0);e=44!=(_LexGetToken(h,0,1)|0)?7:8;break;case 7:_ProgramFail(h,11288,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=8;break;case 8:e=17;break;case 9:e=0==(HEAP32[l>>2]|0)?10:11;break;case 10:_ProgramFail(h,12040,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;
e=11;break;case 11:e=_TypeGetMatching(h,HEAP32[l>>2],11,0,HEAP32[4492],1);HEAP32[l>>2]=e;e=17;break;case 12:e=0==(HEAP32[l>>2]|0)?14:13;break;case 13:e=(HEAP32[k>>2]|0)!=(HEAP32[4492]|0)?14:15;break;case 14:_ProgramFail(h,12040,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=15;break;case 15:HEAP32[k>>2]=HEAP32[HEAP32[(HEAP32[n>>2]+4|0)>>2]>>2];q=1;e=17;break;case 16:_ParserCopy(h,m);q=1;e=17;break;case 17:e=2;break;case 18:e=
0==(HEAP32[l>>2]|0)?19:20;break;case 19:_ProgramFail(h,12040,(f=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=0,f));STACKTOP=f;e=20;break;case 20:e=(HEAP32[k>>2]|0)!=(HEAP32[4492]|0)?21:22;break;case 21:e=_TypeParseBack(h,HEAP32[l>>2]);HEAP32[l>>2]=e;e=22;break;case 22:STACKTOP=g;return;default:assert(0,"bad label: "+e)}}function _VariableInit(){_TableInitTable(18544,18552,97,1);_TableInitTable(17176,17184,97,1);HEAP32[4290]=0}
function _VariableFree(b){for(var c=0,c=1;;)switch(c){case 1:var a;a=b;c=0!=HEAP8[a+12|0]<<24>>24?2:9;break;case 2:c=18944==(HEAP32[(a|0)>>2]|0)?3:6;break;case 3:c=0==(HEAP32[(HEAP32[(a+4|0)>>2]+20|0)>>2]|0)?4:6;break;case 4:c=0!=(HEAP32[(HEAP32[(a+4|0)>>2]+24|0)>>2]|0)?5:6;break;case 5:_HeapFreeMem(HEAP32[(HEAP32[(a+4|0)>>2]+24|0)>>2]);c=6;break;case 6:c=18216==(HEAP32[(a|0)>>2]|0)?7:8;break;case 7:_HeapFreeMem(HEAP32[(HEAP32[(a+4|0)>>2]+8|0)>>2]);c=8;break;case 8:_HeapFreeMem(a);c=9;break;case 9:return;
default:assert(0,"bad label: "+c)}}
function _VariableAlloc(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l;g=b;h=c;d=0!=(a|0)?2:3;break;case 2:l=_HeapAllocMem(h);d=4;break;case 3:l=_HeapAllocStack(h);d=4;break;case 4:d=0==(l|0)?5:6;break;case 5:_ProgramFail(g,8568,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=6;break;case 6:return b=l,STACKTOP=f,b;default:assert(0,"bad label: "+d)}}
function _VariableAllocValueAndData(b,c,a,d,e){b=_VariableAlloc(b,c+16|0,e);HEAP32[(b+4|0)>>2]=b+16|0;HEAP8[b+12|0]=e&255;HEAP8[b+13|0]=(0!=(e|0)^1)&1;HEAP8[b+14|0]=a&255;HEAP32[(b+8|0)>>2]=d;return b}
function _VariableAllocValueFromType(b,c,a,d,e){for(var f=0,f=1;;)switch(f){case 1:var g,h,l,k,m;g=b;h=c;l=a;k=d;m=e;f=_TypeSize(h,HEAP32[(h+4|0)>>2],0);g=_VariableAllocValueAndData(g,f,l,k,m);f=0<(f|0)?4:2;break;case 2:f=16856==(h|0)?4:3;break;case 3:throw ___assert_fail(11304,8472,109,12312),"Reached an unreachable!";case 4:return HEAP32[(g|0)>>2]=h,g;default:assert(0,"bad label: "+f)}}
function _VariableAllocValueAndCopy(b,c,a){var d=0,e=STACKTOP;STACKTOP=STACKTOP+256|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var f,g,h,l,k=e,m;f=b;g=c;h=a;l=HEAP32[(g|0)>>2];m=_TypeSizeValue(g,1);d=256>=(m|0)?3:2;break;case 2:throw ___assert_fail(6600,8472,123,12344),"Reached an unreachable!";case 3:return b=k|0,c=HEAP32[(g+4|0)>>2],a=m,assert(0===a%1),_memcpy(b,c,a)|0,f=_VariableAllocValueAndData(f,m,HEAP8[g+14|0]<<24>>24,HEAP32[(g+8|0)>>2],h),HEAP32[(f|0)>>2]=l,l=HEAP32[(f+
4|0)>>2],k|=0,assert(0===m%1),_memcpy(l,k,m)|0,m=f,STACKTOP=e,m;default:assert(0,"bad label: "+d)}}function _VariableAllocValueFromExistingData(b,c,a,d,e){b=_VariableAlloc(b,16,0);HEAP32[(b|0)>>2]=c;HEAP32[(b+4|0)>>2]=a;HEAP8[b+12|0]=0;HEAP8[b+13|0]=0;HEAP8[b+14|0]=d&255;HEAP32[(b+8|0)>>2]=e;return b}
function _VariableAllocValueShared(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,a=b;d=c;var e=a,f=HEAP32[(d|0)>>2],g=HEAP32[(d+4|0)>>2],h=HEAP8[d+14|0]<<24>>24,a=0!=(HEAP8[d+14|0]<<24>>24|0)?2:3;break;case 2:var l=d,a=4;break;case 3:l=0;a=4;break;case 4:return _VariableAllocValueFromExistingData(e,f,g,h,l);default:assert(0,"bad label: "+a)}}
function _VariableDefine(b,c,a,d,e){var f=0,g=0,h=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(f=1;;)switch(f){case 1:var l,k,m,n,q,p;l=b;k=c;m=a;n=d;q=e;f=0!=(m|0)?2:3;break;case 2:p=_VariableAllocValueAndCopy(l,m,0==(HEAP32[4290]|0)&1);f=4;break;case 3:p=_VariableAllocValueFromType(l,n,q,0,0==(HEAP32[4290]|0)&1);f=4;break;case 4:HEAP8[p+14|0]=q&255;f=0==(HEAP32[4290]|0)?5:6;break;case 5:var s=18544,f=7;break;case 6:s=HEAP32[4290]+48|0;f=7;break;case 7:var t=k,r=p,f=0!=(l|0)?8:9;break;case 8:var u=
HEAP32[(l+4|0)>>2],f=10;break;case 9:u=0;f=10;break;case 10:f=0!=(l|0)?11:12;break;case 11:var w=HEAP16[(l+8|0)>>1]<<16>>16,f=13;break;case 12:w=0;f=13;break;case 13:f=0!=(l|0)?14:15;break;case 14:var v=HEAP16[(l+10|0)>>1]<<16>>16,f=16;break;case 15:v=0;f=16;break;case 16:f=0!=(_TableSet(s,t,r,u,w,v)|0)?18:17;break;case 17:f=k;_ProgramFail(l,5E3,(g=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=f,g));STACKTOP=g;f=18;break;case 18:return b=p,STACKTOP=h,b;default:assert(0,
"bad label: "+f)}}
function _VariableDefineButIgnoreIdentical(b,c,a,d,e){var f=0,g=STACKTOP;STACKTOP=STACKTOP+288|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(f=1;;)switch(f){case 1:var h,l,k,m,n,q=g,p=g+8,s=g+16,t=g+24,r=g+32,u,w,v;l=b;k=c;m=a;f=d;n=e;f=0!=(f|0)?2:11;break;case 2:u=r|0;w=r+255|0;_memset(r,0,256);f=u;u=f+1|0;HEAP8[f]=47;_strncpy(u,HEAP32[(l+4|0)>>2],w-u|0);f=_strlen(u);u=u+f|0;f=0!=(HEAP32[4290]|0)?3:6;break;case 3:f=0<(w-u|0)?4:5;break;case 4:f=u;u=f+1|0;HEAP8[f]=47;f=5;break;case 5:_strncpy(u,HEAP32[(HEAP32[4290]+
32|0)>>2],w-u|0);f=_strlen(u);u=u+f|0;f=6;break;case 6:f=0<(w-u|0)?7:8;break;case 7:f=u;u=f+1|0;HEAP8[f]=47;f=8;break;case 8:_strncpy(u,k,w-u|0);v=_TableStrRegister(r|0);f=0!=(_TableGet(18544,v,q,p,s,t)|0)?10:9;break;case 9:f=_VariableAllocValueFromType(l,m,1,0,1);HEAP32[q>>2]=f;_TableSet(18544,v,HEAP32[q>>2],HEAP32[(l+4|0)>>2],HEAP16[(l+8|0)>>1]<<16>>16,HEAP16[(l+10|0)>>1]<<16>>16);HEAP32[n>>2]=1;f=10;break;case 10:_VariableDefinePlatformVar(l,k,HEAP32[(HEAP32[q>>2]|0)>>2],HEAP32[(HEAP32[q>>2]+4|
0)>>2],1);h=HEAP32[q>>2];f=21;break;case 11:f=0!=(HEAP16[(l+8|0)>>1]<<16>>16|0)?12:20;break;case 12:f=0==(HEAP32[4290]|0)?13:14;break;case 13:var x=18544,f=15;break;case 14:x=HEAP32[4290]+48|0;f=15;break;case 15:f=0!=(_TableGet(x,k,q,p,s,t)|0)?16:20;break;case 16:f=(HEAP32[p>>2]|0)==(HEAP32[(l+4|0)>>2]|0)?17:20;break;case 17:f=(HEAP32[s>>2]|0)==(HEAP16[(l+8|0)>>1]<<16>>16|0)?18:20;break;case 18:f=(HEAP32[t>>2]|0)==(HEAP16[(l+10|0)>>1]<<16>>16|0)?19:20;break;case 19:h=HEAP32[q>>2];f=21;break;case 20:h=
_VariableDefine(l,k,0,m,1);f=21;break;case 21:return b=h,STACKTOP=g,b;default:assert(0,"bad label: "+f)}}
function _VariableDefinePlatformVar(b,c,a,d,e){var f=0,g=0,h=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(f=1;;)switch(f){case 1:var l,k,m,n;l=b;k=c;f=a;m=d;n=_VariableAllocValueAndData(0,0,e,0,1);HEAP32[(n|0)>>2]=f;HEAP32[(n+4|0)>>2]=m;f=0==(HEAP32[4290]|0)?2:3;break;case 2:var q=18544,f=4;break;case 3:q=HEAP32[4290]+48|0;f=4;break;case 4:var p=_TableStrRegister(k),s=n,f=0!=(l|0)?5:6;break;case 5:var t=HEAP32[(l+4|0)>>2],f=7;break;case 6:t=0;f=7;break;case 7:f=0!=(l|0)?8:9;break;case 8:var r=
HEAP16[(l+8|0)>>1]<<16>>16,f=10;break;case 9:r=0;f=10;break;case 10:f=0!=(l|0)?11:12;break;case 11:var u=HEAP16[(l+10|0)>>1]<<16>>16,f=13;break;case 12:u=0;f=13;break;case 13:f=0!=(_TableSet(q,p,s,t,r,u)|0)?15:14;break;case 14:f=k;_ProgramFail(l,5E3,(g=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=f,g));STACKTOP=g;f=15;break;case 15:STACKTOP=h;return;default:assert(0,"bad label: "+f)}}
function _VariableDefined(b){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var d,e,f=a;e=b;c=0==(HEAP32[4290]|0)?3:2;break;case 2:c=0!=(_TableGet(HEAP32[4290]+48|0,e,f,0,0,0)|0)?6:3;break;case 3:c=0!=(_TableGet(18544,e,f,0,0,0)|0)?5:4;break;case 4:d=0;c=7;break;case 5:c=6;break;case 6:d=1;c=7;break;case 7:return b=d,STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _VariableGet(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l;g=b;h=c;l=a;d=0==(HEAP32[4290]|0)?3:2;break;case 2:d=0!=(_TableGet(HEAP32[4290]+48|0,h,l,0,0,0)|0)?6:3;break;case 3:d=0!=(_TableGet(18544,h,l,0,0,0)|0)?5:4;break;case 4:d=h;_ProgramFail(g,3408,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;d=5;break;case 5:d=6;break;case 6:STACKTOP=f;return;default:assert(0,"bad label: "+
d)}}
function _VariableStackPop(b,c){var a=0,d=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var f,g,h;f=b;g=c;a=0!=HEAP8[g+12|0]<<24>>24?2:5;break;case 2:a=0!=(HEAP32[(g+4|0)>>2]|0)?3:4;break;case 3:_HeapFreeMem(HEAP32[(g+4|0)>>2]);a=4;break;case 4:h=_HeapPopStack(g,16);a=9;break;case 5:a=0!=HEAP8[g+13|0]<<24>>24?6:7;break;case 6:a=g;h=_TypeSizeValue(g,0)+16|0;h=_HeapPopStack(a,h);a=8;break;case 7:h=_HeapPopStack(g,16);a=8;break;case 8:a=9;break;case 9:a=0!=(h|0)?11:10;
break;case 10:_ProgramFail(f,2304,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;a=11;break;case 11:STACKTOP=e;return;default:assert(0,"bad label: "+a)}}
function _VariableStackFrameAdd(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l,k;g=b;h=c;l=a;_HeapPushStackFrame();k=_HeapAllocStack((l<<2)+104|0);d=0==(k|0)?2:3;break;case 2:_ProgramFail(g,8568,(e=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=0,e));STACKTOP=e;d=3;break;case 3:_ParserCopy(k|0,g);HEAP32[(k+32|0)>>2]=h;d=0<(l|0)?4:5;break;case 4:var m=k+104|0,d=6;break;case 5:m=0;d=6;break;
case 6:HEAP32[(k+40|0)>>2]=m;_TableInitTable(k+48|0,k+56|0,11,0);HEAP32[(k+100|0)>>2]=HEAP32[4290];HEAP32[4290]=k;STACKTOP=f;return;default:assert(0,"bad label: "+d)}}
function _VariableStackFramePop(b){var c=0,a=0,d=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var e;e=b;c=0==(HEAP32[4290]|0)?2:3;break;case 2:_ProgramFail(e,1368,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=3;break;case 3:_ParserCopy(e,HEAP32[4290]|0);HEAP32[4290]=HEAP32[(HEAP32[4290]+100|0)>>2];_HeapPopStackFrame();STACKTOP=d;return;default:assert(0,"bad label: "+c)}}
function _VariableStringLiteralGet(b){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var d,e=a,c=b;HEAP32[e>>2]=0;c=0!=(_TableGet(17176,c,e,0,0,0)|0)?2:3;break;case 2:d=HEAP32[e>>2];c=4;break;case 3:d=0;c=4;break;case 4:return b=d,STACKTOP=a,b;default:assert(0,"bad label: "+c)}}function _VariableStringLiteralDefine(b,c){_TableSet(17176,b,c,0,0,0)}
function _VariableDereferencePointer(b,c,a,d,e,f){b=0;for(b=1;;)switch(b){case 1:var g,h,l,k,m;g=c;h=a;l=d;k=e;m=f;b=0!=(h|0)?2:3;break;case 2:HEAP32[h>>2]=0;b=3;break;case 3:b=0!=(k|0)?4:5;break;case 4:HEAP32[k>>2]=HEAP32[(HEAP32[(g|0)>>2]+20|0)>>2];b=5;break;case 5:b=0!=(l|0)?6:7;break;case 6:HEAP32[l>>2]=0;b=7;break;case 7:b=0!=(m|0)?8:9;break;case 8:HEAP32[m>>2]=1;b=9;break;case 9:return HEAP32[HEAP32[(g+4|0)>>2]>>2];default:assert(0,"bad label: "+b)}}
function _LibraryInit(){var b=_TableStrRegister(7464);HEAP32[4228]=b;_VariableDefinePlatformVar(0,11104,HEAP32[4784],16912,0);HEAP32[4792]=0==(HEAP8[12464]<<24>>24|0)&1;HEAP32[4578]=1==(HEAP8[12464]<<24>>24|0)&1;_VariableDefinePlatformVar(0,8360,18408,19168,0);_VariableDefinePlatformVar(0,6536,18408,18312,0)}
function _LibraryAdd(b,c,a){c=0;b=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var d,e=b,f,g=b+32,h=b+40,l,k;d=a;k=_TableStrRegister(4936);f=0;c=2;break;case 2:c=0!=(HEAP32[((d+(f<<3)|0)+4|0)>>2]|0)?3:5;break;case 3:c=k;l=HEAP32[((d+(f<<3)|0)+4|0)>>2];var m=_strlen(HEAP32[((d+(f<<3)|0)+4|0)>>2]);l=_LexAnalyse(c,l,m,0);_LexInitParser(e,HEAP32[((d+(f<<3)|0)+4|0)>>2],l,k,1);_TypeParse(e,h,g,0);c=_ParseFunctionDefinition(e,HEAP32[h>>2],HEAP32[g>>2]);
HEAP32[(HEAP32[(c+4|0)>>2]+20|0)>>2]=HEAP32[(d+(f<<3)|0)>>2];_HeapFreeMem(l);c=4;break;case 4:f=f+1|0;c=2;break;case 5:STACKTOP=b;return;default:assert(0,"bad label: "+c)}}
function _PrintType(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e;d=b;e=c;switch(HEAP32[(d|0)>>2]|0){case 8:a=10;break;case 9:a=11;break;case 10:a=12;break;case 11:a=13;break;case 12:a=16;break;case 13:a=19;break;case 0:a=2;break;case 14:a=20;break;case 15:a=21;break;case 16:a=22;break;case 17:a=23;break;case 1:a=3;break;case 2:a=4;break;case 3:a=5;break;case 4:a=6;break;case 5:a=7;break;case 6:a=8;break;case 7:a=9;break;default:a=24}break;case 2:_PrintStr(3384,e);a=24;break;case 3:_PrintStr(2264,
e);a=24;break;case 4:_PrintStr(1352,e);a=24;break;case 5:_PrintStr(856,e);a=24;break;case 6:_PrintStr(408,e);a=24;break;case 7:_PrintStr(12024,e);a=24;break;case 8:_PrintStr(11648,e);a=24;break;case 9:_PrintStr(11272,e);a=24;break;case 10:_PrintStr(10960,e);a=24;break;case 11:_PrintStr(10576,e);a=24;break;case 12:_PrintStr(10192,e);a=24;break;case 13:a=0!=(HEAP32[(d+20|0)>>2]|0)?14:15;break;case 14:_PrintType(HEAP32[(d+20|0)>>2],e);a=15;break;case 15:_PrintCh(42,e);a=24;break;case 16:_PrintType(HEAP32[(d+
20|0)>>2],e);_PrintCh(91,e);a=0!=(HEAP32[(d+4|0)>>2]|0)?17:18;break;case 17:_PrintSimpleInt(HEAP32[(d+4|0)>>2],e);a=18;break;case 18:_PrintCh(93,e);a=24;break;case 19:_PrintStr(9880,e);_PrintStr(HEAP32[(d+16|0)>>2],e);a=24;break;case 20:_PrintStr(9528,e);_PrintStr(HEAP32[(d+16|0)>>2],e);a=24;break;case 21:_PrintStr(9344,e);_PrintStr(HEAP32[(d+16|0)>>2],e);a=24;break;case 22:_PrintStr(9112,e);a=24;break;case 23:_PrintStr(8912,e);a=24;break;case 24:return;default:assert(0,"bad label: "+a)}}
function _PicocInitialise(b){_BasicIOInit();_HeapInit(b);_TableInit();_VariableInit();_LexInit();_TypeInit();_IncludeInit();_LibraryInit();_PlatformLibraryInit()}
function _ProgramFail(b,c,a){var d=0,e=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;_PlatformErrorPrefix(b);b=e|0;HEAP32[b>>2]=a;HEAP32[b+4>>2]=0;_PlatformVPrintf(c,e|0);_PlatformPrintf(11264,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;_PlatformExit(1);STACKTOP=e}
function _PrintSourceTextErrorLine(b,c,a,d){var e=0,f=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var h,l,k,m,n,q,p,s;h=b;l=c;k=a;m=d;e=0!=(l|0)?2:29;break;case 2:q=l;n=1;e=3;break;case 3:if(0!=(HEAP8[q]<<24>>24|0))e=4;else var t=0,e=5;break;case 4:t=(n|0)<(k|0);e=5;break;case 5:e=t?6:10;break;case 6:e=10==(HEAP8[q]<<24>>24|0)?7:8;break;case 7:n=n+1|0;e=8;break;case 8:e=9;break;case 9:q=q+1|0;e=3;break;case 10:p=q;e=11;break;case 11:if(10!=(HEAP8[p]<<24>>24|0))e=12;
else var r=0,e=13;break;case 12:r=0!=(HEAP8[p]<<24>>24|0);e=13;break;case 13:e=r?14:16;break;case 14:_PrintCh(HEAP8[p],HEAP32[4790]);e=15;break;case 15:p=p+1|0;e=11;break;case 16:_PrintCh(10,HEAP32[4790]);p=q;s=0;e=17;break;case 17:if(10!=(HEAP8[p]<<24>>24|0))e=18;else var u=0,e=22;break;case 18:0!=(HEAP8[p]<<24>>24|0)?e=19:(u=0,e=22);break;case 19:if((s|0)<(m|0))var w=1,e=21;else e=20;break;case 20:w=32==(HEAP8[p]<<24>>24|0);e=21;break;case 21:u=w;e=22;break;case 22:e=u?23:28;break;case 23:e=9==
(HEAP8[p]<<24>>24|0)?24:25;break;case 24:_PrintCh(9,HEAP32[4790]);e=26;break;case 25:_PrintCh(32,HEAP32[4790]);e=26;break;case 26:e=27;break;case 27:p=p+1|0;s=s+1|0;e=17;break;case 28:e=34;break;case 29:s=0;e=30;break;case 30:e=s>>>0<(m+7|0)>>>0?31:33;break;case 31:_PrintCh(32,HEAP32[4790]);e=32;break;case 32:s=s+1|0;e=30;break;case 33:e=34;break;case 34:b=h;_PlatformPrintf(11632,(f=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[f>>2]=b,HEAP32[f+8>>2]=k,HEAP32[f+16>>2]=
m,f));STACKTOP=f;STACKTOP=g;return;default:assert(0,"bad label: "+e)}}function _PlatformPrintf(b,c){var a=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;var d=a|0;HEAP32[d>>2]=c;HEAP32[d+4>>2]=0;_PlatformVPrintf(b,a|0);STACKTOP=a}
function _PlatformErrorPrefix(b){for(var c=0,c=1;;)switch(c){case 1:var a;a=b;c=0!=(a|0)?2:3;break;case 2:_PrintSourceTextErrorLine(HEAP32[(a+4|0)>>2],HEAP32[(a+28|0)>>2],HEAP16[(a+8|0)>>1]<<16>>16,HEAP16[(a+10|0)>>1]<<16>>16);c=3;break;case 3:return;default:assert(0,"bad label: "+c)}}
function _PlatformVPrintf(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e;d=b;e=c;a=2;break;case 2:a=0!=(HEAP8[d]<<24>>24|0)?3:16;break;case 3:a=37==(HEAP8[d]<<24>>24|0)?4:13;break;case 4:d=d+1|0;switch(HEAP8[d]<<24>>24|0){case 37:a=10;break;case 0:a=11;break;case 115:a=5;break;case 100:a=6;break;case 99:a=7;break;case 116:a=8;break;case 102:a=9;break;default:a=12}break;case 5:a=e;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);_PrintStr(a,HEAP32[4790]);a=12;break;
case 6:a=e;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);_PrintSimpleInt(a,HEAP32[4790]);a=12;break;case 7:a=e;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2])&255;_PrintCh(a,HEAP32[4790]);a=12;break;case 8:a=e;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);_PrintType(a,HEAP32[4790]);a=12;break;case 9:a=e;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAPF64[HEAP32[a>>2]+tempInt>>3]);
_PrintFP(a,HEAP32[4790]);a=12;break;case 10:_PrintCh(37,HEAP32[4790]);a=12;break;case 11:d=d-1|0;a=12;break;case 12:a=14;break;case 13:_PrintCh(HEAP8[d],HEAP32[4790]);a=14;break;case 14:a=15;break;case 15:d=d+1|0;a=2;break;case 16:return;default:assert(0,"bad label: "+a)}}
function _AssignFail(b,c,a,d,e,f,g,h){var l=0,k=0,m=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(l=1;;)switch(l){case 1:var n,q,p,s,t,r,u,l=b;n=c;q=a;p=d;s=e;t=f;r=g;u=h;_PlatformErrorPrefix(l);l=0==(r|0)?10568:10184;_PlatformPrintf(10944,(k=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[k>>2]=l,k));STACKTOP=k;l=0!=(q|0)?2:3;break;case 2:var l=q,w=p;_PlatformPrintf(n,(k=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[k>>2]=l,HEAP32[k+8>>
2]=w,k));STACKTOP=k;l=4;break;case 3:l=s;w=t;_PlatformPrintf(n,(k=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[k>>2]=l,HEAP32[k+8>>2]=w,k));STACKTOP=k;l=4;break;case 4:l=0!=(r|0)?5:6;break;case 5:l=u;w=r;_PlatformPrintf(9848,(k=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[k>>2]=l,HEAP32[k+8>>2]=w,k));STACKTOP=k;l=6;break;case 6:_ProgramFail(0,16336,(k=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[k>>2]=0,k));STACKTOP=k;STACKTOP=m;return;default:assert(0,"bad label: "+l)}}
function _LexFail(b,c,a){var d=0,e=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;_PrintSourceTextErrorLine(HEAP32[(b+8|0)>>2],HEAP32[(b+20|0)>>2],HEAP32[(b+12|0)>>2],HEAP32[(b+16|0)>>2]);b=e|0;HEAP32[b>>2]=a;HEAP32[b+4>>2]=0;_PlatformVPrintf(c,e|0);_PlatformPrintf(11264,(d=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[d>>2]=0,d));STACKTOP=d;_PlatformExit(1);STACKTOP=e}
function _PlatformMakeTempName(b){for(var c=0,c=1;;)switch(c){case 1:var a,d,e;d=b;e=5;c=2;break;case 2:c=1<(e|0)?3:7;break;case 3:c=57>(HEAP8[d+e|0]<<24>>24|0)?4:5;break;case 4:c=d+e|0;HEAP8[c]=HEAP8[c]+1&255;a=_TableStrRegister(d);c=8;break;case 5:HEAP8[d+e|0]=48;e=e-1|0;c=6;break;case 6:c=2;break;case 7:a=_TableStrRegister(d);c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _IncludeInit(){_IncludeRegister(6728,0,14216,0);_IncludeRegister(10968,156,0,0);_IncludeRegister(8264,56,15208,0);_IncludeRegister(6448,52,0,14040);_IncludeRegister(4848,414,13576,13960);_IncludeRegister(3312,192,13424,0);_IncludeRegister(2216,254,13208,0);_IncludeRegister(1336,382,14064,14168);_IncludeRegister(832,428,12488,13024)}
function _IncludeRegister(b,c,a,d){var e;e=_HeapAllocMem(20);b=_TableStrRegister(b);HEAP32[(e|0)>>2]=b;HEAP32[(e+4|0)>>2]=c;HEAP32[(e+8|0)>>2]=a;HEAP32[(e+12|0)>>2]=d;HEAP32[(e+16|0)>>2]=HEAP32[4616];HEAP32[4616]=e}
function _IncludeFile(b){for(var c=0,c=1;;)switch(c){case 1:var a,d;a=b;d=HEAP32[4616];c=2;break;case 2:c=0!=(d|0)?3:15;break;case 3:c=0==(_strcmp(HEAP32[(d|0)>>2],a)|0)?4:13;break;case 4:c=0!=(_VariableDefined(a)|0)?12:5;break;case 5:_VariableDefine(0,a,0,16856,0);c=0!=(HEAP32[(d+4|0)>>2]|0)?6:7;break;case 6:FUNCTION_TABLE[HEAP32[(d+4|0)>>2]]();c=7;break;case 7:c=0!=(HEAP32[(d+12|0)>>2]|0)?8:9;break;case 8:var c=a,e=HEAP32[(d+12|0)>>2],f=_strlen(HEAP32[(d+12|0)>>2]);_PicocParse(c,e,f,1,1,0);c=9;
break;case 9:c=0!=(HEAP32[(d+8|0)>>2]|0)?10:11;break;case 10:_LibraryAdd(18544,a,HEAP32[(d+8|0)>>2]);c=11;break;case 11:c=12;break;case 12:c=16;break;case 13:c=14;break;case 14:d=HEAP32[(d+16|0)>>2];c=2;break;case 15:_PicocPlatformScanFile(a);c=16;break;case 16:return;default:assert(0,"bad label: "+c)}}
function _PlatformGetLine(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l;g=b;h=c;l=a;d=0!=(l|0)?2:3;break;case 2:d=l;_printf(6504,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;d=3;break;case 3:return _fflush(HEAP32[_stdout>>2]),b=_fgets(g,h,HEAP32[_stdin>>2]),STACKTOP=f,b;default:assert(0,"bad label: "+d)}}
function _PlatformReadFile(b){var c=0,a=0,d=STACKTOP;STACKTOP=STACKTOP+80|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var e,f=d,g,h,l;e=b;c=0!=(_stat(e,f)|0)?2:3;break;case 2:c=e;_ProgramFail(0,10920,(a=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=c,a));STACKTOP=a;c=3;break;case 3:g=_malloc(HEAP32[(f+36|0)>>2]+1|0);c=0==(g|0)?4:5;break;case 4:_ProgramFail(0,8248,(a=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[a>>2]=0,a));STACKTOP=a;c=5;break;case 5:h=_fopen(e,6440);c=0==(h|0)?6:7;break;case 6:c=e;_ProgramFail(0,10920,(a=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=c,a));STACKTOP=a;c=7;break;case 7:l=_fread(g,1,HEAP32[(f+36|0)>>2],h);c=0==(l|0)?8:9;break;case 8:c=e;_ProgramFail(0,10920,(a=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=c,a));STACKTOP=a;c=9;break;case 9:return HEAP8[g+l|0]=0,_fclose(h),b=g,STACKTOP=d,b;default:assert(0,
"bad label: "+c)}}function _PicocPlatformScanFile(b){var c;c=_PlatformReadFile(b);var a=_strlen(c);_PicocParse(b,c,a,1,0,1)}function _PlatformExit(b){for(var c=0,c=1;;)switch(c){case 1:throw HEAP32[4512]=b,_longjmp(18056,1),"Reached an unreachable!";case 2:return;default:assert(0,"bad label: "+c)}}function _EmSetupFunc(){}function _EmPinMode(b,c,a,d){}function _EmAnalogWrite(b,c,a,d){_analogWrite(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2])}
function _EmDigitalWrite(b,c,a,d){_digitalWrite(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2])}function _EmDelay(b,c,a,d){_usleep(1E3*HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]&-1)}function _PlatformLibraryInit(){_IncludeRegister(3280,216,15544,0);var b=HEAP32[4058],c=_strlen(HEAP32[4058]);_PicocParse(3280,b,c,1,1,0)}
function _BasicIOInit(){HEAP32[4790]=HEAP32[_stdout>>2];HEAP32[4066]=HEAP32[_stdin>>2];HEAP32[4064]=HEAP32[_stdout>>2];HEAP32[4068]=HEAP32[_stderr>>2]}
function _StdioOutPutc(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e;d=b;e=c;a=0!=(HEAP32[(e|0)>>2]|0)?2:3;break;case 2:_fputc(d,HEAP32[(e|0)>>2]);a=e+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=9;break;case 3:a=0>(HEAP32[(e+8|0)>>2]|0)?5:4;break;case 4:a=1<(HEAP32[(e+8|0)>>2]|0)?5:8;break;case 5:HEAP8[HEAP32[(e+4|0)>>2]]=d&255;a=e+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=1<(HEAP32[(e+8|0)>>2]|0)?6:7;break;case 6:a=e+8|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=7;break;case 7:a=e+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;
a=8;break;case 8:a=9;break;case 9:return;default:assert(0,"bad label: "+a)}}
function _StdioOutPuts(b,c){for(var a=0,a=1;;)switch(a){case 1:var d,e;d=b;e=c;a=0!=(HEAP32[(e|0)>>2]|0)?2:3;break;case 2:_fputs(d,HEAP32[(e|0)>>2]);a=12;break;case 3:a=4;break;case 4:a=0!=(HEAP8[d]<<24>>24|0)?5:11;break;case 5:a=0>(HEAP32[(e+8|0)>>2]|0)?7:6;break;case 6:a=1<(HEAP32[(e+8|0)>>2]|0)?7:10;break;case 7:HEAP8[HEAP32[(e+4|0)>>2]]=HEAP8[d];d=d+1|0;a=e+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=1<(HEAP32[(e+8|0)>>2]|0)?8:9;break;case 8:a=e+8|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=9;break;case 9:a=e+
12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=10;break;case 10:a=4;break;case 11:a=12;break;case 12:return;default:assert(0,"bad label: "+a)}}
function _StdioFprintfWord(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l;g=b;h=c;l=a;d=0!=(HEAP32[(g|0)>>2]|0)?2:3;break;case 2:d=l;d=_fprintf(HEAP32[(g|0)>>2],h,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;var k=g+12|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;d=7;break;case 3:d=0<=(HEAP32[(g+8|0)>>2]|0)?4:5;break;case 4:d=l;d=_snprintf(HEAP32[(g+4|0)>>2],HEAP32[(g+8|0)>>2],h,(e=STACKTOP,STACKTOP=
STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;k=g+4|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;k=g+8|0;HEAP32[k>>2]=HEAP32[k>>2]-d|0;k=g+12|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;d=6;break;case 5:d=l;d=_sprintf(HEAP32[(g+4|0)>>2],h,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;k=g+12|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;k=g+4|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;d=6;break;case 6:d=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+
d)}}
function _StdioFprintfFP(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l;g=b;h=c;l=a;d=0!=(HEAP32[(g|0)>>2]|0)?2:3;break;case 2:d=l;d=_fprintf(HEAP32[(g|0)>>2],h,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAPF64[e>>3]=d,e));STACKTOP=e;var k=g+12|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;d=7;break;case 3:d=0<=(HEAP32[(g+8|0)>>2]|0)?4:5;break;case 4:d=l;d=_snprintf(HEAP32[(g+4|0)>>2],HEAP32[(g+8|0)>>2],h,(e=STACKTOP,STACKTOP=STACKTOP+
8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAPF64[e>>3]=d,e));STACKTOP=e;k=g+4|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;k=g+8|0;HEAP32[k>>2]=HEAP32[k>>2]-d|0;k=g+12|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;d=6;break;case 5:d=l;d=_sprintf(HEAP32[(g+4|0)>>2],h,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAPF64[e>>3]=d,e));STACKTOP=e;k=g+12|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;k=g+4|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;d=6;break;case 6:d=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+
d)}}
function _StdioFprintfPointer(b,c,a){var d=0,e=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var g,h,l;g=b;h=c;l=a;d=0!=(HEAP32[(g|0)>>2]|0)?2:3;break;case 2:d=l;d=_fprintf(HEAP32[(g|0)>>2],h,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;var k=g+12|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;d=7;break;case 3:d=0<=(HEAP32[(g+8|0)>>2]|0)?4:5;break;case 4:d=l;d=_snprintf(HEAP32[(g+4|0)>>2],HEAP32[(g+8|0)>>2],h,(e=STACKTOP,STACKTOP=
STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;k=g+4|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;k=g+8|0;HEAP32[k>>2]=HEAP32[k>>2]-d|0;k=g+12|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;d=6;break;case 5:d=l;d=_sprintf(HEAP32[(g+4|0)>>2],h,(e=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[e>>2]=d,e));STACKTOP=e;k=g+12|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;k=g+4|0;HEAP32[k>>2]=HEAP32[k>>2]+d|0;d=6;break;case 6:d=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+
d)}}
function _StdioBasePrintf(b,c,a,d,e,f){var g=0;b=STACKTOP;STACKTOP=STACKTOP+104|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var h,l,k,m,n,q,p=b,s,t,r=b+88,g=c;h=a;l=d;k=e;m=f;n=HEAP32[(HEAP32[(m|0)>>2]|0)>>2];q=0;HEAP32[(r|0)>>2]=g;HEAP32[(r+4|0)>>2]=h;HEAP32[(r+8|0)>>2]=l;HEAP32[(r+12|0)>>2]=0;g=2;break;case 2:g=0!=(HEAP8[k]<<24>>24|0)?3:75;break;case 3:g=37==(HEAP8[k]<<24>>24|0)?4:73;break;case 4:k=k+1|0;t=0;HEAP8[p|0]=37;s=1;g=5;break;case 5:switch(HEAP8[k]<<24>>24|0){case 103:case 71:g=10;
break;case 97:case 65:g=11;break;case 99:g=12;break;case 115:g=13;break;case 112:g=14;break;case 110:g=15;break;case 109:g=16;break;case 37:g=17;break;case 0:g=18;break;case 100:case 105:g=6;break;case 111:case 117:case 120:case 88:g=7;break;case 101:case 69:g=8;break;case 102:case 70:g=9;break;default:g=19}break;case 6:t=18408;g=19;break;case 7:t=18408;g=19;break;case 8:t=19032;g=19;break;case 9:t=19032;g=19;break;case 10:t=19032;g=19;break;case 11:t=18408;g=19;break;case 12:t=18408;g=19;break;case 13:t=
HEAP32[4784];g=19;break;case 14:t=HEAP32[4226];g=19;break;case 15:t=16856;g=19;break;case 16:t=16856;g=19;break;case 17:t=16856;g=19;break;case 18:t=16856;g=19;break;case 19:HEAP8[p+s|0]=HEAP8[k];s=s+1|0;g=16856==(t|0)?20:29;break;case 20:g=HEAP8[k]<<24>>24;g=109==(g|0)?21:37==(g|0)?22:0==(g|0)?23:110==(g|0)?24:28;break;case 21:g=___errno_location();g=_strerror(HEAP32[g>>2]);_StdioOutPuts(g,r);g=28;break;case 22:_StdioOutPutc(HEAP8[k]<<24>>24,r);g=28;break;case 23:HEAP8[p+s|0]=0;_StdioOutPutc(HEAP8[k]<<
24>>24,r);g=28;break;case 24:g=n;n=(((_TypeStackSizeValue(n)+16|0)+4|0)-1|0)&-4;n=g+n|0;g=12==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?25:27;break;case 25:g=1==(HEAP32[(HEAP32[(HEAP32[(n|0)>>2]+20|0)>>2]|0)>>2]|0)?26:27;break;case 26:HEAP32[HEAP32[HEAP32[(n+4|0)>>2]>>2]>>2]=HEAP32[(r+12|0)>>2];g=27;break;case 27:g=28;break;case 28:g=29;break;case 29:k=k+1|0;g=30;break;case 30:if(0==(t|0))g=31;else var u=0,g=32;break;case 31:u=80>(s|0);g=32;break;case 32:g=u?5:33;break;case 33:g=16856!=(t|0)?34:72;break;
case 34:g=(q|0)>=(HEAP32[(m+4|0)>>2]|0)?35:36;break;case 35:_StdioOutPuts(6008,r);g=71;break;case 36:HEAP8[p+s|0]=0;g=n;n=(((_TypeStackSizeValue(n)+16|0)+4|0)-1|0)&-4;n=g+n|0;g=18408==(t|0)?37:43;break;case 37:g=1<=HEAP32[(HEAP32[(n|0)>>2]|0)>>2]>>>0?38:39;break;case 38:g=7>=HEAP32[(HEAP32[(n|0)>>2]|0)>>2]>>>0?40:39;break;case 39:g=8==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?40:41;break;case 40:g=p|0;h=_ExpressionCoerceUnsignedInteger(n);_StdioFprintfWord(r,g,h);g=42;break;case 41:_StdioOutPuts(6008,r);
g=42;break;case 42:g=70;break;case 43:g=19032==(t|0)?44:50;break;case 44:g=1<=HEAP32[(HEAP32[(n|0)>>2]|0)>>2]>>>0?45:46;break;case 45:g=7>=HEAP32[(HEAP32[(n|0)>>2]|0)>>2]>>>0?47:46;break;case 46:g=8==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?47:48;break;case 47:g=p|0;h=_ExpressionCoerceFP(n);_StdioFprintfFP(r,g,h);g=49;break;case 48:_StdioOutPuts(6008,r);g=49;break;case 49:g=69;break;case 50:g=(t|0)==(HEAP32[4784]|0)?51:59;break;case 51:g=11==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?52:53;break;case 52:_StdioFprintfPointer(r,
p|0,HEAP32[HEAP32[(n+4|0)>>2]>>2]);g=58;break;case 53:g=12==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?54:56;break;case 54:g=3==(HEAP32[(HEAP32[(HEAP32[(n|0)>>2]+20|0)>>2]|0)>>2]|0)?55:56;break;case 55:_StdioFprintfPointer(r,p|0,HEAP32[(n+4|0)>>2]|0);g=57;break;case 56:_StdioOutPuts(6008,r);g=57;break;case 57:g=58;break;case 58:g=68;break;case 59:g=(t|0)==(HEAP32[4226]|0)?60:67;break;case 60:g=11==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?61:62;break;case 61:_StdioFprintfPointer(r,p|0,HEAP32[HEAP32[(n+4|0)>>2]>>
2]);g=66;break;case 62:g=12==(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)?63:64;break;case 63:_StdioFprintfPointer(r,p|0,HEAP32[(n+4|0)>>2]|0);g=65;break;case 64:_StdioOutPuts(6008,r);g=65;break;case 65:g=66;break;case 66:g=67;break;case 67:g=68;break;case 68:g=69;break;case 69:g=70;break;case 70:q=q+1|0;g=71;break;case 71:g=72;break;case 72:g=74;break;case 73:_StdioOutPutc(HEAP8[k]<<24>>24,r);k=k+1|0;g=74;break;case 74:g=2;break;case 75:g=0!=(HEAP32[(r+4|0)>>2]|0)?76:78;break;case 76:g=0<(HEAP32[(r+8|0)>>
2]|0)?77:78;break;case 77:HEAP8[HEAP32[(r+4|0)>>2]]=0;g=78;break;case 78:return c=HEAP32[(r+12|0)>>2],STACKTOP=b,c;default:assert(0,"bad label: "+g)}}
function _StdioBaseScanf(b,c,a,d,e){var f=0,g=0,h=STACKTOP;STACKTOP=STACKTOP+40|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(f=1;;)switch(f){case 1:var l,k,m,n,q,p,s,t,r=h;k=b;m=c;n=a;q=d;p=e;s=HEAP32[(HEAP32[(p|0)>>2]|0)>>2];t=0;f=10<(HEAP32[(p+4|0)>>2]|0)?2:3;break;case 2:_ProgramFail(k,10752,(g=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=10,g));STACKTOP=g;f=3;break;case 3:t=0;f=4;break;case 4:f=(t|0)<(HEAP32[(p+4|0)>>2]|0)?5:13;break;case 5:f=s;s=(((_TypeStackSizeValue(s)+
16|0)+4|0)-1|0)&-4;s=f+s|0;f=11==(HEAP32[(HEAP32[(s|0)>>2]|0)>>2]|0)?6:7;break;case 6:HEAP32[(r+(t<<2)|0)>>2]=HEAP32[HEAP32[(s+4|0)>>2]>>2];f=11;break;case 7:f=12==(HEAP32[(HEAP32[(s|0)>>2]|0)>>2]|0)?8:9;break;case 8:HEAP32[(r+(t<<2)|0)>>2]=HEAP32[(s+4|0)>>2]|0;f=10;break;case 9:f=t+1|0;_ProgramFail(k,8088,(g=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=f,g));STACKTOP=g;f=10;break;case 10:f=11;break;case 11:f=12;break;case 12:t=t+1|0;f=4;break;case 13:f=0!=(m|0)?
14:15;break;case 14:l=HEAP32[(r|0)>>2];var f=HEAP32[(r+4|0)>>2],u=HEAP32[(r+8|0)>>2],w=HEAP32[(r+12|0)>>2],v=HEAP32[(r+16|0)>>2],x=HEAP32[(r+20|0)>>2],y=HEAP32[(r+24|0)>>2],z=HEAP32[(r+28|0)>>2],B=HEAP32[(r+32|0)>>2],E=HEAP32[(r+36|0)>>2];l=_fscanf(m,q,(g=STACKTOP,STACKTOP=STACKTOP+80|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=l,HEAP32[g+8>>2]=f,HEAP32[g+16>>2]=u,HEAP32[g+24>>2]=w,HEAP32[g+32>>2]=v,HEAP32[g+40>>2]=x,HEAP32[g+48>>2]=y,HEAP32[g+56>>2]=z,HEAP32[g+64>>2]=B,HEAP32[g+72>>2]=E,
g));STACKTOP=g;f=16;break;case 15:l=HEAP32[(r|0)>>2];f=HEAP32[(r+4|0)>>2];u=HEAP32[(r+8|0)>>2];w=HEAP32[(r+12|0)>>2];v=HEAP32[(r+16|0)>>2];x=HEAP32[(r+20|0)>>2];y=HEAP32[(r+24|0)>>2];z=HEAP32[(r+28|0)>>2];B=HEAP32[(r+32|0)>>2];E=HEAP32[(r+36|0)>>2];l=_sscanf(n,q,(g=STACKTOP,STACKTOP=STACKTOP+80|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[g>>2]=l,HEAP32[g+8>>2]=f,HEAP32[g+16>>2]=u,HEAP32[g+24>>2]=w,HEAP32[g+32>>2]=v,HEAP32[g+40>>2]=x,HEAP32[g+48>>2]=y,HEAP32[g+56>>2]=z,HEAP32[g+64>>2]=B,HEAP32[g+
72>>2]=E,g));STACKTOP=g;f=16;break;case 16:return b=l,STACKTOP=h,b;default:assert(0,"bad label: "+f)}}function _StdioFopen(b,c,a,d){b=_fopen(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioFreopen(b,c,a,d){b=_freopen(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioFclose(b,c,a,d){b=_fclose(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioFread(b,c,a,d){b=_fread(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+12|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioFwrite(b,c,a,d){b=_fwrite(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+12|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioFgetc(b,c,a,d){b=_fgetc(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioFgets(b,c,a,d){b=_fgets(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioRemove(b,c,a,d){b=_remove(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioRename(b,c,a,d){b=_rename(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioRewind(b,c,a,d){_rewind(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2])}function _StdioTmpfile(b,c,a,d){b=_tmpfile();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioClearerr(b,c,a,d){_clearerr(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2])}function _StdioFeof(b,c,a,d){b=_feof(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioFerror(b,c,a,d){b=_ferror(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioFileno(b,c,a,d){b=_fileno(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioFflush(b,c,a,d){b=_fflush(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioFgetpos(b,c,a,d){b=_fgetpos(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioFsetpos(b,c,a,d){b=_fsetpos(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioFputc(b,c,a,d){b=_fputc(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioFputs(b,c,a,d){b=_fputs(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioFtell(b,c,a,d){b=_ftell(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioFseek(b,c,a,d){b=_fseek(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioPerror(b,c,a,d){_perror(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2])}
function _StdioPutc(b,c,a,d){b=_fputc(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioPutchar(b,c,a,d){b=_putchar(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioSetbuf(b,c,a,d){_setbuf(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2])}
function _StdioSetvbuf(b,c,a,d){_setvbuf(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+12|0)>>2]+4|0)>>2]>>2])}function _StdioUngetc(b,c,a,d){b=_ungetc(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioPuts(b,c,a,d){b=_puts(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioGets(b,c,a,d){b=0;for(b=1;;)switch(b){case 1:var e,f;b=c;e=a;d=_fgets(HEAP32[HEAP32[(HEAP32[(e|0)>>2]+4|0)>>2]>>2],HEAP32[3882],HEAP32[_stdin>>2]);HEAP32[HEAP32[(b+4|0)>>2]>>2]=d;b=0!=(HEAP32[HEAP32[(b+4|0)>>2]>>2]|0)?2:5;break;case 2:f=_strchr(HEAP32[HEAP32[(HEAP32[(e|0)>>2]+4|0)>>2]>>2],10);b=0!=(f|0)?3:4;break;case 3:HEAP8[f]=0;b=4;break;case 4:b=5;break;case 5:return;default:assert(0,"bad label: "+b)}}
function _StdioGetchar(b,c,a,d){b=_getchar();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioPrintf(b,c,a,d){var e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(e|0)>>2]=a;HEAP32[(e+4|0)>>2]=d-1|0;b=_StdioBasePrintf(b,HEAP32[_stdout>>2],0,0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],e);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b;STACKTOP=e}
function _StdioVprintf(b,c,a,d){b=_StdioBasePrintf(b,HEAP32[_stdout>>2],0,0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioFprintf(b,c,a,d){var e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(e|0)>>2]=a+4|0;HEAP32[(e+4|0)>>2]=d-2|0;b=_StdioBasePrintf(b,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],0,0,HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],e);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b;STACKTOP=e}
function _StdioVfprintf(b,c,a,d){b=_StdioBasePrintf(b,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],0,0,HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioSprintf(b,c,a,d){var e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(e|0)>>2]=a+4|0;HEAP32[(e+4|0)>>2]=d-2|0;b=_StdioBasePrintf(b,0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],-1,HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],e);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b;STACKTOP=e}
function _StdioSnprintf(b,c,a,d){var e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(e|0)>>2]=a+8|0;HEAP32[(e+4|0)>>2]=d-3|0;b=_StdioBasePrintf(b,0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2],e);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b;STACKTOP=e}
function _StdioScanf(b,c,a,d){var e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(e|0)>>2]=a;HEAP32[(e+4|0)>>2]=d-1|0;b=_StdioBaseScanf(b,HEAP32[_stdin>>2],0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],e);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b;STACKTOP=e}
function _StdioFscanf(b,c,a,d){var e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(e|0)>>2]=a+4|0;HEAP32[(e+4|0)>>2]=d-2|0;b=_StdioBaseScanf(b,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],0,HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],e);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b;STACKTOP=e}
function _StdioSscanf(b,c,a,d){var e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(e|0)>>2]=a+4|0;HEAP32[(e+4|0)>>2]=d-2|0;b=_StdioBaseScanf(b,0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],e);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b;STACKTOP=e}
function _StdioVsprintf(b,c,a,d){b=_StdioBasePrintf(b,0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],-1,HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioVsnprintf(b,c,a,d){b=_StdioBasePrintf(b,0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+12|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioVscanf(b,c,a,d){b=_StdioBaseScanf(b,HEAP32[_stdin>>2],0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioVfscanf(b,c,a,d){b=_StdioBaseScanf(b,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],0,HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdioVsscanf(b,c,a,d){b=_StdioBaseScanf(b,0,HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdioSetupFunc(){for(var b=0,b=1;;)switch(b){case 1:var b=_TableStrRegister(3616),b=_TypeCreateOpaqueStruct(0,b,20),b=_TypeGetMatching(0,b,11,0,HEAP32[4492],1),c=_TableStrRegister(3512);_TypeCreateOpaqueStruct(0,c,8);_VariableDefinePlatformVar(0,3400,18408,15728,0);_VariableDefinePlatformVar(0,3296,18408,18032,0);_VariableDefinePlatformVar(0,3152,18408,14360,0);_VariableDefinePlatformVar(0,2952,18408,14352,0);_VariableDefinePlatformVar(0,2792,18408,16248,0);_VariableDefinePlatformVar(0,
2688,18408,15536,0);_VariableDefinePlatformVar(0,2624,18408,16816,0);_VariableDefinePlatformVar(0,2552,18408,12480,0);_VariableDefinePlatformVar(0,2488,18408,12472,0);_VariableDefinePlatformVar(0,2408,18408,15520,0);_VariableDefinePlatformVar(0,2288,18408,15528,0);_VariableDefinePlatformVar(0,2208,b,16264,0);_VariableDefinePlatformVar(0,2088,b,16256,0);_VariableDefinePlatformVar(0,1936,b,16272,0);b=_TableStrRegister(1792);b=0!=(_VariableDefined(b)|0)?3:2;break;case 2:_VariableDefinePlatformVar(0,
1792,18408,16848,0);b=3;break;case 3:return;default:assert(0,"bad label: "+b)}}function _PrintCh(b,c){_fputc(b<<24>>24,c)}function _PrintSimpleInt(b,c){var a=0,d=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;_fprintf(c,1664,(a=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[a>>2]=b,a));STACKTOP=a;STACKTOP=d}function _PrintStr(b,c){_fputs(b,c)}
function _PrintFP(b,c){var a=0,d=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;_fprintf(c,1632,(a=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAPF64[a>>3]=b,a));STACKTOP=a;STACKTOP=d}function _MathSin(b,c,a,d){b=Math_sin(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathCos(b,c,a,d){b=Math_cos(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}
function _MathTan(b,c,a,d){b=Math_tan(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathAsin(b,c,a,d){b=Math_asin(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathAcos(b,c,a,d){b=Math_acos(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathAtan(b,c,a,d){b=Math_atan(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}
function _MathAtan2(b,c,a,d){b=Math_atan2(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3],HEAPF64[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathSinh(b,c,a,d){b=_sinh(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathCosh(b,c,a,d){b=_cosh(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}
function _MathTanh(b,c,a,d){b=_tanh(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathExp(b,c,a,d){b=Math_exp(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathFabs(b,c,a,d){b=Math_abs(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}
function _MathFmod(b,c,a,d){b=_fmod(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3],HEAPF64[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathFrexp(b,c,a,d){b=_frexp(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathLdexp(b,c,a,d){b=_ldexp(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}
function _MathLog(b,c,a,d){b=Math_log(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathLog10(b,c,a,d){b=_log10(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathModf(b,c,a,d){b=_modf(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3],HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}
function _MathPow(b,c,a,d){b=Math_pow(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3],HEAPF64[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathSqrt(b,c,a,d){b=Math_sqrt(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathRound(b,c,a,d){b=Math_ceil(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]-0.5);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}
function _MathCeil(b,c,a,d){b=Math_ceil(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _MathFloor(b,c,a,d){b=Math_floor(HEAPF64[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>3]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}
function _MathSetupFunc(){_VariableDefinePlatformVar(0,8184,19032,15472,0);_VariableDefinePlatformVar(0,7928,19032,15440,0);_VariableDefinePlatformVar(0,7624,19032,15448,0);_VariableDefinePlatformVar(0,7408,19032,15456,0);_VariableDefinePlatformVar(0,7232,19032,15464,0);_VariableDefinePlatformVar(0,7048,19032,15432,0);_VariableDefinePlatformVar(0,6952,19032,15424,0);_VariableDefinePlatformVar(0,6856,19032,15416,0);_VariableDefinePlatformVar(0,6720,19032,15496,0);_VariableDefinePlatformVar(0,6560,
19032,15488,0);_VariableDefinePlatformVar(0,6376,19032,15480,0);_VariableDefinePlatformVar(0,6176,19032,15400,0);_VariableDefinePlatformVar(0,5944,19032,15408,0)}function _StringStrcpy(b,c,a,d){b=_strcpy(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringStrncpy(b,c,a,d){b=_strncpy(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrcmp(b,c,a,d){b=_strcmp(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringStrncmp(b,c,a,d){b=_strncmp(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrcat(b,c,a,d){b=_strcat(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringStrncat(b,c,a,d){b=_strncat(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringIndex(b,c,a,d){b=_strchr(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringRindex(b,c,a,d){b=_strrchr(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrlen(b,c,a,d){b=_strlen(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringMemset(b,c,a,d){b=HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2];_memset(b,HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]&255,HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringMemcpy(b,c,a,d){b=HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2];d=HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2];a=HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2];assert(0===a%1);_memcpy(b,d,a)|0;HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringMemcmp(b,c,a,d){b=_memcmp(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringMemmove(b,c,a,d){b=HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2];_memmove(b,HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2],1,0);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringMemchr(b,c,a,d){b=_memchr(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrchr(b,c,a,d){b=_strchr(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringStrrchr(b,c,a,d){b=_strrchr(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrcoll(b,c,a,d){b=_strcmp(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrerror(b,c,a,d){b=_strerror(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringStrspn(b,c,a,d){b=_strspn(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrcspn(b,c,a,d){b=_strcspn(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringStrpbrk(b,c,a,d){b=_strpbrk(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrstr(b,c,a,d){b=_strstr(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringStrtok(b,c,a,d){b=_strtok(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrxfrm(b,c,a,d){b=_strxfrm(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringStrdup(b,c,a,d){b=_strdup(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StringStrtok_r(b,c,a,d){b=_strtok_r(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StringSetupFunc(){for(var b=0,b=1;;)switch(b){case 1:b=_TableStrRegister(7400);b=0!=(_VariableDefined(b)|0)?3:2;break;case 2:_VariableDefinePlatformVar(0,7400,18408,16840,0);b=3;break;case 3:return;default:assert(0,"bad label: "+b)}}function _StdlibAtof(b,c,a,d){b=_atof(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _StdlibAtoi(b,c,a,d){b=_atoi(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdlibAtol(b,c,a,d){b=_atoi(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdlibStrtod(b,c,a,d){b=_strtod(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _StdlibStrtol(b,c,a,d){b=_strtol(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdlibStrtoul(b,c,a,d){b=_strtoul(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdlibMalloc(b,c,a,d){b=_malloc(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdlibCalloc(b,c,a,d){b=_calloc(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdlibRealloc(b,c,a,d){b=_realloc(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdlibFree(b,c,a,d){_free(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2])}function _StdlibRand(b,c,a,d){b=_rand();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdlibSrand(b,c,a,d){_srand(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2])}function _StdlibAbort(b,c,a,d){c=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;_ProgramFail(b,3568,(c=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7&-8,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[c>>2]=0,c));STACKTOP=c;STACKTOP=a}function _StdlibExit(b,c,a,d){_PlatformExit(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2])}
function _StdlibGetenv(b,c,a,d){b=_getenv(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdlibSystem(b,c,a,d){b=_system(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdlibAbs(b,c,a,d){b=Math_abs(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdlibLabs(b,c,a,d){b=Math_abs(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdlibSetupFunc(){for(var b=0,b=1;;)switch(b){case 1:b=_TableStrRegister(9024);b=0!=(_VariableDefined(b)|0)?3:2;break;case 2:_VariableDefinePlatformVar(0,9024,18408,16832,0);b=3;break;case 3:return;default:assert(0,"bad label: "+b)}}function _StdAsctime(b,c,a,d){b=_asctime(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdClock(b,c,a,d){b=_clock();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdCtime(b,c,a,d){b=_ctime(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdDifftime(b,c,a,d){b=_difftime(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAPF64[HEAP32[(c+4|0)>>2]>>3]=b}function _StdGmtime(b,c,a,d){b=_gmtime(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdGmtime_r(b,c,a,d){b=_gmtime_r(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdLocaltime(b,c,a,d){b=_localtime(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdMktime(b,c,a,d){b=_mktime(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdTime(b,c,a,d){b=_time(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdStrftime(b,c,a,d){b=_strftime(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+12|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdStrptime(b,c,a,d){b=_strptime(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdTimegm(b,c,a,d){b=_timegm(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdTimeSetupFunc(){var b=_TableStrRegister(11136);_TypeCreateOpaqueStruct(0,b,44);_VariableDefinePlatformVar(0,10736,18408,16240,0)}
function _StdErrnoSetupFunc(){_VariableDefinePlatformVar(0,2896,18408,16224,0);_VariableDefinePlatformVar(0,10032,18408,16216,0);_VariableDefinePlatformVar(0,7568,18408,16208,0);_VariableDefinePlatformVar(0,5928,18408,16200,0);_VariableDefinePlatformVar(0,4352,18408,16192,0);_VariableDefinePlatformVar(0,2880,18408,16184,0);_VariableDefinePlatformVar(0,1896,18408,16176,0);_VariableDefinePlatformVar(0,1144,18408,16168,0);_VariableDefinePlatformVar(0,672,18408,16160,0);_VariableDefinePlatformVar(0,216,
18408,16152,0);_VariableDefinePlatformVar(0,11840,18408,16144,0);_VariableDefinePlatformVar(0,11472,18408,16136,0);_VariableDefinePlatformVar(0,11120,18408,16128,0);_VariableDefinePlatformVar(0,10720,18408,16120,0);_VariableDefinePlatformVar(0,10432,18408,16112,0);_VariableDefinePlatformVar(0,10016,18408,16104,0);_VariableDefinePlatformVar(0,9720,18408,16096,0);_VariableDefinePlatformVar(0,9432,18408,16088,0);_VariableDefinePlatformVar(0,9240,18408,16080,0);_VariableDefinePlatformVar(0,9016,18408,
16072,0);_VariableDefinePlatformVar(0,8824,18408,16064,0);_VariableDefinePlatformVar(0,8632,18408,16056,0);_VariableDefinePlatformVar(0,8376,18408,16048,0);_VariableDefinePlatformVar(0,8080,18408,16040,0);_VariableDefinePlatformVar(0,7888,18408,16032,0);_VariableDefinePlatformVar(0,7560,18408,16024,0);_VariableDefinePlatformVar(0,7392,18408,16016,0);_VariableDefinePlatformVar(0,7224,18408,16008,0);_VariableDefinePlatformVar(0,7040,18408,16E3,0);_VariableDefinePlatformVar(0,6944,18408,15992,0);_VariableDefinePlatformVar(0,
6848,18408,15984,0);_VariableDefinePlatformVar(0,6712,18408,15976,0);_VariableDefinePlatformVar(0,6552,18408,15968,0);_VariableDefinePlatformVar(0,6328,18408,15960,0);_VariableDefinePlatformVar(0,6160,18408,15952,0);_VariableDefinePlatformVar(0,5912,18408,15944,0);_VariableDefinePlatformVar(0,5760,18408,15936,0);_VariableDefinePlatformVar(0,5616,18408,15928,0);_VariableDefinePlatformVar(0,5480,18408,15920,0);_VariableDefinePlatformVar(0,5344,18408,15912,0);_VariableDefinePlatformVar(0,5248,18408,
15904,0);_VariableDefinePlatformVar(0,5128,18408,15896,0);_VariableDefinePlatformVar(0,4952,18408,15888,0);_VariableDefinePlatformVar(0,4696,18408,15880,0);_VariableDefinePlatformVar(0,4552,18408,15872,0);_VariableDefinePlatformVar(0,4344,18408,15864,0);_VariableDefinePlatformVar(0,4200,18408,15856,0);_VariableDefinePlatformVar(0,4040,18408,15848,0);_VariableDefinePlatformVar(0,3904,18408,15840,0);_VariableDefinePlatformVar(0,3712,18408,15832,0);_VariableDefinePlatformVar(0,3608,18408,15824,0);_VariableDefinePlatformVar(0,
3504,18408,15816,0);_VariableDefinePlatformVar(0,3392,18408,15808,0);_VariableDefinePlatformVar(0,3248,18408,15800,0);_VariableDefinePlatformVar(0,3112,18408,15792,0);_VariableDefinePlatformVar(0,2872,18408,15784,0);_VariableDefinePlatformVar(0,2752,18408,15776,0);_VariableDefinePlatformVar(0,2672,18408,15768,0);_VariableDefinePlatformVar(0,2608,18408,15760,0);_VariableDefinePlatformVar(0,2544,18408,15752,0);_VariableDefinePlatformVar(0,2480,18408,15744,0);_VariableDefinePlatformVar(0,2400,18408,
15736,0);_VariableDefinePlatformVar(0,2272,18408,15720,0);_VariableDefinePlatformVar(0,2152,18408,15712,0);_VariableDefinePlatformVar(0,2048,18408,15704,0);_VariableDefinePlatformVar(0,1888,18408,15696,0);_VariableDefinePlatformVar(0,1728,18408,15688,0);_VariableDefinePlatformVar(0,1656,18408,15664,0);_VariableDefinePlatformVar(0,1616,18408,15680,0);_VariableDefinePlatformVar(0,1536,18408,15672,0);_VariableDefinePlatformVar(0,1472,18408,15656,0);_VariableDefinePlatformVar(0,1448,18408,15648,0);_VariableDefinePlatformVar(0,
1360,18408,15640,0);_VariableDefinePlatformVar(0,1288,18408,15632,0);_VariableDefinePlatformVar(0,1248,18408,15624,0);_VariableDefinePlatformVar(0,1136,18408,15608,0);_VariableDefinePlatformVar(0,1064,18408,15616,0);_VariableDefinePlatformVar(0,1024,18408,15600,0);_VariableDefinePlatformVar(0,1E3,18408,15592,0);_VariableDefinePlatformVar(0,952,18408,15584,0);var b=___errno_location();_VariableDefinePlatformVar(0,904,18408,b,1)}
function _StdIsalnum(b,c,a,d){b=_isalnum(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdIsalpha(b,c,a,d){HEAP32[HEAP32[(c+4|0)>>2]>>2]=26>((HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]|32)-97|0)>>>0&1}function _StdIsblank(b,c,a,d){b=HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2];HEAP32[HEAP32[(c+4|0)>>2]>>2]=32==(b|0)&1|9==(b|0)&1}function _StdIscntrl(b,c,a,d){b=_iscntrl(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdIsdigit(b,c,a,d){HEAP32[HEAP32[(c+4|0)>>2]>>2]=10>(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]-48|0)>>>0&1}function _StdIsgraph(b,c,a,d){HEAP32[HEAP32[(c+4|0)>>2]>>2]=94>(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]-33|0)>>>0&1}function _StdIslower(b,c,a,d){HEAP32[HEAP32[(c+4|0)>>2]>>2]=26>(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]-97|0)>>>0&1}function _StdIsprint(b,c,a,d){HEAP32[HEAP32[(c+4|0)>>2]>>2]=95>(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]-32|0)>>>0&1}
function _StdIspunct(b,c,a,d){b=_ispunct(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdIsspace(b,c,a,d){b=_isspace(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdIsupper(b,c,a,d){HEAP32[HEAP32[(c+4|0)>>2]>>2]=26>(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]-65|0)>>>0&1}function _StdIsxdigit(b,c,a,d){b=_isxdigit(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdTolower(b,c,a,d){b=_tolower(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdToupper(b,c,a,d){b=_toupper(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdIsascii(b,c,a,d){b=_isascii(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _StdToascii(b,c,a,d){b=_toascii(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _StdboolSetupFunc(){_VariableDefinePlatformVar(0,1840,18408,8,0);_VariableDefinePlatformVar(0,9712,18408,16312,0);_VariableDefinePlatformVar(0,7360,18408,8,0)}function _UnistdAccess(b,c,a,d){b=_access(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdAlarm(b,c,a,d){b=_alarm(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdChdir(b,c,a,d){b=_chdir(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdChroot(b,c,a,d){b=_chroot(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdChown(b,c,a,d){b=_chown(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdClose(b,c,a,d){b=_close(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdConfstr(b,c,a,d){b=_confstr(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdCtermid(b,c,a,d){b=_ctermid(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdDup(b,c,a,d){b=_dup(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdDup2(b,c,a,d){b=_dup2(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _Unistd_Exit(b,c,a,d){b=0;for(b=1;;)switch(b){case 1:throw __exit(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]),"Reached an unreachable!";case 2:return;default:assert(0,"bad label: "+b)}}
function _UnistdFchown(b,c,a,d){b=_fchown(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdFchdir(b,c,a,d){b=_fchdir(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdFdatasync(b,c,a,d){b=_fsync(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdFork(b,c,a,d){b=_fork();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdFpathconf(b,c,a,d){b=_fpathconf(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdFsync(b,c,a,d){b=_fsync(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdFtruncate(b,c,a,d){b=_ftruncate(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetcwd(b,c,a,d){b=_getcwd(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetdtablesize(b,c,a,d){b=_getdtablesize();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdGetegid(b,c,a,d){b=_getgid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGeteuid(b,c,a,d){b=_getgid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetgid(b,c,a,d){b=_getgid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGethostid(b,c,a,d){b=_gethostid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetlogin(b,c,a,d){b=_getlogin();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdGetlogin_r(b,c,a,d){b=_getlogin_r(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetpagesize(b,c,a,d){b=_getpagesize();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetpass(b,c,a,d){b=_getpass(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetpgrp(b,c,a,d){b=_getgid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdGetpid(b,c,a,d){b=_getgid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetppid(b,c,a,d){b=_getgid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetuid(b,c,a,d){b=_getgid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdGetwd(b,c,a,d){b=_getcwd(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],4096);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdIsatty(b,c,a,d){b=_isatty(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdLchown(b,c,a,d){b=_lchown(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdLink(b,c,a,d){b=_link(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdLockf(b,c,a,d){b=_lockf(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdLseek(b,c,a,d){b=_lseek(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdNice(b,c,a,d){b=_nice(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdPathconf(b,c,a,d){b=_fpathconf(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdPause(b,c,a,d){b=_pause();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdRead(b,c,a,d){b=_read(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdReadlink(b,c,a,d){b=_readlink(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdRmdir(b,c,a,d){b=_rmdir(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdSbrk(b,c,a,d){b=_sbrk(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdSetgid(b,c,a,d){b=_setgid(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdSetpgid(b,c,a,d){b=_setpgid(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdSetpgrp(b,c,a,d){b=_setgid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdSetregid(b,c,a,d){b=_setpgid(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdSetreuid(b,c,a,d){b=_setpgid(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdSetsid(b,c,a,d){b=_setgid();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdSetuid(b,c,a,d){b=_setgid(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdSleep(b,c,a,d){b=_sleep(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdSymlink(b,c,a,d){b=_symlink(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdSync(b,c,a,d){_sync()}function _UnistdSysconf(b,c,a,d){b=_sysconf(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdTcgetpgrp(b,c,a,d){b=_tcgetpgrp(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdTcsetpgrp(b,c,a,d){b=_tcsetpgrp(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdTruncate(b,c,a,d){b=_truncate(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdTtyname(b,c,a,d){b=_ttyname(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdTtyname_r(b,c,a,d){b=_ttyname_r(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdUalarm(b,c,a,d){b=_alarm(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdUnlink(b,c,a,d){b=_unlink(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdUsleep(b,c,a,d){b=_usleep(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}function _UnistdVfork(b,c,a,d){b=_fork();HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdWrite(b,c,a,d){b=_write(HEAP32[HEAP32[(HEAP32[(a|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+4|0)>>2]+4|0)>>2]>>2],HEAP32[HEAP32[(HEAP32[(a+8|0)>>2]+4|0)>>2]>>2]);HEAP32[HEAP32[(c+4|0)>>2]>>2]=b}
function _UnistdSetupFunc(){for(var b=0,b=1;;)switch(b){case 1:b=_TableStrRegister(1680);b=0!=(_VariableDefined(b)|0)?3:2;break;case 2:_VariableDefinePlatformVar(0,1680,18408,16824,0);b=3;break;case 3:_VariableDefinePlatformVar(0,1648,HEAP32[4784],16280,1);_VariableDefinePlatformVar(0,1608,18408,96,1);_VariableDefinePlatformVar(0,1528,18408,104,1);_VariableDefinePlatformVar(0,1464,18408,88,1);return;default:assert(0,"bad label: "+b)}}
function _strxfrm(b,c,a){for(var d=0,d=1;;)switch(d){case 1:var e=_strlen(c),d=e>>>0<a>>>0?2:3;break;case 2:_strcpy(b,c);d=3;break;case 3:return e;default:assert(0,"bad label: "+d)}}
function _malloc(b){for(var c=0,c=1;;)switch(c){case 1:c=245>b>>>0?2:78;break;case 2:if(11>b>>>0)var a=16,c=4;else c=3;break;case 3:a=(b+11|0)&-8;c=4;break;case 4:var d=a>>>3,e=HEAP32[4086],f=e>>>(d>>>0),c=0==(f&3|0)?12:5;break;case 5:var g=(f&1^1)+d|0,h=g<<1,l=16384+(h<<2)|0,k=16384+((h+2|0)<<2)|0,m=HEAP32[k>>2],n=m+8|0,q=HEAP32[n>>2],c=(l|0)==(q|0)?6:7;break;case 6:HEAP32[4086]=e&(1<<g^-1);c=11;break;case 7:c=q>>>0<HEAP32[4090]>>>0?10:8;break;case 8:var p=q+12|0,c=(HEAP32[p>>2]|0)==(m|0)?9:10;break;
case 9:HEAP32[p>>2]=l;HEAP32[k>>2]=q;c=11;break;case 10:throw _abort(),"Reached an unreachable!";case 11:var s=g<<3;HEAP32[(m+4|0)>>2]=s|3;var t=m+(s|4)|0;HEAP32[t>>2]|=1;var r=n,c=341;break;case 12:if(a>>>0>HEAP32[4088]>>>0)c=13;else var u=a,c=160;break;case 13:c=0==(f|0)?27:14;break;case 14:var w=2<<d,v=f<<d&(w|-w|0),x=(v&(-v|0))-1|0,y=x>>>12&16,z=x>>>(y>>>0),B=z>>>5&8,E=z>>>(B>>>0),N=E>>>2&4,C=E>>>(N>>>0),K=C>>>1&2,H=C>>>(K>>>0),D=H>>>1&1,M=(B|y|N|K|D)+(H>>>(D>>>0))|0,P=M<<1,Q=16384+(P<<2)|0,F=
16384+((P+2|0)<<2)|0,J=HEAP32[F>>2],T=J+8|0,R=HEAP32[T>>2],c=(Q|0)==(R|0)?15:16;break;case 15:HEAP32[4086]=e&(1<<M^-1);c=20;break;case 16:c=R>>>0<HEAP32[4090]>>>0?19:17;break;case 17:var ja=R+12|0,c=(HEAP32[ja>>2]|0)==(J|0)?18:19;break;case 18:HEAP32[ja>>2]=Q;HEAP32[F>>2]=R;c=20;break;case 19:throw _abort(),"Reached an unreachable!";case 20:var da=M<<3,W=da-a|0;HEAP32[(J+4|0)>>2]=a|3;var U=J,ea=U+a|0;HEAP32[(U+(a|4)|0)>>2]=W|1;HEAP32[(U+da|0)>>2]=W;var pa=HEAP32[4088],c=0==(pa|0)?26:21;break;case 21:var ka=
HEAP32[4091],sa=pa>>>3,la=sa<<1,xa=16384+(la<<2)|0,fa=HEAP32[4086],ga=1<<sa,c=0==(fa&ga|0)?22:23;break;case 22:HEAP32[4086]=fa|ga;var ha=xa,ia=16384+((la+2|0)<<2)|0,c=25;break;case 23:var ma=16384+((la+2|0)<<2)|0,na=HEAP32[ma>>2];na>>>0<HEAP32[4090]>>>0?c=24:(ha=na,ia=ma,c=25);break;case 24:throw _abort(),"Reached an unreachable!";case 25:HEAP32[ia>>2]=ka;HEAP32[(ha+12|0)>>2]=ka;HEAP32[(ka+8|0)>>2]=ha;HEAP32[(ka+12|0)>>2]=xa;c=26;break;case 26:HEAP32[4088]=W;HEAP32[4091]=ea;r=T;c=341;break;case 27:var V=
HEAP32[4087];0==(V|0)?(u=a,c=160):c=28;break;case 28:var qa=(V&(-V|0))-1|0,cb=qa>>>12&16,db=qa>>>(cb>>>0),Fa=db>>>5&8,ta=db>>>(Fa>>>0),ya=ta>>>2&4,Ga=ta>>>(ya>>>0),Va=Ga>>>1&2,eb=Ga>>>(Va>>>0),$=eb>>>1&1,X=HEAP32[(16648+(((Fa|cb|ya|Va|$)+(eb>>>($>>>0))|0)<<2)|0)>>2],Wa=X,I=X,S=(HEAP32[(X+4|0)>>2]&-8)-a|0,c=29;break;case 29:var Ha=HEAP32[(Wa+16|0)>>2];if(0==(Ha|0))c=30;else var Qa=Ha,c=31;break;case 30:var fb=HEAP32[(Wa+20|0)>>2];0==(fb|0)?c=32:(Qa=fb,c=31);break;case 31:var gb=(HEAP32[(Qa+4|0)>>2]&
-8)-a|0,hb=gb>>>0<S>>>0,sb=hb?gb:S,tb=hb?Qa:I,Wa=Qa,I=tb,S=sb,c=29;break;case 32:var Ca=I,Xa=HEAP32[4090],c=Ca>>>0<Xa>>>0?76:33;break;case 33:var Ra=Ca+a|0,Ia=Ra,c=Ca>>>0<Ra>>>0?34:76;break;case 34:var aa=HEAP32[(I+24|0)>>2],oa=HEAP32[(I+12|0)>>2],c=(oa|0)==(I|0)?40:35;break;case 35:var Sa=HEAP32[(I+8|0)>>2],c=Sa>>>0<Xa>>>0?39:36;break;case 36:var Ya=Sa+12|0,c=(HEAP32[Ya>>2]|0)==(I|0)?37:39;break;case 37:var ib=oa+8|0,c=(HEAP32[ib>>2]|0)==(I|0)?38:39;break;case 38:HEAP32[Ya>>2]=oa;HEAP32[ib>>2]=Sa;
var ba=oa,c=47;break;case 39:throw _abort(),"Reached an unreachable!";case 40:var Za=I+20|0,$a=HEAP32[Za>>2];if(0==($a|0))c=41;else var Da=$a,Ja=Za,c=42;break;case 41:var Ta=I+16|0,Ka=HEAP32[Ta>>2];0==(Ka|0)?(ba=0,c=47):(Da=Ka,Ja=Ta,c=42);break;case 42:var ua=Da+20|0,za=HEAP32[ua>>2];0==(za|0)?c=43:(Da=za,Ja=ua,c=42);break;case 43:var jb=Da+16|0,kb=HEAP32[jb>>2];0==(kb|0)?c=44:(Da=kb,Ja=jb,c=42);break;case 44:c=Ja>>>0<Xa>>>0?46:45;break;case 45:HEAP32[Ja>>2]=0;ba=Da;c=47;break;case 46:throw _abort(),
"Reached an unreachable!";case 47:c=0==(aa|0)?67:48;break;case 48:var lb=I+28|0,mb=16648+(HEAP32[lb>>2]<<2)|0,c=(I|0)==(HEAP32[mb>>2]|0)?49:51;break;case 49:HEAP32[mb>>2]=ba;c=0==(ba|0)?50:57;break;case 50:HEAP32[4087]&=1<<HEAP32[lb>>2]^-1;c=67;break;case 51:c=aa>>>0<HEAP32[4090]>>>0?55:52;break;case 52:var nb=aa+16|0,c=(HEAP32[nb>>2]|0)==(I|0)?53:54;break;case 53:HEAP32[nb>>2]=ba;c=56;break;case 54:HEAP32[(aa+20|0)>>2]=ba;c=56;break;case 55:throw _abort(),"Reached an unreachable!";case 56:c=0==(ba|
0)?67:57;break;case 57:c=ba>>>0<HEAP32[4090]>>>0?66:58;break;case 58:HEAP32[(ba+24|0)>>2]=aa;var La=HEAP32[(I+16|0)>>2],c=0==(La|0)?62:59;break;case 59:c=La>>>0<HEAP32[4090]>>>0?61:60;break;case 60:HEAP32[(ba+16|0)>>2]=La;HEAP32[(La+24|0)>>2]=ba;c=62;break;case 61:throw _abort(),"Reached an unreachable!";case 62:var Ma=HEAP32[(I+20|0)>>2],c=0==(Ma|0)?67:63;break;case 63:c=Ma>>>0<HEAP32[4090]>>>0?65:64;break;case 64:HEAP32[(ba+20|0)>>2]=Ma;HEAP32[(Ma+24|0)>>2]=ba;c=67;break;case 65:throw _abort(),
"Reached an unreachable!";case 66:throw _abort(),"Reached an unreachable!";case 67:c=16>S>>>0?68:69;break;case 68:var ob=S+a|0;HEAP32[(I+4|0)>>2]=ob|3;var ub=Ca+(ob+4|0)|0;HEAP32[ub>>2]|=1;c=77;break;case 69:HEAP32[(I+4|0)>>2]=a|3;HEAP32[(Ca+(a|4)|0)>>2]=S|1;HEAP32[(Ca+(S+a|0)|0)>>2]=S;var vb=HEAP32[4088],c=0==(vb|0)?75:70;break;case 70:var Na=HEAP32[4091],va=vb>>>3,ra=va<<1,ab=16384+(ra<<2)|0,wb=HEAP32[4086],xb=1<<va,c=0==(wb&xb|0)?71:72;break;case 71:HEAP32[4086]=wb|xb;var Ua=ab,bb=16384+((ra+2|
0)<<2)|0,c=74;break;case 72:var Qb=16384+((ra+2|0)<<2)|0,Rb=HEAP32[Qb>>2];Rb>>>0<HEAP32[4090]>>>0?c=73:(Ua=Rb,bb=Qb,c=74);break;case 73:throw _abort(),"Reached an unreachable!";case 74:HEAP32[bb>>2]=Na;HEAP32[(Ua+12|0)>>2]=Na;HEAP32[(Na+8|0)>>2]=Ua;HEAP32[(Na+12|0)>>2]=ab;c=75;break;case 75:HEAP32[4088]=S;HEAP32[4091]=Ia;c=77;break;case 76:throw _abort(),"Reached an unreachable!";case 77:var Sb=I+8|0,gc=Sb;0==(Sb|0)?(u=a,c=160):(r=gc,c=341);break;case 78:4294967231<b>>>0?(u=-1,c=160):c=79;break;case 79:var hc=
b+11|0,G=hc&-8,Ld=HEAP32[4087];0==(Ld|0)?(u=G,c=160):c=80;break;case 80:var Md=-G|0,Ic=hc>>>8;if(0==(Ic|0))var Gb=0,c=83;else c=81;break;case 81:16777215<G>>>0?(Gb=31,c=83):c=82;break;case 82:var Nd=(Ic+1048320|0)>>>16&8,Od=Ic<<Nd,Pd=(Od+520192|0)>>>16&4,Qd=Od<<Pd,Rd=(Qd+245760|0)>>>16&2,Sd=(14-(Pd|Nd|Rd)|0)+(Qd<<Rd>>>15)|0,Gb=G>>>((Sd+7|0)>>>0)&1|Sd<<1,c=83;break;case 83:var Td=HEAP32[(16648+(Gb<<2)|0)>>2];if(0==(Td|0))var Tb=0,ic=Md,jc=0,c=90;else c=84;break;case 84:if(31==(Gb|0))var Ud=0,c=86;
else c=85;break;case 85:Ud=25-(Gb>>>1)|0;c=86;break;case 86:var Vd=0,Jc=Md,yb=Td,Kc=G<<Ud,Wd=0,c=87;break;case 87:var Xd=HEAP32[(yb+4|0)>>2]&-8,Lc=Xd-G|0;if(Lc>>>0<Jc>>>0)c=88;else var Mc=Vd,Nc=Jc,c=89;break;case 88:(Xd|0)==(G|0)?(Tb=yb,ic=Lc,jc=yb,c=90):(Mc=yb,Nc=Lc,c=89);break;case 89:var Oc=HEAP32[(yb+20|0)>>2],Pc=HEAP32[(yb+16+(Kc>>>31<<2)|0)>>2],Yd=0==(Oc|0)|(Oc|0)==(Pc|0)?Wd:Oc,nh=Kc<<1;0==(Pc|0)?(Tb=Mc,ic=Nc,jc=Yd,c=90):(Vd=Mc,Jc=Nc,yb=Pc,Kc=nh,Wd=Yd,c=87);break;case 90:if(0==(jc|0)&0==(Tb|
0))c=91;else var Qc=jc,c=93;break;case 91:var Zd=2<<Gb,Rc=Ld&(Zd|-Zd|0);0==(Rc|0)?(u=G,c=160):c=92;break;case 92:var $d=(Rc&(-Rc|0))-1|0,ae=$d>>>12&16,be=$d>>>(ae>>>0),ce=be>>>5&8,de=be>>>(ce>>>0),ee=de>>>2&4,fe=de>>>(ee>>>0),ge=fe>>>1&2,he=fe>>>(ge>>>0),ie=he>>>1&1,Qc=HEAP32[(16648+(((ce|ae|ee|ge|ie)+(he>>>(ie>>>0))|0)<<2)|0)>>2],c=93;break;case 93:if(0==(Qc|0))var wa=ic,ca=Tb,c=96;else var Hb=Qc,kc=ic,Sc=Tb,c=94;break;case 94:var je=(HEAP32[(Hb+4|0)>>2]&-8)-G|0,ke=je>>>0<kc>>>0,Tc=ke?je:kc,Uc=ke?
Hb:Sc,le=HEAP32[(Hb+16|0)>>2];0==(le|0)?c=95:(Hb=le,kc=Tc,Sc=Uc,c=94);break;case 95:var me=HEAP32[(Hb+20|0)>>2];0==(me|0)?(wa=Tc,ca=Uc,c=96):(Hb=me,kc=Tc,Sc=Uc,c=94);break;case 96:0==(ca|0)?(u=G,c=160):c=97;break;case 97:wa>>>0<(HEAP32[4088]-G|0)>>>0?c=98:(u=G,c=160);break;case 98:var Y=ca,Vc=HEAP32[4090],c=Y>>>0<Vc>>>0?158:99;break;case 99:var Wc=Y+G|0,ne=Wc,c=Y>>>0<Wc>>>0?100:158;break;case 100:var Ub=HEAP32[(ca+24|0)>>2],lc=HEAP32[(ca+12|0)>>2],c=(lc|0)==(ca|0)?106:101;break;case 101:var Xc=HEAP32[(ca+
8|0)>>2],c=Xc>>>0<Vc>>>0?105:102;break;case 102:var oe=Xc+12|0,c=(HEAP32[oe>>2]|0)==(ca|0)?103:105;break;case 103:var pe=lc+8|0,c=(HEAP32[pe>>2]|0)==(ca|0)?104:105;break;case 104:HEAP32[oe>>2]=lc;HEAP32[pe>>2]=Xc;var Aa=lc,c=113;break;case 105:throw _abort(),"Reached an unreachable!";case 106:var qe=ca+20|0,re=HEAP32[qe>>2];if(0==(re|0))c=107;else var Ib=re,Vb=qe,c=108;break;case 107:var se=ca+16|0,te=HEAP32[se>>2];0==(te|0)?(Aa=0,c=113):(Ib=te,Vb=se,c=108);break;case 108:var ue=Ib+20|0,ve=HEAP32[ue>>
2];0==(ve|0)?c=109:(Ib=ve,Vb=ue,c=108);break;case 109:var we=Ib+16|0,xe=HEAP32[we>>2];0==(xe|0)?c=110:(Ib=xe,Vb=we,c=108);break;case 110:c=Vb>>>0<Vc>>>0?112:111;break;case 111:HEAP32[Vb>>2]=0;Aa=Ib;c=113;break;case 112:throw _abort(),"Reached an unreachable!";case 113:c=0==(Ub|0)?133:114;break;case 114:var ye=ca+28|0,ze=16648+(HEAP32[ye>>2]<<2)|0,c=(ca|0)==(HEAP32[ze>>2]|0)?115:117;break;case 115:HEAP32[ze>>2]=Aa;c=0==(Aa|0)?116:123;break;case 116:HEAP32[4087]&=1<<HEAP32[ye>>2]^-1;c=133;break;case 117:c=
Ub>>>0<HEAP32[4090]>>>0?121:118;break;case 118:var Ae=Ub+16|0,c=(HEAP32[Ae>>2]|0)==(ca|0)?119:120;break;case 119:HEAP32[Ae>>2]=Aa;c=122;break;case 120:HEAP32[(Ub+20|0)>>2]=Aa;c=122;break;case 121:throw _abort(),"Reached an unreachable!";case 122:c=0==(Aa|0)?133:123;break;case 123:c=Aa>>>0<HEAP32[4090]>>>0?132:124;break;case 124:HEAP32[(Aa+24|0)>>2]=Ub;var mc=HEAP32[(ca+16|0)>>2],c=0==(mc|0)?128:125;break;case 125:c=mc>>>0<HEAP32[4090]>>>0?127:126;break;case 126:HEAP32[(Aa+16|0)>>2]=mc;HEAP32[(mc+
24|0)>>2]=Aa;c=128;break;case 127:throw _abort(),"Reached an unreachable!";case 128:var nc=HEAP32[(ca+20|0)>>2],c=0==(nc|0)?133:129;break;case 129:c=nc>>>0<HEAP32[4090]>>>0?131:130;break;case 130:HEAP32[(Aa+20|0)>>2]=nc;HEAP32[(nc+24|0)>>2]=Aa;c=133;break;case 131:throw _abort(),"Reached an unreachable!";case 132:throw _abort(),"Reached an unreachable!";case 133:c=16>wa>>>0?134:135;break;case 134:var Be=wa+G|0;HEAP32[(ca+4|0)>>2]=Be|3;var Ce=Y+(Be+4|0)|0;HEAP32[Ce>>2]|=1;c=159;break;case 135:HEAP32[(ca+
4|0)>>2]=G|3;HEAP32[(Y+(G|4)|0)>>2]=wa|1;HEAP32[(Y+(wa+G|0)|0)>>2]=wa;var De=wa>>>3,c=256>wa>>>0?136:141;break;case 136:var Yc=De<<1,Ee=16384+(Yc<<2)|0,Fe=HEAP32[4086],Ge=1<<De,c=0==(Fe&Ge|0)?137:138;break;case 137:HEAP32[4086]=Fe|Ge;var Zc=Ee,He=16384+((Yc+2|0)<<2)|0,c=140;break;case 138:var Ie=16384+((Yc+2|0)<<2)|0,Je=HEAP32[Ie>>2];Je>>>0<HEAP32[4090]>>>0?c=139:(Zc=Je,He=Ie,c=140);break;case 139:throw _abort(),"Reached an unreachable!";case 140:HEAP32[He>>2]=ne;HEAP32[(Zc+12|0)>>2]=ne;HEAP32[(Y+
(G+8|0)|0)>>2]=Zc;HEAP32[(Y+(G+12|0)|0)>>2]=Ee;c=159;break;case 141:var pb=Wc,$c=wa>>>8;if(0==($c|0))var zb=0,c=144;else c=142;break;case 142:16777215<wa>>>0?(zb=31,c=144):c=143;break;case 143:var Ke=($c+1048320|0)>>>16&8,Le=$c<<Ke,Me=(Le+520192|0)>>>16&4,Ne=Le<<Me,Oe=(Ne+245760|0)>>>16&2,Pe=(14-(Me|Ke|Oe)|0)+(Ne<<Oe>>>15)|0,zb=wa>>>((Pe+7|0)>>>0)&1|Pe<<1,c=144;break;case 144:var ad=16648+(zb<<2)|0;HEAP32[(Y+(G+28|0)|0)>>2]=zb;var oh=Y+(G+16|0)|0;HEAP32[(Y+(G+20|0)|0)>>2]=0;HEAP32[oh>>2]=0;var Qe=
HEAP32[4087],Re=1<<zb,c=0==(Qe&Re|0)?145:146;break;case 145:HEAP32[4087]=Qe|Re;HEAP32[ad>>2]=pb;HEAP32[(Y+(G+24|0)|0)>>2]=ad;HEAP32[(Y+(G+12|0)|0)>>2]=pb;HEAP32[(Y+(G+8|0)|0)>>2]=pb;c=159;break;case 146:var ph=HEAP32[ad>>2];if(31==(zb|0))var Se=0,c=148;else c=147;break;case 147:Se=25-(zb>>>1)|0;c=148;break;case 148:var bd=wa<<Se,Ab=ph,c=149;break;case 149:c=(HEAP32[(Ab+4|0)>>2]&-8|0)==(wa|0)?154:150;break;case 150:var cd=Ab+16+(bd>>>31<<2)|0,Te=HEAP32[cd>>2],qh=bd<<1;0==(Te|0)?c=151:(bd=qh,Ab=Te,
c=149);break;case 151:c=cd>>>0<HEAP32[4090]>>>0?153:152;break;case 152:HEAP32[cd>>2]=pb;HEAP32[(Y+(G+24|0)|0)>>2]=Ab;HEAP32[(Y+(G+12|0)|0)>>2]=pb;HEAP32[(Y+(G+8|0)|0)>>2]=pb;c=159;break;case 153:throw _abort(),"Reached an unreachable!";case 154:var Ue=Ab+8|0,dd=HEAP32[Ue>>2],Ve=HEAP32[4090],c=Ab>>>0<Ve>>>0?157:155;break;case 155:c=dd>>>0<Ve>>>0?157:156;break;case 156:HEAP32[(dd+12|0)>>2]=pb;HEAP32[Ue>>2]=pb;HEAP32[(Y+(G+8|0)|0)>>2]=dd;HEAP32[(Y+(G+12|0)|0)>>2]=Ab;HEAP32[(Y+(G+24|0)|0)>>2]=0;c=159;
break;case 157:throw _abort(),"Reached an unreachable!";case 158:throw _abort(),"Reached an unreachable!";case 159:var We=ca+8|0,rh=We;0==(We|0)?(u=G,c=160):(r=rh,c=341);break;case 160:var Wb=HEAP32[4088],c=u>>>0>Wb>>>0?165:161;break;case 161:var oc=Wb-u|0,Xb=HEAP32[4091],c=15<oc>>>0?162:163;break;case 162:var ed=Xb;HEAP32[4091]=ed+u|0;HEAP32[4088]=oc;HEAP32[(ed+(u+4|0)|0)>>2]=oc|1;HEAP32[(ed+Wb|0)>>2]=oc;HEAP32[(Xb+4|0)>>2]=u|3;c=164;break;case 163:HEAP32[4088]=0;HEAP32[4091]=0;HEAP32[(Xb+4|0)>>
2]=Wb|3;var Xe=Xb+(Wb+4|0)|0;HEAP32[Xe>>2]|=1;c=164;break;case 164:r=Xb+8|0;c=341;break;case 165:var Ye=HEAP32[4089],c=u>>>0<Ye>>>0?166:167;break;case 166:var Ze=Ye-u|0;HEAP32[4089]=Ze;var fd=HEAP32[4092],$e=fd;HEAP32[4092]=$e+u|0;HEAP32[($e+(u+4|0)|0)>>2]=Ze|1;HEAP32[(fd+4|0)>>2]=u|3;r=fd+8|0;c=341;break;case 167:c=0==(HEAP32[4072]|0)?168:171;break;case 168:var pc=_sysconf(30),c=0==((pc-1|0)&pc|0)?170:169;break;case 169:throw _abort(),"Reached an unreachable!";case 170:HEAP32[4074]=pc;HEAP32[4073]=
pc;HEAP32[4075]=-1;HEAP32[4076]=-1;HEAP32[4077]=0;HEAP32[4197]=0;var sh=_time(0)&-16^1431655768;HEAP32[4072]=sh;c=171;break;case 171:var th=u+48|0,af=HEAP32[4074],bf=u+47|0,cf=af+bf|0,df=-af|0,Jb=cf&df;Jb>>>0>u>>>0?c=172:(r=0,c=341);break;case 172:var ef=HEAP32[4196],c=0==(ef|0)?174:173;break;case 173:var ff=HEAP32[4194],gf=ff+Jb|0;gf>>>0<=ff>>>0|gf>>>0>ef>>>0?(r=0,c=341):c=174;break;case 174:if(0==(HEAP32[4197]&4|0))c=175;else var hf=0,c=198;break;case 175:var jf=HEAP32[4092],c=0==(jf|0)?181:176;
break;case 176:var kf=jf,Yb=16792,c=177;break;case 177:var lf=Yb|0,mf=HEAP32[lf>>2],c=mf>>>0>kf>>>0?179:178;break;case 178:var nf=Yb+4|0,c=(mf+HEAP32[nf>>2]|0)>>>0>kf>>>0?180:179;break;case 179:var of=HEAP32[(Yb+8|0)>>2];0==(of|0)?c=181:(Yb=of,c=177);break;case 180:c=0==(Yb|0)?181:188;break;case 181:var qc=_sbrk(0);if(-1==(qc|0))var Kb=0,c=197;else c=182;break;case 182:var gd=qc,pf=HEAP32[4073],qf=pf-1|0;if(0==(qf&gd|0))var Bb=Jb,c=184;else c=183;break;case 183:Bb=(Jb-gd|0)+((qf+gd|0)&(-pf|0))|0;
c=184;break;case 184:var rf=HEAP32[4194],sf=rf+Bb|0;Bb>>>0>u>>>0&2147483647>Bb>>>0?c=185:(Kb=0,c=197);break;case 185:var tf=HEAP32[4196],c=0==(tf|0)?187:186;break;case 186:sf>>>0<=rf>>>0|sf>>>0>tf>>>0?(Kb=0,c=197):c=187;break;case 187:var uf=_sbrk(Bb),vf=(uf|0)==(qc|0),hd=vf?qc:-1,rc=vf?Bb:0,sc=uf,qb=Bb,c=190;break;case 188:var tc=(cf-HEAP32[4089]|0)&df;2147483647>tc>>>0?c=189:(Kb=0,c=197);break;case 189:var id=_sbrk(tc),wf=(id|0)==(HEAP32[lf>>2]+HEAP32[nf>>2]|0),uh=wf?tc:0,hd=wf?id:-1,rc=uh,sc=id,
qb=tc,c=190;break;case 190:var vh=-qb|0;if(-1==(hd|0))c=191;else var O=rc,A=hd,c=201;break;case 191:if(-1!=(sc|0)&2147483647>qb>>>0&qb>>>0<th>>>0)c=192;else var jd=qb,c=196;break;case 192:var xf=HEAP32[4074],kd=((bf-qb|0)+xf|0)&(-xf|0);2147483647>kd>>>0?c=193:(jd=qb,c=196);break;case 193:c=-1==(_sbrk(kd)|0)?195:194;break;case 194:jd=kd+qb|0;c=196;break;case 195:_sbrk(vh);Kb=rc;c=197;break;case 196:-1==(sc|0)?(Kb=rc,c=197):(O=jd,A=sc,c=201);break;case 197:HEAP32[4197]|=4;hf=Kb;c=198;break;case 198:c=
2147483647>Jb>>>0?199:340;break;case 199:var uc=_sbrk(Jb),ld=_sbrk(0),c=-1!=(ld|0)&-1!=(uc|0)&uc>>>0<ld>>>0?200:340;break;case 200:var yf=ld-uc|0,zf=yf>>>0>(u+40|0)>>>0,wh=zf?yf:hf,Af=zf?uc:-1;-1==(Af|0)?c=340:(O=wh,A=Af,c=201);break;case 201:var md=HEAP32[4194]+O|0;HEAP32[4194]=md;c=md>>>0>HEAP32[4195]>>>0?202:203;break;case 202:HEAP32[4195]=md;c=203;break;case 203:var L=HEAP32[4092];if(0==(L|0))c=204;else var Zb=16792,c=211;break;case 204:var Bf=HEAP32[4090],c=0==(Bf|0)|A>>>0<Bf>>>0?205:206;break;
case 205:HEAP32[4090]=A;c=206;break;case 206:HEAP32[4198]=A;HEAP32[4199]=O;HEAP32[4201]=0;HEAP32[4095]=HEAP32[4072];HEAP32[4094]=-1;var nd=0,c=207;break;case 207:var od=nd<<1,Cf=16384+(od<<2)|0;HEAP32[(16384+((od+3|0)<<2)|0)>>2]=Cf;HEAP32[(16384+((od+2|0)<<2)|0)>>2]=Cf;var Df=nd+1|0;32>Df>>>0?(nd=Df,c=207):c=208;break;case 208:var xh=O-40|0,Ef=A+8|0;if(0==(Ef&7|0))var vc=0,c=210;else c=209;break;case 209:vc=(-Ef|0)&7;c=210;break;case 210:var Ff=xh-vc|0;HEAP32[4092]=A+vc|0;HEAP32[4089]=Ff;HEAP32[(A+
(vc+4|0)|0)>>2]=Ff|1;HEAP32[(A+(O-36|0)|0)>>2]=40;HEAP32[4093]=HEAP32[4076];c=338;break;case 211:var Gf=HEAP32[(Zb|0)>>2],Hf=Zb+4|0,If=HEAP32[Hf>>2],c=(A|0)==(Gf+If|0)?213:212;break;case 212:var Jf=HEAP32[(Zb+8|0)>>2];0==(Jf|0)?c=218:(Zb=Jf,c=211);break;case 213:c=0==(HEAP32[(Zb+12|0)>>2]&8|0)?214:218;break;case 214:var Kf=L,c=Kf>>>0>=Gf>>>0&Kf>>>0<A>>>0?215:218;break;case 215:HEAP32[Hf>>2]=If+O|0;var Lf=HEAP32[4092],Mf=HEAP32[4089]+O|0,pd=Lf,Nf=Lf+8|0;if(0==(Nf&7|0))var wc=0,c=217;else c=216;break;
case 216:wc=(-Nf|0)&7;c=217;break;case 217:var Of=Mf-wc|0;HEAP32[4092]=pd+wc|0;HEAP32[4089]=Of;HEAP32[(pd+(wc+4|0)|0)>>2]=Of|1;HEAP32[(pd+(Mf+4|0)|0)>>2]=40;HEAP32[4093]=HEAP32[4076];c=338;break;case 218:c=A>>>0<HEAP32[4090]>>>0?219:220;break;case 219:HEAP32[4090]=A;c=220;break;case 220:var yh=A+O|0,$b=16792,c=221;break;case 221:var Pf=$b|0,c=(HEAP32[Pf>>2]|0)==(yh|0)?223:222;break;case 222:var Qf=HEAP32[($b+8|0)>>2];0==(Qf|0)?c=304:($b=Qf,c=221);break;case 223:c=0==(HEAP32[($b+12|0)>>2]&8|0)?224:
304;break;case 224:HEAP32[Pf>>2]=A;var Rf=$b+4|0;HEAP32[Rf>>2]=HEAP32[Rf>>2]+O|0;var Sf=A+8|0;if(0==(Sf&7|0))var ac=0,c=226;else c=225;break;case 225:ac=(-Sf|0)&7;c=226;break;case 226:var zh=A+ac|0,Tf=A+(O+8|0)|0;if(0==(Tf&7|0))var Ea=0,c=228;else c=227;break;case 227:Ea=(-Tf|0)&7;c=228;break;case 228:var qd=A+(Ea+O|0)|0,bc=qd,Z=ac+u|0,Uf=A+Z|0,xc=Uf,yc=(qd-zh|0)-u|0;HEAP32[(A+(ac+4|0)|0)>>2]=u|3;c=(bc|0)==(HEAP32[4092]|0)?229:230;break;case 229:var Vf=HEAP32[4089]+yc|0;HEAP32[4089]=Vf;HEAP32[4092]=
xc;HEAP32[(A+(Z+4|0)|0)>>2]=Vf|1;c=303;break;case 230:c=(bc|0)==(HEAP32[4091]|0)?231:232;break;case 231:var zc=HEAP32[4088]+yc|0;HEAP32[4088]=zc;HEAP32[4091]=xc;HEAP32[(A+(Z+4|0)|0)>>2]=zc|1;HEAP32[(A+(zc+Z|0)|0)>>2]=zc;c=303;break;case 232:var rd=O+4|0,Ac=HEAP32[(A+(rd+Ea|0)|0)>>2];if(1==(Ac&3|0))c=233;else var Wf=bc,Oa=yc,c=280;break;case 233:var Xf=Ac&-8,Yf=Ac>>>3,c=256>Ac>>>0?234:246;break;case 234:var Lb=HEAP32[(A+((Ea|8)+O|0)|0)>>2],Mb=HEAP32[(A+((O+12|0)+Ea|0)|0)>>2],Zf=16384+(Yf<<1<<2)|0,
c=(Lb|0)==(Zf|0)?237:235;break;case 235:c=Lb>>>0<HEAP32[4090]>>>0?245:236;break;case 236:c=(HEAP32[(Lb+12|0)>>2]|0)==(bc|0)?237:245;break;case 237:c=(Mb|0)==(Lb|0)?238:239;break;case 238:HEAP32[4086]&=1<<Yf^-1;c=279;break;case 239:c=(Mb|0)==(Zf|0)?240:241;break;case 240:var $f=Mb+8|0,c=243;break;case 241:c=Mb>>>0<HEAP32[4090]>>>0?244:242;break;case 242:var ag=Mb+8|0;(HEAP32[ag>>2]|0)==(bc|0)?($f=ag,c=243):c=244;break;case 243:HEAP32[(Lb+12|0)>>2]=Mb;HEAP32[$f>>2]=Lb;c=279;break;case 244:throw _abort(),
"Reached an unreachable!";case 245:throw _abort(),"Reached an unreachable!";case 246:var cc=qd,dc=HEAP32[(A+((Ea|24)+O|0)|0)>>2],Bc=HEAP32[(A+((O+12|0)+Ea|0)|0)>>2],c=(Bc|0)==(cc|0)?252:247;break;case 247:var sd=HEAP32[(A+((Ea|8)+O|0)|0)>>2],c=sd>>>0<HEAP32[4090]>>>0?251:248;break;case 248:var bg=sd+12|0,c=(HEAP32[bg>>2]|0)==(cc|0)?249:251;break;case 249:var cg=Bc+8|0,c=(HEAP32[cg>>2]|0)==(cc|0)?250:251;break;case 250:HEAP32[bg>>2]=Bc;HEAP32[cg>>2]=sd;var Ba=Bc,c=259;break;case 251:throw _abort(),
"Reached an unreachable!";case 252:var dg=Ea|16,eg=A+(rd+dg|0)|0,fg=HEAP32[eg>>2];if(0==(fg|0))c=253;else var Nb=fg,ec=eg,c=254;break;case 253:var gg=A+(dg+O|0)|0,hg=HEAP32[gg>>2];0==(hg|0)?(Ba=0,c=259):(Nb=hg,ec=gg,c=254);break;case 254:var ig=Nb+20|0,jg=HEAP32[ig>>2];0==(jg|0)?c=255:(Nb=jg,ec=ig,c=254);break;case 255:var kg=Nb+16|0,lg=HEAP32[kg>>2];0==(lg|0)?c=256:(Nb=lg,ec=kg,c=254);break;case 256:c=ec>>>0<HEAP32[4090]>>>0?258:257;break;case 257:HEAP32[ec>>2]=0;Ba=Nb;c=259;break;case 258:throw _abort(),
"Reached an unreachable!";case 259:c=0==(dc|0)?279:260;break;case 260:var mg=A+((O+28|0)+Ea|0)|0,ng=16648+(HEAP32[mg>>2]<<2)|0,c=(cc|0)==(HEAP32[ng>>2]|0)?261:263;break;case 261:HEAP32[ng>>2]=Ba;c=0==(Ba|0)?262:269;break;case 262:HEAP32[4087]&=1<<HEAP32[mg>>2]^-1;c=279;break;case 263:c=dc>>>0<HEAP32[4090]>>>0?267:264;break;case 264:var og=dc+16|0,c=(HEAP32[og>>2]|0)==(cc|0)?265:266;break;case 265:HEAP32[og>>2]=Ba;c=268;break;case 266:HEAP32[(dc+20|0)>>2]=Ba;c=268;break;case 267:throw _abort(),"Reached an unreachable!";
case 268:c=0==(Ba|0)?279:269;break;case 269:c=Ba>>>0<HEAP32[4090]>>>0?278:270;break;case 270:HEAP32[(Ba+24|0)>>2]=dc;var pg=Ea|16,Cc=HEAP32[(A+(pg+O|0)|0)>>2],c=0==(Cc|0)?274:271;break;case 271:c=Cc>>>0<HEAP32[4090]>>>0?273:272;break;case 272:HEAP32[(Ba+16|0)>>2]=Cc;HEAP32[(Cc+24|0)>>2]=Ba;c=274;break;case 273:throw _abort(),"Reached an unreachable!";case 274:var Dc=HEAP32[(A+(rd+pg|0)|0)>>2],c=0==(Dc|0)?279:275;break;case 275:c=Dc>>>0<HEAP32[4090]>>>0?277:276;break;case 276:HEAP32[(Ba+20|0)>>2]=
Dc;HEAP32[(Dc+24|0)>>2]=Ba;c=279;break;case 277:throw _abort(),"Reached an unreachable!";case 278:throw _abort(),"Reached an unreachable!";case 279:var Ah=Xf+yc|0,Wf=A+((Xf|Ea)+O|0)|0,Oa=Ah,c=280;break;case 280:var qg=Wf+4|0;HEAP32[qg>>2]&=-2;HEAP32[(A+(Z+4|0)|0)>>2]=Oa|1;HEAP32[(A+(Oa+Z|0)|0)>>2]=Oa;var rg=Oa>>>3,c=256>Oa>>>0?281:286;break;case 281:var td=rg<<1,sg=16384+(td<<2)|0,tg=HEAP32[4086],ug=1<<rg,c=0==(tg&ug|0)?282:283;break;case 282:HEAP32[4086]=tg|ug;var ud=sg,vg=16384+((td+2|0)<<2)|0,
c=285;break;case 283:var wg=16384+((td+2|0)<<2)|0,xg=HEAP32[wg>>2];xg>>>0<HEAP32[4090]>>>0?c=284:(ud=xg,vg=wg,c=285);break;case 284:throw _abort(),"Reached an unreachable!";case 285:HEAP32[vg>>2]=xc;HEAP32[(ud+12|0)>>2]=xc;HEAP32[(A+(Z+8|0)|0)>>2]=ud;HEAP32[(A+(Z+12|0)|0)>>2]=sg;c=303;break;case 286:var rb=Uf,vd=Oa>>>8;if(0==(vd|0))var Cb=0,c=289;else c=287;break;case 287:16777215<Oa>>>0?(Cb=31,c=289):c=288;break;case 288:var yg=(vd+1048320|0)>>>16&8,zg=vd<<yg,Ag=(zg+520192|0)>>>16&4,Bg=zg<<Ag,Cg=
(Bg+245760|0)>>>16&2,Dg=(14-(Ag|yg|Cg)|0)+(Bg<<Cg>>>15)|0,Cb=Oa>>>((Dg+7|0)>>>0)&1|Dg<<1,c=289;break;case 289:var wd=16648+(Cb<<2)|0;HEAP32[(A+(Z+28|0)|0)>>2]=Cb;var Bh=A+(Z+16|0)|0;HEAP32[(A+(Z+20|0)|0)>>2]=0;HEAP32[Bh>>2]=0;var Eg=HEAP32[4087],Fg=1<<Cb,c=0==(Eg&Fg|0)?290:291;break;case 290:HEAP32[4087]=Eg|Fg;HEAP32[wd>>2]=rb;HEAP32[(A+(Z+24|0)|0)>>2]=wd;HEAP32[(A+(Z+12|0)|0)>>2]=rb;HEAP32[(A+(Z+8|0)|0)>>2]=rb;c=303;break;case 291:var Ch=HEAP32[wd>>2];if(31==(Cb|0))var Gg=0,c=293;else c=292;break;
case 292:Gg=25-(Cb>>>1)|0;c=293;break;case 293:var xd=Oa<<Gg,Db=Ch,c=294;break;case 294:c=(HEAP32[(Db+4|0)>>2]&-8|0)==(Oa|0)?299:295;break;case 295:var yd=Db+16+(xd>>>31<<2)|0,Hg=HEAP32[yd>>2],Dh=xd<<1;0==(Hg|0)?c=296:(xd=Dh,Db=Hg,c=294);break;case 296:c=yd>>>0<HEAP32[4090]>>>0?298:297;break;case 297:HEAP32[yd>>2]=rb;HEAP32[(A+(Z+24|0)|0)>>2]=Db;HEAP32[(A+(Z+12|0)|0)>>2]=rb;HEAP32[(A+(Z+8|0)|0)>>2]=rb;c=303;break;case 298:throw _abort(),"Reached an unreachable!";case 299:var Ig=Db+8|0,zd=HEAP32[Ig>>
2],Jg=HEAP32[4090],c=Db>>>0<Jg>>>0?302:300;break;case 300:c=zd>>>0<Jg>>>0?302:301;break;case 301:HEAP32[(zd+12|0)>>2]=rb;HEAP32[Ig>>2]=rb;HEAP32[(A+(Z+8|0)|0)>>2]=zd;HEAP32[(A+(Z+12|0)|0)>>2]=Db;HEAP32[(A+(Z+24|0)|0)>>2]=0;c=303;break;case 302:throw _abort(),"Reached an unreachable!";case 303:r=A+(ac|8)|0;c=341;break;case 304:var Ob=L,Ec=16792,c=305;break;case 305:var Fc=HEAP32[(Ec|0)>>2],c=Fc>>>0>Ob>>>0?307:306;break;case 306:var Ad=HEAP32[(Ec+4|0)>>2],Bd=Fc+Ad|0,c=Bd>>>0>Ob>>>0?308:307;break;case 307:Ec=
HEAP32[(Ec+8|0)>>2];c=305;break;case 308:var Eh=Ad-47|0,Kg=Fc+(Ad-39|0)|0;if(0==(Kg&7|0))var Lg=0,c=310;else c=309;break;case 309:Lg=(-Kg|0)&7;c=310;break;case 310:var Mg=Fc+(Eh+Lg|0)|0,Pb=Mg>>>0<(L+16|0)>>>0?Ob:Mg,fc=Pb+8|0,Fh=fc,Gh=O-40|0,Ng=A+8|0;if(0==(Ng&7|0))var Gc=0,c=312;else c=311;break;case 311:Gc=(-Ng|0)&7;c=312;break;case 312:var Og=Gh-Gc|0;HEAP32[4092]=A+Gc|0;HEAP32[4089]=Og;HEAP32[(A+(Gc+4|0)|0)>>2]=Og|1;HEAP32[(A+(O-36|0)|0)>>2]=40;HEAP32[4093]=HEAP32[4076];HEAP32[(Pb+4|0)>>2]=27;assert(!0);
HEAP32[fc>>2]=HEAP32[4198];HEAP32[fc+4>>2]=HEAP32[4199];HEAP32[fc+8>>2]=HEAP32[4200];HEAP32[fc+12>>2]=HEAP32[4201];HEAP32[4198]=A;HEAP32[4199]=O;HEAP32[4201]=0;HEAP32[4200]=Fh;var Pg=Pb+28|0;HEAP32[Pg>>2]=7;if((Pb+32|0)>>>0<Bd>>>0)var Cd=Pg,c=313;else c=314;break;case 313:var Qg=Cd+4|0;HEAP32[Qg>>2]=7;(Cd+8|0)>>>0<Bd>>>0?(Cd=Qg,c=313):c=314;break;case 314:c=(Pb|0)==(Ob|0)?338:315;break;case 315:var Pa=Pb-L|0,Hh=Ob+Pa|0,Rg=Ob+(Pa+4|0)|0;HEAP32[Rg>>2]&=-2;HEAP32[(L+4|0)>>2]=Pa|1;HEAP32[Hh>>2]=Pa;var Sg=
Pa>>>3,c=256>Pa>>>0?316:321;break;case 316:var Dd=Sg<<1,Tg=16384+(Dd<<2)|0,Ug=HEAP32[4086],Vg=1<<Sg,c=0==(Ug&Vg|0)?317:318;break;case 317:HEAP32[4086]=Ug|Vg;var Ed=Tg,Wg=16384+((Dd+2|0)<<2)|0,c=320;break;case 318:var Xg=16384+((Dd+2|0)<<2)|0,Yg=HEAP32[Xg>>2];Yg>>>0<HEAP32[4090]>>>0?c=319:(Ed=Yg,Wg=Xg,c=320);break;case 319:throw _abort(),"Reached an unreachable!";case 320:HEAP32[Wg>>2]=L;HEAP32[(Ed+12|0)>>2]=L;HEAP32[(L+8|0)>>2]=Ed;HEAP32[(L+12|0)>>2]=Tg;c=338;break;case 321:var Hc=L,Fd=Pa>>>8;if(0==
(Fd|0))var Eb=0,c=324;else c=322;break;case 322:16777215<Pa>>>0?(Eb=31,c=324):c=323;break;case 323:var Zg=(Fd+1048320|0)>>>16&8,$g=Fd<<Zg,ah=($g+520192|0)>>>16&4,bh=$g<<ah,ch=(bh+245760|0)>>>16&2,dh=(14-(ah|Zg|ch)|0)+(bh<<ch>>>15)|0,Eb=Pa>>>((dh+7|0)>>>0)&1|dh<<1,c=324;break;case 324:var Gd=16648+(Eb<<2)|0;HEAP32[(L+28|0)>>2]=Eb;HEAP32[(L+20|0)>>2]=0;HEAP32[(L+16|0)>>2]=0;var eh=HEAP32[4087],fh=1<<Eb,c=0==(eh&fh|0)?325:326;break;case 325:HEAP32[4087]=eh|fh;HEAP32[Gd>>2]=Hc;HEAP32[(L+24|0)>>2]=Gd;
HEAP32[(L+12|0)>>2]=L;HEAP32[(L+8|0)>>2]=L;c=338;break;case 326:var Ih=HEAP32[Gd>>2];if(31==(Eb|0))var gh=0,c=328;else c=327;break;case 327:gh=25-(Eb>>>1)|0;c=328;break;case 328:var Hd=Pa<<gh,Fb=Ih,c=329;break;case 329:c=(HEAP32[(Fb+4|0)>>2]&-8|0)==(Pa|0)?334:330;break;case 330:var Id=Fb+16+(Hd>>>31<<2)|0,hh=HEAP32[Id>>2],Jh=Hd<<1;0==(hh|0)?c=331:(Hd=Jh,Fb=hh,c=329);break;case 331:c=Id>>>0<HEAP32[4090]>>>0?333:332;break;case 332:HEAP32[Id>>2]=Hc;HEAP32[(L+24|0)>>2]=Fb;HEAP32[(L+12|0)>>2]=L;HEAP32[(L+
8|0)>>2]=L;c=338;break;case 333:throw _abort(),"Reached an unreachable!";case 334:var ih=Fb+8|0,Jd=HEAP32[ih>>2],jh=HEAP32[4090],c=Fb>>>0<jh>>>0?337:335;break;case 335:c=Jd>>>0<jh>>>0?337:336;break;case 336:HEAP32[(Jd+12|0)>>2]=Hc;HEAP32[ih>>2]=Hc;HEAP32[(L+8|0)>>2]=Jd;HEAP32[(L+12|0)>>2]=Fb;HEAP32[(L+24|0)>>2]=0;c=338;break;case 337:throw _abort(),"Reached an unreachable!";case 338:var kh=HEAP32[4089],c=kh>>>0>u>>>0?339:340;break;case 339:var lh=kh-u|0;HEAP32[4089]=lh;var Kd=HEAP32[4092],mh=Kd;HEAP32[4092]=
mh+u|0;HEAP32[(mh+(u+4|0)|0)>>2]=lh|1;HEAP32[(Kd+4|0)>>2]=u|3;r=Kd+8|0;c=341;break;case 340:var Kh=___errno_location();HEAP32[Kh>>2]=12;r=0;c=341;break;case 341:return r;default:assert(0,"bad label: "+c)}}Module._malloc=_malloc;
function _free(b){for(var c=0,c=1;;)switch(c){case 1:c=0==(b|0)?140:2;break;case 2:var a=b-8|0,d=a,e=HEAP32[4090],c=a>>>0<e>>>0?139:3;break;case 3:var f=HEAP32[(b-4|0)>>2],g=f&3,c=1==(g|0)?139:4;break;case 4:var h=f&-8,l=b+(h-8|0)|0,k=l;if(0==(f&1|0))c=5;else var m=d,n=h,c=56;break;case 5:var q=HEAP32[a>>2],c=0==(g|0)?140:6;break;case 6:var p=-8-q|0,s=b+p|0,t=s,r=q+h|0,c=s>>>0<e>>>0?139:7;break;case 7:c=(t|0)==(HEAP32[4091]|0)?54:8;break;case 8:var u=q>>>3,c=256>q>>>0?9:21;break;case 9:var w=HEAP32[(b+
(p+8|0)|0)>>2],v=HEAP32[(b+(p+12|0)|0)>>2],x=16384+(u<<1<<2)|0,c=(w|0)==(x|0)?12:10;break;case 10:c=w>>>0<e>>>0?20:11;break;case 11:c=(HEAP32[(w+12|0)>>2]|0)==(t|0)?12:20;break;case 12:c=(v|0)==(w|0)?13:14;break;case 13:HEAP32[4086]&=1<<u^-1;m=t;n=r;c=56;break;case 14:c=(v|0)==(x|0)?15:16;break;case 15:var y=v+8|0,c=18;break;case 16:c=v>>>0<e>>>0?19:17;break;case 17:var z=v+8|0;(HEAP32[z>>2]|0)==(t|0)?(y=z,c=18):c=19;break;case 18:HEAP32[(w+12|0)>>2]=v;HEAP32[y>>2]=w;m=t;n=r;c=56;break;case 19:throw _abort(),
"Reached an unreachable!";case 20:throw _abort(),"Reached an unreachable!";case 21:var B=s,E=HEAP32[(b+(p+24|0)|0)>>2],N=HEAP32[(b+(p+12|0)|0)>>2],c=(N|0)==(B|0)?27:22;break;case 22:var C=HEAP32[(b+(p+8|0)|0)>>2],c=C>>>0<e>>>0?26:23;break;case 23:var K=C+12|0,c=(HEAP32[K>>2]|0)==(B|0)?24:26;break;case 24:var H=N+8|0,c=(HEAP32[H>>2]|0)==(B|0)?25:26;break;case 25:HEAP32[K>>2]=N;HEAP32[H>>2]=C;var D=N,c=34;break;case 26:throw _abort(),"Reached an unreachable!";case 27:var M=b+(p+20|0)|0,P=HEAP32[M>>
2];if(0==(P|0))c=28;else var Q=P,F=M,c=29;break;case 28:var J=b+(p+16|0)|0,T=HEAP32[J>>2];0==(T|0)?(D=0,c=34):(Q=T,F=J,c=29);break;case 29:var R=Q+20|0,ja=HEAP32[R>>2];0==(ja|0)?c=30:(Q=ja,F=R,c=29);break;case 30:var da=Q+16|0,W=HEAP32[da>>2];0==(W|0)?c=31:(Q=W,F=da,c=29);break;case 31:c=F>>>0<e>>>0?33:32;break;case 32:HEAP32[F>>2]=0;D=Q;c=34;break;case 33:throw _abort(),"Reached an unreachable!";case 34:0==(E|0)?(m=t,n=r,c=56):c=35;break;case 35:var U=b+(p+28|0)|0,ea=16648+(HEAP32[U>>2]<<2)|0,c=
(B|0)==(HEAP32[ea>>2]|0)?36:38;break;case 36:HEAP32[ea>>2]=D;c=0==(D|0)?37:44;break;case 37:HEAP32[4087]&=1<<HEAP32[U>>2]^-1;m=t;n=r;c=56;break;case 38:c=E>>>0<HEAP32[4090]>>>0?42:39;break;case 39:var pa=E+16|0,c=(HEAP32[pa>>2]|0)==(B|0)?40:41;break;case 40:HEAP32[pa>>2]=D;c=43;break;case 41:HEAP32[(E+20|0)>>2]=D;c=43;break;case 42:throw _abort(),"Reached an unreachable!";case 43:0==(D|0)?(m=t,n=r,c=56):c=44;break;case 44:c=D>>>0<HEAP32[4090]>>>0?53:45;break;case 45:HEAP32[(D+24|0)>>2]=E;var ka=HEAP32[(b+
(p+16|0)|0)>>2],c=0==(ka|0)?49:46;break;case 46:c=ka>>>0<HEAP32[4090]>>>0?48:47;break;case 47:HEAP32[(D+16|0)>>2]=ka;HEAP32[(ka+24|0)>>2]=D;c=49;break;case 48:throw _abort(),"Reached an unreachable!";case 49:var sa=HEAP32[(b+(p+20|0)|0)>>2];0==(sa|0)?(m=t,n=r,c=56):c=50;break;case 50:c=sa>>>0<HEAP32[4090]>>>0?52:51;break;case 51:HEAP32[(D+20|0)>>2]=sa;HEAP32[(sa+24|0)>>2]=D;m=t;n=r;c=56;break;case 52:throw _abort(),"Reached an unreachable!";case 53:throw _abort(),"Reached an unreachable!";case 54:var la=
b+(h-4|0)|0;3==(HEAP32[la>>2]&3|0)?c=55:(m=t,n=r,c=56);break;case 55:HEAP32[4088]=r;HEAP32[la>>2]&=-2;HEAP32[(b+(p+4|0)|0)>>2]=r|1;HEAP32[l>>2]=r;c=140;break;case 56:var xa=m,c=xa>>>0<l>>>0?57:139;break;case 57:var fa=b+(h-4|0)|0,ga=HEAP32[fa>>2],c=0==(ga&1|0)?139:58;break;case 58:c=0==(ga&2|0)?59:112;break;case 59:c=(k|0)==(HEAP32[4092]|0)?60:62;break;case 60:var ha=HEAP32[4089]+n|0;HEAP32[4089]=ha;HEAP32[4092]=m;HEAP32[(m+4|0)>>2]=ha|1;c=(m|0)==(HEAP32[4091]|0)?61:140;break;case 61:HEAP32[4091]=
0;HEAP32[4088]=0;c=140;break;case 62:c=(k|0)==(HEAP32[4091]|0)?63:64;break;case 63:var ia=HEAP32[4088]+n|0;HEAP32[4088]=ia;HEAP32[4091]=m;HEAP32[(m+4|0)>>2]=ia|1;HEAP32[(xa+ia|0)>>2]=ia;c=140;break;case 64:var ma=(ga&-8)+n|0,na=ga>>>3,c=256>ga>>>0?65:77;break;case 65:var V=HEAP32[(b+h|0)>>2],qa=HEAP32[(b+(h|4)|0)>>2],cb=16384+(na<<1<<2)|0,c=(V|0)==(cb|0)?68:66;break;case 66:c=V>>>0<HEAP32[4090]>>>0?76:67;break;case 67:c=(HEAP32[(V+12|0)>>2]|0)==(k|0)?68:76;break;case 68:c=(qa|0)==(V|0)?69:70;break;
case 69:HEAP32[4086]&=1<<na^-1;c=110;break;case 70:c=(qa|0)==(cb|0)?71:72;break;case 71:var db=qa+8|0,c=74;break;case 72:c=qa>>>0<HEAP32[4090]>>>0?75:73;break;case 73:var Fa=qa+8|0;(HEAP32[Fa>>2]|0)==(k|0)?(db=Fa,c=74):c=75;break;case 74:HEAP32[(V+12|0)>>2]=qa;HEAP32[db>>2]=V;c=110;break;case 75:throw _abort(),"Reached an unreachable!";case 76:throw _abort(),"Reached an unreachable!";case 77:var ta=l,ya=HEAP32[(b+(h+16|0)|0)>>2],Ga=HEAP32[(b+(h|4)|0)>>2],c=(Ga|0)==(ta|0)?83:78;break;case 78:var Va=
HEAP32[(b+h|0)>>2],c=Va>>>0<HEAP32[4090]>>>0?82:79;break;case 79:var eb=Va+12|0,c=(HEAP32[eb>>2]|0)==(ta|0)?80:82;break;case 80:var $=Ga+8|0,c=(HEAP32[$>>2]|0)==(ta|0)?81:82;break;case 81:HEAP32[eb>>2]=Ga;HEAP32[$>>2]=Va;var X=Ga,c=90;break;case 82:throw _abort(),"Reached an unreachable!";case 83:var Wa=b+(h+12|0)|0,I=HEAP32[Wa>>2];if(0==(I|0))c=84;else var S=I,Ha=Wa,c=85;break;case 84:var Qa=b+(h+8|0)|0,fb=HEAP32[Qa>>2];0==(fb|0)?(X=0,c=90):(S=fb,Ha=Qa,c=85);break;case 85:var gb=S+20|0,hb=HEAP32[gb>>
2];0==(hb|0)?c=86:(S=hb,Ha=gb,c=85);break;case 86:var sb=S+16|0,tb=HEAP32[sb>>2];0==(tb|0)?c=87:(S=tb,Ha=sb,c=85);break;case 87:c=Ha>>>0<HEAP32[4090]>>>0?89:88;break;case 88:HEAP32[Ha>>2]=0;X=S;c=90;break;case 89:throw _abort(),"Reached an unreachable!";case 90:c=0==(ya|0)?110:91;break;case 91:var Ca=b+(h+20|0)|0,Xa=16648+(HEAP32[Ca>>2]<<2)|0,c=(ta|0)==(HEAP32[Xa>>2]|0)?92:94;break;case 92:HEAP32[Xa>>2]=X;c=0==(X|0)?93:100;break;case 93:HEAP32[4087]&=1<<HEAP32[Ca>>2]^-1;c=110;break;case 94:c=ya>>>
0<HEAP32[4090]>>>0?98:95;break;case 95:var Ra=ya+16|0,c=(HEAP32[Ra>>2]|0)==(ta|0)?96:97;break;case 96:HEAP32[Ra>>2]=X;c=99;break;case 97:HEAP32[(ya+20|0)>>2]=X;c=99;break;case 98:throw _abort(),"Reached an unreachable!";case 99:c=0==(X|0)?110:100;break;case 100:c=X>>>0<HEAP32[4090]>>>0?109:101;break;case 101:HEAP32[(X+24|0)>>2]=ya;var Ia=HEAP32[(b+(h+8|0)|0)>>2],c=0==(Ia|0)?105:102;break;case 102:c=Ia>>>0<HEAP32[4090]>>>0?104:103;break;case 103:HEAP32[(X+16|0)>>2]=Ia;HEAP32[(Ia+24|0)>>2]=X;c=105;
break;case 104:throw _abort(),"Reached an unreachable!";case 105:var aa=HEAP32[(b+(h+12|0)|0)>>2],c=0==(aa|0)?110:106;break;case 106:c=aa>>>0<HEAP32[4090]>>>0?108:107;break;case 107:HEAP32[(X+20|0)>>2]=aa;HEAP32[(aa+24|0)>>2]=X;c=110;break;case 108:throw _abort(),"Reached an unreachable!";case 109:throw _abort(),"Reached an unreachable!";case 110:HEAP32[(m+4|0)>>2]=ma|1;HEAP32[(xa+ma|0)>>2]=ma;if((m|0)==(HEAP32[4091]|0))c=111;else var oa=ma,c=113;break;case 111:HEAP32[4088]=ma;c=140;break;case 112:HEAP32[fa>>
2]=ga&-2;HEAP32[(m+4|0)>>2]=n|1;oa=HEAP32[(xa+n|0)>>2]=n;c=113;break;case 113:var Sa=oa>>>3,c=256>oa>>>0?114:119;break;case 114:var Ya=Sa<<1,ib=16384+(Ya<<2)|0,ba=HEAP32[4086],Za=1<<Sa,c=0==(ba&Za|0)?115:116;break;case 115:HEAP32[4086]=ba|Za;var $a=ib,Da=16384+((Ya+2|0)<<2)|0,c=118;break;case 116:var Ja=16384+((Ya+2|0)<<2)|0,Ta=HEAP32[Ja>>2];Ta>>>0<HEAP32[4090]>>>0?c=117:($a=Ta,Da=Ja,c=118);break;case 117:throw _abort(),"Reached an unreachable!";case 118:HEAP32[Da>>2]=m;HEAP32[($a+12|0)>>2]=m;HEAP32[(m+
8|0)>>2]=$a;HEAP32[(m+12|0)>>2]=ib;c=140;break;case 119:var Ka=m,ua=oa>>>8;if(0==(ua|0))var za=0,c=122;else c=120;break;case 120:16777215<oa>>>0?(za=31,c=122):c=121;break;case 121:var jb=(ua+1048320|0)>>>16&8,kb=ua<<jb,lb=(kb+520192|0)>>>16&4,mb=kb<<lb,nb=(mb+245760|0)>>>16&2,La=(14-(lb|jb|nb)|0)+(mb<<nb>>>15)|0,za=oa>>>((La+7|0)>>>0)&1|La<<1,c=122;break;case 122:var Ma=16648+(za<<2)|0;HEAP32[(m+28|0)>>2]=za;HEAP32[(m+20|0)>>2]=0;HEAP32[(m+16|0)>>2]=0;var ob=HEAP32[4087],ub=1<<za,c=0==(ob&ub|0)?123:
124;break;case 123:HEAP32[4087]=ob|ub;HEAP32[Ma>>2]=Ka;HEAP32[(m+24|0)>>2]=Ma;HEAP32[(m+12|0)>>2]=m;HEAP32[(m+8|0)>>2]=m;c=136;break;case 124:var vb=HEAP32[Ma>>2];if(31==(za|0))var Na=0,c=126;else c=125;break;case 125:Na=25-(za>>>1)|0;c=126;break;case 126:var va=oa<<Na,ra=vb,c=127;break;case 127:c=(HEAP32[(ra+4|0)>>2]&-8|0)==(oa|0)?132:128;break;case 128:var ab=ra+16+(va>>>31<<2)|0,wb=HEAP32[ab>>2],xb=va<<1;0==(wb|0)?c=129:(va=xb,ra=wb,c=127);break;case 129:c=ab>>>0<HEAP32[4090]>>>0?131:130;break;
case 130:HEAP32[ab>>2]=Ka;HEAP32[(m+24|0)>>2]=ra;HEAP32[(m+12|0)>>2]=m;HEAP32[(m+8|0)>>2]=m;c=136;break;case 131:throw _abort(),"Reached an unreachable!";case 132:var Ua=ra+8|0,bb=HEAP32[Ua>>2],Qb=HEAP32[4090],c=ra>>>0<Qb>>>0?135:133;break;case 133:c=bb>>>0<Qb>>>0?135:134;break;case 134:HEAP32[(bb+12|0)>>2]=Ka;HEAP32[Ua>>2]=Ka;HEAP32[(m+8|0)>>2]=bb;HEAP32[(m+12|0)>>2]=ra;HEAP32[(m+24|0)>>2]=0;c=136;break;case 135:throw _abort(),"Reached an unreachable!";case 136:var Rb=HEAP32[4094]-1|0;HEAP32[4094]=
Rb;if(0==(Rb|0))var Sb=16800,c=137;else c=140;break;case 137:var gc=HEAP32[Sb>>2],hc=gc+8|0;0==(gc|0)?c=138:(Sb=hc,c=137);break;case 138:HEAP32[4094]=-1;c=140;break;case 139:throw _abort(),"Reached an unreachable!";case 140:return;default:assert(0,"bad label: "+c)}}Module._free=_free;
function _calloc(b,c){for(var a=0,a=1;;)switch(a){case 1:if(0==(b|0))var d=0,a=4;else a=2;break;case 2:var e=Math_imul(c,b)|0;65535<(c|b)>>>0?a=3:(d=e,a=4);break;case 3:d=((e>>>0)/(b>>>0)&-1|0)==(c|0)?e:-1;a=4;break;case 4:var f=_malloc(d),a=0==(f|0)?7:5;break;case 5:a=0==(HEAP32[(f-4|0)>>2]&3|0)?7:6;break;case 6:_memset(f,0,d);a=7;break;case 7:return f;default:assert(0,"bad label: "+a)}}Module._calloc=_calloc;
function _realloc(b,c){for(var a=0,a=1;;)switch(a){case 1:a=0==(b|0)?2:3;break;case 2:var d=_malloc(c),a=11;break;case 3:a=4294967231<c>>>0?4:5;break;case 4:a=___errno_location();HEAP32[a>>2]=12;d=0;a=11;break;case 5:if(11>c>>>0)var e=16,a=7;else a=6;break;case 6:e=(c+11|0)&-8;a=7;break;case 7:var f=_try_realloc_chunk(b-8|0,e),a=0==(f|0)?9:8;break;case 8:d=f+8|0;a=11;break;case 9:var g=_malloc(c);0==(g|0)?(d=0,a=11):a=10;break;case 10:a=HEAP32[(b-4|0)>>2];a=(a&-8)-(0==(a&3|0)?8:4)|0;a=a>>>0<c>>>0?
a:c;assert(0===a%1);_memcpy(g,b,a)|0;_free(b);d=g;a=11;break;case 11:return d;default:assert(0,"bad label: "+a)}}Module._realloc=_realloc;
function _try_realloc_chunk(b,c){for(var a=0,a=1;;)switch(a){case 1:var d=b+4|0,e=HEAP32[d>>2],f=e&-8,g=b,h=g+f|0,l=h,k=HEAP32[4090],a=g>>>0<k>>>0?72:2;break;case 2:var m=e&3,a=1!=(m|0)&g>>>0<h>>>0?3:72;break;case 3:var n=g+(f|4)|0,q=HEAP32[n>>2],a=0==(q&1|0)?72:4;break;case 4:a=0==(m|0)?5:9;break;case 5:if(256>c>>>0)var p=0,a=73;else a=6;break;case 6:a=f>>>0<(c+4|0)>>>0?8:7;break;case 7:(f-c|0)>>>0>HEAP32[4074]<<1>>>0?a=8:(p=b,a=73);break;case 8:p=0;a=73;break;case 9:a=f>>>0<c>>>0?12:10;break;case 10:var s=
f-c|0;15<s>>>0?a=11:(p=b,a=73);break;case 11:p=g+c|0;HEAP32[d>>2]=e&1|c|2;HEAP32[(g+(c+4|0)|0)>>2]=s|3;HEAP32[n>>2]|=1;_dispose_chunk(p,s);p=b;a=73;break;case 12:a=(l|0)==(HEAP32[4092]|0)?13:15;break;case 13:var t=HEAP32[4089]+f|0;t>>>0>c>>>0?a=14:(p=0,a=73);break;case 14:p=t-c|0;a=g+c|0;HEAP32[d>>2]=e&1|c|2;HEAP32[(g+(c+4|0)|0)>>2]=p|1;HEAP32[4092]=a;HEAP32[4089]=p;p=b;a=73;break;case 15:a=(l|0)==(HEAP32[4091]|0)?16:21;break;case 16:var r=HEAP32[4088]+f|0;r>>>0<c>>>0?(p=0,a=73):a=17;break;case 17:var u=
r-c|0,a=15<u>>>0?18:19;break;case 18:var w=g+c|0,v=g+r|0;HEAP32[d>>2]=e&1|c|2;HEAP32[(g+(c+4|0)|0)>>2]=u|1;HEAP32[v>>2]=u;v=g+(r+4|0)|0;HEAP32[v>>2]&=-2;v=u;a=20;break;case 19:HEAP32[d>>2]=e&1|r|2;w=g+(r+4|0)|0;HEAP32[w>>2]|=1;v=w=0;a=20;break;case 20:HEAP32[4088]=v;HEAP32[4091]=w;p=b;a=73;break;case 21:0==(q&2|0)?a=22:(p=0,a=73);break;case 22:var x=(q&-8)+f|0;x>>>0<c>>>0?(p=0,a=73):a=23;break;case 23:var y=x-c|0,z=q>>>3,a=256>q>>>0?24:36;break;case 24:var B=HEAP32[(g+(f+8|0)|0)>>2],E=HEAP32[(g+(f+
12|0)|0)>>2],N=16384+(z<<1<<2)|0,a=(B|0)==(N|0)?27:25;break;case 25:a=B>>>0<k>>>0?35:26;break;case 26:a=(HEAP32[(B+12|0)>>2]|0)==(l|0)?27:35;break;case 27:a=(E|0)==(B|0)?28:29;break;case 28:HEAP32[4086]&=1<<z^-1;a=69;break;case 29:a=(E|0)==(N|0)?30:31;break;case 30:var C=E+8|0,a=33;break;case 31:a=E>>>0<k>>>0?34:32;break;case 32:a=E+8|0;(HEAP32[a>>2]|0)==(l|0)?(C=a,a=33):a=34;break;case 33:HEAP32[(B+12|0)>>2]=E;HEAP32[C>>2]=B;a=69;break;case 34:throw _abort(),"Reached an unreachable!";case 35:throw _abort(),
"Reached an unreachable!";case 36:var K=h,H=HEAP32[(g+(f+24|0)|0)>>2],D=HEAP32[(g+(f+12|0)|0)>>2],a=(D|0)==(K|0)?42:37;break;case 37:var M=HEAP32[(g+(f+8|0)|0)>>2],a=M>>>0<k>>>0?41:38;break;case 38:var P=M+12|0,a=(HEAP32[P>>2]|0)==(K|0)?39:41;break;case 39:var Q=D+8|0,a=(HEAP32[Q>>2]|0)==(K|0)?40:41;break;case 40:HEAP32[P>>2]=D;HEAP32[Q>>2]=M;var F=D,a=49;break;case 41:throw _abort(),"Reached an unreachable!";case 42:var a=g+(f+20|0)|0,J=HEAP32[a>>2];if(0==(J|0))a=43;else var T=J,R=a,a=44;break;case 43:a=
g+(f+16|0)|0;J=HEAP32[a>>2];0==(J|0)?(F=0,a=49):(T=J,R=a,a=44);break;case 44:a=T+20|0;J=HEAP32[a>>2];0==(J|0)?a=45:(T=J,R=a,a=44);break;case 45:a=T+16|0;J=HEAP32[a>>2];0==(J|0)?a=46:(T=J,R=a,a=44);break;case 46:a=R>>>0<k>>>0?48:47;break;case 47:HEAP32[R>>2]=0;F=T;a=49;break;case 48:throw _abort(),"Reached an unreachable!";case 49:a=0==(H|0)?69:50;break;case 50:var ja=g+(f+28|0)|0,da=16648+(HEAP32[ja>>2]<<2)|0,a=(K|0)==(HEAP32[da>>2]|0)?51:53;break;case 51:HEAP32[da>>2]=F;a=0==(F|0)?52:59;break;case 52:HEAP32[4087]&=
1<<HEAP32[ja>>2]^-1;a=69;break;case 53:a=H>>>0<HEAP32[4090]>>>0?57:54;break;case 54:var W=H+16|0,a=(HEAP32[W>>2]|0)==(K|0)?55:56;break;case 55:HEAP32[W>>2]=F;a=58;break;case 56:HEAP32[(H+20|0)>>2]=F;a=58;break;case 57:throw _abort(),"Reached an unreachable!";case 58:a=0==(F|0)?69:59;break;case 59:a=F>>>0<HEAP32[4090]>>>0?68:60;break;case 60:HEAP32[(F+24|0)>>2]=H;var U=HEAP32[(g+(f+16|0)|0)>>2],a=0==(U|0)?64:61;break;case 61:a=U>>>0<HEAP32[4090]>>>0?63:62;break;case 62:HEAP32[(F+16|0)>>2]=U;HEAP32[(U+
24|0)>>2]=F;a=64;break;case 63:throw _abort(),"Reached an unreachable!";case 64:var ea=HEAP32[(g+(f+20|0)|0)>>2],a=0==(ea|0)?69:65;break;case 65:a=ea>>>0<HEAP32[4090]>>>0?67:66;break;case 66:HEAP32[(F+20|0)>>2]=ea;HEAP32[(ea+24|0)>>2]=F;a=69;break;case 67:throw _abort(),"Reached an unreachable!";case 68:throw _abort(),"Reached an unreachable!";case 69:a=16>y>>>0?70:71;break;case 70:HEAP32[d>>2]=x|HEAP32[d>>2]&1|2;p=g+(x|4)|0;HEAP32[p>>2]|=1;p=b;a=73;break;case 71:p=g+c|0;HEAP32[d>>2]=HEAP32[d>>2]&
1|c|2;HEAP32[(g+(c+4|0)|0)>>2]=y|3;a=g+(x|4)|0;HEAP32[a>>2]|=1;_dispose_chunk(p,y);p=b;a=73;break;case 72:throw _abort(),"Reached an unreachable!";case 73:return p;default:assert(0,"bad label: "+a)}}
function _dispose_chunk(b,c){for(var a=0,a=1;;)switch(a){case 1:var d=b,e=d+c|0,f=e,g=HEAP32[(b+4|0)>>2];if(0==(g&1|0))a=2;else var h=b,l=c,a=54;break;case 2:var k=HEAP32[(b|0)>>2],a=0==(g&3|0)?134:3;break;case 3:var m=d+(-k|0)|0,n=m,q=k+c|0,p=HEAP32[4090],a=m>>>0<p>>>0?53:4;break;case 4:a=(n|0)==(HEAP32[4091]|0)?51:5;break;case 5:var s=k>>>3,a=256>k>>>0?6:18;break;case 6:var t=HEAP32[(d+(8-k|0)|0)>>2],r=HEAP32[(d+(12-k|0)|0)>>2],u=16384+(s<<1<<2)|0,a=(t|0)==(u|0)?9:7;break;case 7:a=t>>>0<p>>>0?17:
8;break;case 8:a=(HEAP32[(t+12|0)>>2]|0)==(n|0)?9:17;break;case 9:a=(r|0)==(t|0)?10:11;break;case 10:HEAP32[4086]&=1<<s^-1;h=n;l=q;a=54;break;case 11:a=(r|0)==(u|0)?12:13;break;case 12:var w=r+8|0,a=15;break;case 13:a=r>>>0<p>>>0?16:14;break;case 14:var v=r+8|0;(HEAP32[v>>2]|0)==(n|0)?(w=v,a=15):a=16;break;case 15:HEAP32[(t+12|0)>>2]=r;HEAP32[w>>2]=t;h=n;l=q;a=54;break;case 16:throw _abort(),"Reached an unreachable!";case 17:throw _abort(),"Reached an unreachable!";case 18:var x=m,y=HEAP32[(d+(24-
k|0)|0)>>2],z=HEAP32[(d+(12-k|0)|0)>>2],a=(z|0)==(x|0)?24:19;break;case 19:var B=HEAP32[(d+(8-k|0)|0)>>2],a=B>>>0<p>>>0?23:20;break;case 20:var E=B+12|0,a=(HEAP32[E>>2]|0)==(x|0)?21:23;break;case 21:var N=z+8|0,a=(HEAP32[N>>2]|0)==(x|0)?22:23;break;case 22:HEAP32[E>>2]=z;HEAP32[N>>2]=B;var C=z,a=31;break;case 23:throw _abort(),"Reached an unreachable!";case 24:var K=16-k|0,H=d+(K+4|0)|0,D=HEAP32[H>>2];if(0==(D|0))a=25;else var M=D,P=H,a=26;break;case 25:var Q=d+K|0,F=HEAP32[Q>>2];0==(F|0)?(C=0,a=
31):(M=F,P=Q,a=26);break;case 26:var J=M+20|0,T=HEAP32[J>>2];0==(T|0)?a=27:(M=T,P=J,a=26);break;case 27:var R=M+16|0,ja=HEAP32[R>>2];0==(ja|0)?a=28:(M=ja,P=R,a=26);break;case 28:a=P>>>0<p>>>0?30:29;break;case 29:HEAP32[P>>2]=0;C=M;a=31;break;case 30:throw _abort(),"Reached an unreachable!";case 31:0==(y|0)?(h=n,l=q,a=54):a=32;break;case 32:var da=d+(28-k|0)|0,W=16648+(HEAP32[da>>2]<<2)|0,a=(x|0)==(HEAP32[W>>2]|0)?33:35;break;case 33:HEAP32[W>>2]=C;a=0==(C|0)?34:41;break;case 34:HEAP32[4087]&=1<<HEAP32[da>>
2]^-1;h=n;l=q;a=54;break;case 35:a=y>>>0<HEAP32[4090]>>>0?39:36;break;case 36:var U=y+16|0,a=(HEAP32[U>>2]|0)==(x|0)?37:38;break;case 37:HEAP32[U>>2]=C;a=40;break;case 38:HEAP32[(y+20|0)>>2]=C;a=40;break;case 39:throw _abort(),"Reached an unreachable!";case 40:0==(C|0)?(h=n,l=q,a=54):a=41;break;case 41:a=C>>>0<HEAP32[4090]>>>0?50:42;break;case 42:HEAP32[(C+24|0)>>2]=y;var ea=16-k|0,pa=HEAP32[(d+ea|0)>>2],a=0==(pa|0)?46:43;break;case 43:a=pa>>>0<HEAP32[4090]>>>0?45:44;break;case 44:HEAP32[(C+16|0)>>
2]=pa;HEAP32[(pa+24|0)>>2]=C;a=46;break;case 45:throw _abort(),"Reached an unreachable!";case 46:var ka=HEAP32[(d+(ea+4|0)|0)>>2];0==(ka|0)?(h=n,l=q,a=54):a=47;break;case 47:a=ka>>>0<HEAP32[4090]>>>0?49:48;break;case 48:HEAP32[(C+20|0)>>2]=ka;HEAP32[(ka+24|0)>>2]=C;h=n;l=q;a=54;break;case 49:throw _abort(),"Reached an unreachable!";case 50:throw _abort(),"Reached an unreachable!";case 51:var sa=d+(c+4|0)|0;3==(HEAP32[sa>>2]&3|0)?a=52:(h=n,l=q,a=54);break;case 52:HEAP32[4088]=q;HEAP32[sa>>2]&=-2;HEAP32[(d+
(4-k|0)|0)>>2]=q|1;HEAP32[e>>2]=q;a=134;break;case 53:throw _abort(),"Reached an unreachable!";case 54:var la=HEAP32[4090],a=e>>>0<la>>>0?133:55;break;case 55:var xa=d+(c+4|0)|0,fa=HEAP32[xa>>2],a=0==(fa&2|0)?56:109;break;case 56:a=(f|0)==(HEAP32[4092]|0)?57:59;break;case 57:var ga=HEAP32[4089]+l|0;HEAP32[4089]=ga;HEAP32[4092]=h;HEAP32[(h+4|0)>>2]=ga|1;a=(h|0)==(HEAP32[4091]|0)?58:134;break;case 58:HEAP32[4091]=0;HEAP32[4088]=0;a=134;break;case 59:a=(f|0)==(HEAP32[4091]|0)?60:61;break;case 60:var ha=
HEAP32[4088]+l|0;HEAP32[4088]=ha;HEAP32[4091]=h;HEAP32[(h+4|0)>>2]=ha|1;HEAP32[(h+ha|0)>>2]=ha;a=134;break;case 61:var ia=(fa&-8)+l|0,ma=fa>>>3,a=256>fa>>>0?62:74;break;case 62:var na=HEAP32[(d+(c+8|0)|0)>>2],V=HEAP32[(d+(c+12|0)|0)>>2],qa=16384+(ma<<1<<2)|0,a=(na|0)==(qa|0)?65:63;break;case 63:a=na>>>0<la>>>0?73:64;break;case 64:a=(HEAP32[(na+12|0)>>2]|0)==(f|0)?65:73;break;case 65:a=(V|0)==(na|0)?66:67;break;case 66:HEAP32[4086]&=1<<ma^-1;a=107;break;case 67:a=(V|0)==(qa|0)?68:69;break;case 68:var cb=
V+8|0,a=71;break;case 69:a=V>>>0<la>>>0?72:70;break;case 70:var db=V+8|0;(HEAP32[db>>2]|0)==(f|0)?(cb=db,a=71):a=72;break;case 71:HEAP32[(na+12|0)>>2]=V;HEAP32[cb>>2]=na;a=107;break;case 72:throw _abort(),"Reached an unreachable!";case 73:throw _abort(),"Reached an unreachable!";case 74:var Fa=e,ta=HEAP32[(d+(c+24|0)|0)>>2],ya=HEAP32[(d+(c+12|0)|0)>>2],a=(ya|0)==(Fa|0)?80:75;break;case 75:var Ga=HEAP32[(d+(c+8|0)|0)>>2],a=Ga>>>0<la>>>0?79:76;break;case 76:var Va=Ga+12|0,a=(HEAP32[Va>>2]|0)==(Fa|0)?
77:79;break;case 77:var eb=ya+8|0,a=(HEAP32[eb>>2]|0)==(Fa|0)?78:79;break;case 78:HEAP32[Va>>2]=ya;HEAP32[eb>>2]=Ga;var $=ya,a=87;break;case 79:throw _abort(),"Reached an unreachable!";case 80:var X=d+(c+20|0)|0,Wa=HEAP32[X>>2];if(0==(Wa|0))a=81;else var I=Wa,S=X,a=82;break;case 81:var Ha=d+(c+16|0)|0,Qa=HEAP32[Ha>>2];0==(Qa|0)?($=0,a=87):(I=Qa,S=Ha,a=82);break;case 82:var fb=I+20|0,gb=HEAP32[fb>>2];0==(gb|0)?a=83:(I=gb,S=fb,a=82);break;case 83:var hb=I+16|0,sb=HEAP32[hb>>2];0==(sb|0)?a=84:(I=sb,
S=hb,a=82);break;case 84:a=S>>>0<la>>>0?86:85;break;case 85:HEAP32[S>>2]=0;$=I;a=87;break;case 86:throw _abort(),"Reached an unreachable!";case 87:a=0==(ta|0)?107:88;break;case 88:var tb=d+(c+28|0)|0,Ca=16648+(HEAP32[tb>>2]<<2)|0,a=(Fa|0)==(HEAP32[Ca>>2]|0)?89:91;break;case 89:HEAP32[Ca>>2]=$;a=0==($|0)?90:97;break;case 90:HEAP32[4087]&=1<<HEAP32[tb>>2]^-1;a=107;break;case 91:a=ta>>>0<HEAP32[4090]>>>0?95:92;break;case 92:var Xa=ta+16|0,a=(HEAP32[Xa>>2]|0)==(Fa|0)?93:94;break;case 93:HEAP32[Xa>>2]=
$;a=96;break;case 94:HEAP32[(ta+20|0)>>2]=$;a=96;break;case 95:throw _abort(),"Reached an unreachable!";case 96:a=0==($|0)?107:97;break;case 97:a=$>>>0<HEAP32[4090]>>>0?106:98;break;case 98:HEAP32[($+24|0)>>2]=ta;var Ra=HEAP32[(d+(c+16|0)|0)>>2],a=0==(Ra|0)?102:99;break;case 99:a=Ra>>>0<HEAP32[4090]>>>0?101:100;break;case 100:HEAP32[($+16|0)>>2]=Ra;HEAP32[(Ra+24|0)>>2]=$;a=102;break;case 101:throw _abort(),"Reached an unreachable!";case 102:var Ia=HEAP32[(d+(c+20|0)|0)>>2],a=0==(Ia|0)?107:103;break;
case 103:a=Ia>>>0<HEAP32[4090]>>>0?105:104;break;case 104:HEAP32[($+20|0)>>2]=Ia;HEAP32[(Ia+24|0)>>2]=$;a=107;break;case 105:throw _abort(),"Reached an unreachable!";case 106:throw _abort(),"Reached an unreachable!";case 107:HEAP32[(h+4|0)>>2]=ia|1;HEAP32[(h+ia|0)>>2]=ia;if((h|0)==(HEAP32[4091]|0))a=108;else var aa=ia,a=110;break;case 108:HEAP32[4088]=ia;a=134;break;case 109:HEAP32[xa>>2]=fa&-2;HEAP32[(h+4|0)>>2]=l|1;aa=HEAP32[(h+l|0)>>2]=l;a=110;break;case 110:var oa=aa>>>3,a=256>aa>>>0?111:116;
break;case 111:var Sa=oa<<1,Ya=16384+(Sa<<2)|0,ib=HEAP32[4086],ba=1<<oa,a=0==(ib&ba|0)?112:113;break;case 112:HEAP32[4086]=ib|ba;var Za=Ya,$a=16384+((Sa+2|0)<<2)|0,a=115;break;case 113:var Da=16384+((Sa+2|0)<<2)|0,Ja=HEAP32[Da>>2];Ja>>>0<HEAP32[4090]>>>0?a=114:(Za=Ja,$a=Da,a=115);break;case 114:throw _abort(),"Reached an unreachable!";case 115:HEAP32[$a>>2]=h;HEAP32[(Za+12|0)>>2]=h;HEAP32[(h+8|0)>>2]=Za;HEAP32[(h+12|0)>>2]=Ya;a=134;break;case 116:var Ta=h,Ka=aa>>>8;if(0==(Ka|0))var ua=0,a=119;else a=
117;break;case 117:16777215<aa>>>0?(ua=31,a=119):a=118;break;case 118:var za=(Ka+1048320|0)>>>16&8,jb=Ka<<za,kb=(jb+520192|0)>>>16&4,lb=jb<<kb,mb=(lb+245760|0)>>>16&2,nb=(14-(kb|za|mb)|0)+(lb<<mb>>>15)|0,ua=aa>>>((nb+7|0)>>>0)&1|nb<<1,a=119;break;case 119:var La=16648+(ua<<2)|0;HEAP32[(h+28|0)>>2]=ua;HEAP32[(h+20|0)>>2]=0;HEAP32[(h+16|0)>>2]=0;var Ma=HEAP32[4087],ob=1<<ua,a=0==(Ma&ob|0)?120:121;break;case 120:HEAP32[4087]=Ma|ob;HEAP32[La>>2]=Ta;HEAP32[(h+24|0)>>2]=La;HEAP32[(h+12|0)>>2]=h;HEAP32[(h+
8|0)>>2]=h;a=134;break;case 121:var ub=HEAP32[La>>2];if(31==(ua|0))var vb=0,a=123;else a=122;break;case 122:vb=25-(ua>>>1)|0;a=123;break;case 123:var Na=aa<<vb,va=ub,a=124;break;case 124:a=(HEAP32[(va+4|0)>>2]&-8|0)==(aa|0)?129:125;break;case 125:var ra=va+16+(Na>>>31<<2)|0,ab=HEAP32[ra>>2],wb=Na<<1;0==(ab|0)?a=126:(Na=wb,va=ab,a=124);break;case 126:a=ra>>>0<HEAP32[4090]>>>0?128:127;break;case 127:HEAP32[ra>>2]=Ta;HEAP32[(h+24|0)>>2]=va;HEAP32[(h+12|0)>>2]=h;HEAP32[(h+8|0)>>2]=h;a=134;break;case 128:throw _abort(),
"Reached an unreachable!";case 129:var xb=va+8|0,Ua=HEAP32[xb>>2],bb=HEAP32[4090],a=va>>>0<bb>>>0?132:130;break;case 130:a=Ua>>>0<bb>>>0?132:131;break;case 131:HEAP32[(Ua+12|0)>>2]=Ta;HEAP32[xb>>2]=Ta;HEAP32[(h+8|0)>>2]=Ua;HEAP32[(h+12|0)>>2]=va;HEAP32[(h+24|0)>>2]=0;a=134;break;case 132:throw _abort(),"Reached an unreachable!";case 133:throw _abort(),"Reached an unreachable!";case 134:return;default:assert(0,"bad label: "+a)}}
function _strtod(b,c){for(var a=0,a=1;;)switch(a){case 1:var d=b,a=2;break;case 2:var a=0==(_isspace(HEAP8[d]<<24>>24)|0),e=d+1|0;a?a=3:(d=e,a=2);break;case 3:a=HEAP8[d];if(45==a<<24>>24)a=4;else if(43==a<<24>>24)a=5;else var f=d,g=0,a=6;break;case 4:f=e;g=1;a=6;break;case 5:f=e;g=0;a=6;break;case 6:var h=-1,l=0,k=f,a=7;break;case 7:var m=HEAP8[k];if(10>((m<<24>>24)-48|0)>>>0)var n=h,a=9;else a=8;break;case 8:46!=m<<24>>24|-1<(h|0)?a=10:(n=l,a=9);break;case 9:k=k+1|0;l=l+1|0;h=n;a=7;break;case 10:var q=
k+(-l|0)|0,p=0>(h|0),s=((p^1)<<31>>31)+l|0,a=18<(s|0),t=-s|0,p=(a?-18:t)+(p?l:h)|0,s=a?18:s;if(0==(s|0))var r=b,u=0,a=37;else a=11;break;case 11:if(9<(s|0))var w=q,v=s,x=0,a=15;else a=13;break;case 12:var y=1E9*(Q|0),z=9,B=P,a=14;break;case 13:if(0<(s|0))y=0,z=s,B=q,a=14;else var E=0,N=0,a=22;break;case 14:var C=B,K=z,H=0,a=18;break;case 15:var a=HEAP8[w],D=w+1|0;if(46==a<<24>>24)a=16;else var M=a,P=D,a=17;break;case 16:P=w+2|0;M=HEAP8[D];a=17;break;case 17:var Q=((10*x&-1)-48|0)+(M<<24>>24)|0,a=
v-1|0;9<(a|0)?(w=P,v=a,x=Q,a=15):a=12;break;case 18:var a=HEAP8[C],F=C+1|0;if(46==a<<24>>24)a=19;else var J=a,T=F,a=20;break;case 19:T=C+2|0;J=HEAP8[F];a=20;break;case 20:var R=((10*H&-1)-48|0)+(J<<24>>24)|0,a=K-1|0;0<(a|0)?(C=T,K=a,H=R,a=18):a=21;break;case 21:E=R|0;N=y;a=22;break;case 22:var ja=N+E;if(69==m<<24>>24|101==m<<24>>24)a=23;else var da=0,W=k,U=0,a=28;break;case 23:a=k+1|0;t=HEAP8[a];if(45==t<<24>>24)a=24;else if(43==t<<24>>24)a=25;else var ea=a,pa=0,a=26;break;case 24:ea=k+2|0;pa=1;a=
26;break;case 25:ea=k+2|0;pa=0;a=26;break;case 26:a=HEAP8[ea]<<24>>24;if(10>(a-48|0)>>>0)var ka=ea,sa=0,la=a,a=27;else da=0,W=ea,U=pa,a=28;break;case 27:var a=((10*sa&-1)-48|0)+la|0,t=ka+1|0,xa=HEAP8[t]<<24>>24;10>(xa-48|0)>>>0?(ka=t,sa=a,la=xa,a=27):(da=a,W=t,U=pa,a=28);break;case 28:var fa=-da|0,fa=p+(0==(U|0)?da:fa)|0,ga=-fa|0,ga=0>(fa|0)?ga:fa,a=511<(ga|0)?29:30;break;case 29:var ha=___errno_location();HEAP32[ha>>2]=34;var ha=1,ia=16,ma=511,a=31;break;case 30:if(0==(ga|0))var na=1,a=34;else ha=
1,ia=16,ma=ga,a=31;break;case 31:if(0==(ma&1|0))var V=ha,a=33;else a=32;break;case 32:V=ha*HEAPF64[ia>>3];a=33;break;case 33:a=ma>>1;t=ia+8|0;0==(a|0)?(na=V,a=34):(ha=V,ia=t,ma=a,a=31);break;case 34:a=-1<(fa|0)?36:35;break;case 35:u=ja/na;r=W;a=37;break;case 36:u=ja*na;r=W;a=37;break;case 37:a=0==(c|0)?39:38;break;case 38:HEAP32[c>>2]=r;a=39;break;case 39:if(0==(g|0))var qa=u,a=41;else a=40;break;case 40:qa=-0-u;a=41;break;case 41:return qa;default:assert(0,"bad label: "+a)}}
function _atof(b){return _strtod(b,0)}var i64Math=null;if(memoryInitializer){var applyData=function(b){HEAPU8.set(b,STATIC_BASE)};ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL?applyData(Module.readBinary(memoryInitializer)):(addRunDependency("memory initializer"),Browser.asyncLoad(memoryInitializer,function(b){applyData(b);removeRunDependency("memory initializer")},function(b){throw"could not load memory initializer "+memoryInitializer;}))}
function ExitStatus(b){this.name="ExitStatus";this.message="Program terminated with exit("+b+")";this.status=b}ExitStatus.prototype=Error();ExitStatus.prototype.constructor=ExitStatus;var initialStackTop,preloadStartTime=null,calledMain=!1,calledRun=!1,dependenciesFulfilled=function runCaller(){!calledRun&&shouldRunNow&&run();calledRun||(dependenciesFulfilled=runCaller)};
Module.callMain=Module.callMain=function(b){function c(){for(var a=0;3>a;a++)d.push(0)}assert(0==runDependencies,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");assert(0==__ATPRERUN__.length,"cannot call main when preRun functions remain to be called");b=b||[];ENVIRONMENT_IS_WEB&&null!==preloadStartTime&&Module.printErr("preload time: "+(Date.now()-preloadStartTime)+" ms");ensureInitRuntime();var a=b.length+1,d=[allocate(intArrayFromString("/bin/this.program"),"i8",ALLOC_NORMAL)];
c();for(var e=0;e<a-1;e+=1)d.push(allocate(intArrayFromString(b[e]),"i8",ALLOC_NORMAL)),c();d.push(0);d=allocate(d,"i32",ALLOC_NORMAL);initialStackTop=STACKTOP;try{var f=Module._main(a,d,0);Module.noExitRuntime||exit(f)}catch(g){if(!(g instanceof ExitStatus))if("SimulateInfiniteLoop"==g)Module.noExitRuntime=!0;else throw g;}finally{calledMain=!0}};
function run(b){function c(){ensureInitRuntime();preMain();calledRun=!0;Module._main&&shouldRunNow&&Module.callMain(b);postRun()}b=b||Module.arguments;null===preloadStartTime&&(preloadStartTime=Date.now());0<runDependencies?Module.printErr("run() called, but dependencies remain, so not running"):(preRun(),0<runDependencies||(Module.setStatus?(Module.setStatus("Running..."),setTimeout(function(){setTimeout(function(){Module.setStatus("")},1);ABORT||c()},1)):c()))}Module.run=Module.run=run;
function exit(b){ABORT=!0;EXITSTATUS=b;STACKTOP=initialStackTop;exitRuntime();throw new ExitStatus(b);}Module.exit=Module.exit=exit;function abort(b){b&&(Module.print(b),Module.printErr(b));ABORT=!0;EXITSTATUS=1;throw"abort() at "+Error().stack;}Module.abort=Module.abort=abort;
(function(){Module.FS_createDataFile("/","foo.c",[35,105,110,99,108,117,100,101,32,60,115,116,100,105,111,46,104,62,10,35,105,110,99,108,117,100,101,32,60,117,110,105,115,116,100,46,104,62,10,35,105,110,99,108,117,100,101,32,60,65,114,100,117,105,110,111,46,104,62,10,10,35,100,101,102,105,110,101,32,79,85,84,80,85,84,32,49,10,35,100,101,102,105,110,101,32,73,78,80,85,84,32,48,10,35,100,101,102,105,110,101,32,72,73,71,72,32,49,10,35,100,101,102,105,110,101,32,76,79,87,32,48,10,10,118,111,105,100,32,
115,101,116,117,112,40,118,111,105,100,41,59,10,118,111,105,100,32,108,111,111,112,40,118,111,105,100,41,59,10,10,118,111,105,100,32,112,105,110,77,111,100,101,40,105,110,116,32,112,105,110,44,32,105,110,116,32,109,111,100,101,41,32,123,125,10,10,105,110,116,32,109,97,105,110,40,105,110,116,32,97,114,103,99,44,32,99,104,97,114,42,42,32,97,114,103,118,41,32,123,10,32,32,115,101,116,117,112,40,41,59,10,32,32,119,104,105,108,101,32,40,49,41,32,123,10,32,32,32,32,108,111,111,112,40,41,59,10,32,32,125,
10,32,32,114,101,116,117,114,110,32,48,59,10,125,10,10,10,47,47,32,45,45,45,45,32,69,78,68,32,80,82,69,76,85,68,69,32,45,45,45,45,10,10,118,111,105,100,32,115,101,116,117,112,40,41,32,123,10,32,32,102,111,114,32,40,105,110,116,32,105,32,61,32,50,59,32,105,32,60,61,32,49,53,59,32,105,43,43,41,32,123,10,32,32,32,32,112,105,110,77,111,100,101,40,105,44,32,79,85,84,80,85,84,41,59,10,32,32,125,10,125,10,10,105,110,116,32,105,32,61,32,50,59,10,10,118,111,105,100,32,108,111,111,112,40,41,32,123,10,32,32,
100,105,103,105,116,97,108,87,114,105,116,101,40,105,44,32,72,73,71,72,41,59,10,32,32,100,101,108,97,121,40,50,53,48,41,59,10,32,32,100,105,103,105,116,97,108,87,114,105,116,101,40,105,44,32,76,79,87,41,59,10,32,32,105,43,43,59,10,32,32,105,102,32,40,105,32,62,32,49,53,41,32,123,10,32,32,32,32,105,32,61,32,50,59,10,32,32,125,10,125,10],!0,!0);Module.FS_createDataFile("/","fptr.c",[35,105,110,99,108,117,100,101,32,60,115,116,100,105,111,46,104,62,10,10,118,111,105,100,32,112,114,105,110,116,70,117,
110,99,116,105,111,110,40,105,110,116,32,40,42,102,80,116,114,41,40,105,110,116,41,41,32,123,10,32,32,112,114,105,110,116,102,40,34,102,117,110,99,32,105,115,32,97,116,32,37,112,92,110,34,44,32,102,80,116,114,41,59,10,125,10,10,105,110,116,32,105,110,116,101,114,101,115,116,105,110,103,70,117,110,99,40,105,110,116,32,97,41,32,123,10,32,32,112,114,105,110,116,102,40,34,104,97,105,32,116,104,101,114,101,33,92,110,34,41,59,10,32,32,114,101,116,117,114,110,32,97,32,42,32,50,59,10,125,10,10,105,110,116,
32,109,97,105,110,40,105,110,116,32,97,114,103,99,44,32,99,104,97,114,42,42,32,97,114,103,118,41,32,123,10,32,32,112,114,105,110,116,70,117,110,99,116,105,111,110,40,105,110,116,101,114,101,115,116,105,110,103,70,117,110,99,41,59,10,125,10],!0,!0)})();if(Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);0<Module.preInit.length;)Module.preInit.pop()();var shouldRunNow=!0;Module.noInitialRun&&(shouldRunNow=!1);run();
